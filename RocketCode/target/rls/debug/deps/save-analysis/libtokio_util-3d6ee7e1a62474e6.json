{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3","program":"C:\\Users\\trexx\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","--cfg","feature=\"tracing\"","-C","metadata=3d6ee7e1a62474e6","-C","extra-filename=-3d6ee7e1a62474e6","--out-dir","c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libbytes-68c44aea9a0fa3ea.rmeta","--extern","futures_core=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libfutures_core-e34f210f395a45b5.rmeta","--extern","futures_sink=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libfutures_sink-8c29533238f7a4d0.rmeta","--extern","pin_project_lite=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libpin_project_lite-e22eb2e62c630ccc.rmeta","--extern","tokio=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libtokio-c7726f06ec36a7ef.rmeta","--extern","tracing=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libtracing-7eef4ae40152549b.rmeta","--cap-lints","allow","-L","native=C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\trexx\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libtokio_util-3d6ee7e1a62474e6.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[4815283908047614579,0]},"crate_root":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src","external_crates":[{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[11650812661830545456,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":17,"id":{"name":"futures_sink","disambiguator":[1247065067350179424,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":18,"id":{"name":"tokio","disambiguator":[18145347387569012055,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":19,"id":{"name":"winapi","disambiguator":[12261641486033521270,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":20,"id":{"name":"mio","disambiguator":[4629354155908151500,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":21,"id":{"name":"log","disambiguator":[500290388089087630,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":22,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":23,"id":{"name":"windows_sys","disambiguator":[8944581579481882201,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":24,"id":{"name":"bytes","disambiguator":[14130041510002590541,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":25,"id":{"name":"once_cell","disambiguator":[2720024562785292442,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":26,"id":{"name":"tokio_macros","disambiguator":[17274114679241400230,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":27,"id":{"name":"memchr","disambiguator":[11795001318777741512,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":28,"id":{"name":"socket2","disambiguator":[11091397766708226445,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":29,"id":{"name":"num_cpus","disambiguator":[9680463424726089930,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","num":30,"id":{"name":"futures_core","disambiguator":[11080074677927752119,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","num":31,"id":{"name":"tracing","disambiguator":[2523797520002711195,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","num":32,"id":{"name":"tracing_core","disambiguator":[2033363701727296675,0]}}],"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157926,"byte_end":17157936,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157975,"byte_end":17157982,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158021,"byte_end":17158028,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158190,"byte_end":17158196,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158198,"byte_end":17158209,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158257,"byte_end":17158267,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158316,"byte_end":17158327,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158389,"byte_end":17158409,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158411,"byte_end":17158436,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158485,"byte_end":17158495,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158497,"byte_end":17158512,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158577,"byte_end":17158594,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158596,"byte_end":17158618,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257816,"byte_end":17257824,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257855,"byte_end":17257867,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257898,"byte_end":17257910,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257934,"byte_end":17257947,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257949,"byte_end":17257963,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7099,"byte_end":7108,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7110,"byte_end":7127,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7129,"byte_end":7154,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7183,"byte_end":7196,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7198,"byte_end":7208,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7256,"byte_end":7269,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7312,"byte_end":7329,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":459},{"krate":0,"index":1306},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1163}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\cfg.rs","byte_start":5583,"byte_end":5608,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17147654,"byte_end":17147707,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17147708,"byte_end":17147711,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17147712,"byte_end":17147787,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17147788,"byte_end":17147853,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17147854,"byte_end":17147857,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17147858,"byte_end":17147938,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17147939,"byte_end":17148014,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148015,"byte_end":17148063,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148064,"byte_end":17148067,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148068,"byte_end":17148091,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148092,"byte_end":17148095,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148096,"byte_end":17148175,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148176,"byte_end":17148255,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148256,"byte_end":17148327,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148328,"byte_end":17148398,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148399,"byte_end":17148477,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148478,"byte_end":17148554,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148555,"byte_end":17148588,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148589,"byte_end":17148592,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148593,"byte_end":17148673,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148674,"byte_end":17148754,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148755,"byte_end":17148805,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148806,"byte_end":17148809,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148810,"byte_end":17148861,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148862,"byte_end":17148911,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148912,"byte_end":17148963,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148964,"byte_end":17148967,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17148968,"byte_end":17149033,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149034,"byte_end":17149037,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149038,"byte_end":17149115,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149116,"byte_end":17149157,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149158,"byte_end":17149161,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149162,"byte_end":17149242,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149243,"byte_end":17149322,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149323,"byte_end":17149401,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149402,"byte_end":17149481,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149482,"byte_end":17149496,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149497,"byte_end":17149500,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149501,"byte_end":17149580,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149581,"byte_end":17149660,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149661,"byte_end":17149678,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149679,"byte_end":17149682,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149683,"byte_end":17149760,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149761,"byte_end":17149840,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149841,"byte_end":17149918,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149919,"byte_end":17149989,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17149990,"byte_end":17150039,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150040,"byte_end":17150043,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150044,"byte_end":17150057,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150058,"byte_end":17150090,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150091,"byte_end":17150158,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150159,"byte_end":17150273,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150274,"byte_end":17150311,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150312,"byte_end":17150373,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150374,"byte_end":17150423,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150424,"byte_end":17150427,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150428,"byte_end":17150469,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150470,"byte_end":17150480,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150481,"byte_end":17150565,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150566,"byte_end":17150622,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150623,"byte_end":17150626,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150627,"byte_end":17150648,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150649,"byte_end":17150716,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150717,"byte_end":17150745,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150746,"byte_end":17150759,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150760,"byte_end":17150778,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150779,"byte_end":17150788,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150789,"byte_end":17150792,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150793,"byte_end":17150852,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150853,"byte_end":17150877,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150878,"byte_end":17150887,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150888,"byte_end":17150893,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150894,"byte_end":17150902,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150903,"byte_end":17150910,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150911,"byte_end":17150985,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150986,"byte_end":17150989,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17150990,"byte_end":17151012,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151013,"byte_end":17151016,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151017,"byte_end":17151094,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151095,"byte_end":17151171,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151172,"byte_end":17151251,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151252,"byte_end":17151306,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151307,"byte_end":17151310,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151311,"byte_end":17151355,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151356,"byte_end":17151363,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151364,"byte_end":17151399,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151400,"byte_end":17151431,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151432,"byte_end":17151435,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151436,"byte_end":17151465,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151466,"byte_end":17151469,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151470,"byte_end":17151509,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151510,"byte_end":17151513,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151514,"byte_end":17151552,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151553,"byte_end":17151580,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151581,"byte_end":17151617,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151618,"byte_end":17151621,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151622,"byte_end":17151640,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151641,"byte_end":17151663,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151664,"byte_end":17151694,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151695,"byte_end":17151749,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151750,"byte_end":17151780,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151781,"byte_end":17151838,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151839,"byte_end":17151871,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151872,"byte_end":17151885,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151886,"byte_end":17151889,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151890,"byte_end":17151924,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151925,"byte_end":17151969,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17151970,"byte_end":17152022,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152023,"byte_end":17152090,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152091,"byte_end":17152094,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152095,"byte_end":17152169,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152170,"byte_end":17152236,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152237,"byte_end":17152266,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152267,"byte_end":17152314,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152315,"byte_end":17152367,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152368,"byte_end":17152439,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152440,"byte_end":17152459,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152460,"byte_end":17152473,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152474,"byte_end":17152477,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152478,"byte_end":17152517,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152518,"byte_end":17152573,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152574,"byte_end":17152592,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152593,"byte_end":17152669,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152670,"byte_end":17152736,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152737,"byte_end":17152789,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152790,"byte_end":17152793,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152794,"byte_end":17152874,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152875,"byte_end":17152900,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152901,"byte_end":17152933,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152934,"byte_end":17152947,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152948,"byte_end":17152951,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17152952,"byte_end":17153024,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153025,"byte_end":17153051,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153052,"byte_end":17153103,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153104,"byte_end":17153140,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153141,"byte_end":17153144,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153145,"byte_end":17153223,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153224,"byte_end":17153267,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153268,"byte_end":17153315,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153316,"byte_end":17153352,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153353,"byte_end":17153397,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153398,"byte_end":17153454,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153455,"byte_end":17153503,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153504,"byte_end":17153526,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153527,"byte_end":17153545,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153546,"byte_end":17153559,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153560,"byte_end":17153569,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153570,"byte_end":17153575,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153576,"byte_end":17153583,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153584,"byte_end":17153587,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153588,"byte_end":17153611,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153612,"byte_end":17153615,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153616,"byte_end":17153694,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153695,"byte_end":17153768,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153769,"byte_end":17153845,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153846,"byte_end":17153926,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153927,"byte_end":17153943,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153944,"byte_end":17153947,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17153948,"byte_end":17154028,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154029,"byte_end":17154108,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154109,"byte_end":17154189,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154190,"byte_end":17154262,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154263,"byte_end":17154266,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154267,"byte_end":17154344,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154345,"byte_end":17154423,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154424,"byte_end":17154497,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154498,"byte_end":17154564,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154565,"byte_end":17154568,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154569,"byte_end":17154582,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154583,"byte_end":17154616,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154617,"byte_end":17154651,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154652,"byte_end":17154689,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154690,"byte_end":17154757,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154758,"byte_end":17154793,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154794,"byte_end":17154855,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154856,"byte_end":17154902,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154903,"byte_end":17154964,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154965,"byte_end":17154968,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154969,"byte_end":17154997,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17154998,"byte_end":17155001,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155002,"byte_end":17155043,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155044,"byte_end":17155054,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155055,"byte_end":17155079,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155080,"byte_end":17155154,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155155,"byte_end":17155197,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155198,"byte_end":17155212,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155213,"byte_end":17155270,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155271,"byte_end":17155320,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155321,"byte_end":17155335,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155336,"byte_end":17155373,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155374,"byte_end":17155425,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155426,"byte_end":17155472,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155473,"byte_end":17155503,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155504,"byte_end":17155518,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155519,"byte_end":17155528,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155529,"byte_end":17155534,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155535,"byte_end":17155542,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155543,"byte_end":17155550,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155551,"byte_end":17155626,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155627,"byte_end":17155700,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155701,"byte_end":17155743,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155744,"byte_end":17155747,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155748,"byte_end":17155770,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155771,"byte_end":17155774,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155775,"byte_end":17155852,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155853,"byte_end":17155929,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17155930,"byte_end":17156006,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156007,"byte_end":17156030,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156031,"byte_end":17156034,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156035,"byte_end":17156080,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156081,"byte_end":17156088,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156089,"byte_end":17156124,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156125,"byte_end":17156149,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156150,"byte_end":17156153,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156154,"byte_end":17156183,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156184,"byte_end":17156187,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156188,"byte_end":17156227,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156228,"byte_end":17156231,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156232,"byte_end":17156278,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156279,"byte_end":17156315,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156316,"byte_end":17156319,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156320,"byte_end":17156411,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156412,"byte_end":17156486,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156487,"byte_end":17156509,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156510,"byte_end":17156543,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156544,"byte_end":17156591,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156592,"byte_end":17156644,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156645,"byte_end":17156720,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156721,"byte_end":17156740,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156741,"byte_end":17156754,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156755,"byte_end":17156758,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156759,"byte_end":17156811,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156812,"byte_end":17156889,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156890,"byte_end":17156954,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156955,"byte_end":17156958,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17156959,"byte_end":17157002,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157003,"byte_end":17157043,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157044,"byte_end":17157047,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157048,"byte_end":17157105,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157106,"byte_end":17157152,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157153,"byte_end":17157204,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157205,"byte_end":17157223,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157224,"byte_end":17157233,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157234,"byte_end":17157239,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157240,"byte_end":17157247,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157248,"byte_end":17157251,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157252,"byte_end":17157291,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157292,"byte_end":17157333,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157334,"byte_end":17157370,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157371,"byte_end":17157403,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157404,"byte_end":17157500,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157501,"byte_end":17157552,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157553,"byte_end":17157606,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157607,"byte_end":17157650,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157651,"byte_end":17157695,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157696,"byte_end":17157744,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157745,"byte_end":17157793,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157794,"byte_end":17157840,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17157841,"byte_end":17157880,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159904,"byte_end":17159914,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158747,"byte_end":17158832,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158833,"byte_end":17158836,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158837,"byte_end":17158875,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158876,"byte_end":17158914,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158915,"byte_end":17158918,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158919,"byte_end":17158932,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158933,"byte_end":17158936,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17158937,"byte_end":17159018,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159019,"byte_end":17159022,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159023,"byte_end":17159062,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159063,"byte_end":17159096,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159097,"byte_end":17159126,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159127,"byte_end":17159130,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159131,"byte_end":17159138,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159139,"byte_end":17159157,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159158,"byte_end":17159188,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159189,"byte_end":17159213,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159214,"byte_end":17159221,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159222,"byte_end":17159251,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159252,"byte_end":17159304,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159305,"byte_end":17159308,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159309,"byte_end":17159327,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159328,"byte_end":17159345,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159346,"byte_end":17159426,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159427,"byte_end":17159461,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159462,"byte_end":17159515,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159516,"byte_end":17159527,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159528,"byte_end":17159535,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159536,"byte_end":17159541,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159542,"byte_end":17159589,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159590,"byte_end":17159643,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159644,"byte_end":17159702,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159703,"byte_end":17159782,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159783,"byte_end":17159795,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159796,"byte_end":17159803,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159804,"byte_end":17159811,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159812,"byte_end":17159815,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17160016,"byte_end":17160019,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159943,"byte_end":17160004,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162257,"byte_end":17162264,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17160971,"byte_end":17161006,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161007,"byte_end":17161010,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161011,"byte_end":17161080,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161081,"byte_end":17161160,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161161,"byte_end":17161233,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161234,"byte_end":17161258,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161259,"byte_end":17161262,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161263,"byte_end":17161331,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161332,"byte_end":17161409,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161410,"byte_end":17161471,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161472,"byte_end":17161475,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161476,"byte_end":17161537,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161538,"byte_end":17161600,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161601,"byte_end":17161604,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161605,"byte_end":17161668,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161669,"byte_end":17161732,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161733,"byte_end":17161812,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161813,"byte_end":17161887,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161888,"byte_end":17161907,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161908,"byte_end":17161911,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161912,"byte_end":17161980,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17161981,"byte_end":17162043,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162044,"byte_end":17162119,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162120,"byte_end":17162160,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162161,"byte_end":17162164,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162165,"byte_end":17162201,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162202,"byte_end":17162246,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162312,"byte_end":17162316,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162271,"byte_end":17162302,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163082,"byte_end":17163087,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162323,"byte_end":17162375,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162380,"byte_end":17162383,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162388,"byte_end":17162457,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162462,"byte_end":17162532,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162537,"byte_end":17162583,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162588,"byte_end":17162591,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162596,"byte_end":17162672,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162677,"byte_end":17162752,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162757,"byte_end":17162832,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162837,"byte_end":17162877,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162882,"byte_end":17162885,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162890,"byte_end":17162964,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17162969,"byte_end":17163015,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163020,"byte_end":17163023,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163028,"byte_end":17163072,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166023,"byte_end":17166029,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163111,"byte_end":17163176,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163181,"byte_end":17163184,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163189,"byte_end":17163263,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163268,"byte_end":17163340,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163345,"byte_end":17163418,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163423,"byte_end":17163466,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163471,"byte_end":17163474,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163479,"byte_end":17163552,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163557,"byte_end":17163620,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163625,"byte_end":17163700,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163705,"byte_end":17163780,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163785,"byte_end":17163808,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163813,"byte_end":17163816,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163821,"byte_end":17163893,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163898,"byte_end":17163972,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17163977,"byte_end":17164047,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164052,"byte_end":17164055,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164060,"byte_end":17164128,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164133,"byte_end":17164204,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164209,"byte_end":17164289,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164294,"byte_end":17164306,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164311,"byte_end":17164314,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164319,"byte_end":17164389,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164394,"byte_end":17164469,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164474,"byte_end":17164511,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164516,"byte_end":17164519,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164524,"byte_end":17164560,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164565,"byte_end":17164609,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164614,"byte_end":17164617,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164622,"byte_end":17164645,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164650,"byte_end":17164653,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164658,"byte_end":17164732,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164737,"byte_end":17164811,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164816,"byte_end":17164869,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164874,"byte_end":17164877,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164882,"byte_end":17164953,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17164958,"byte_end":17165028,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165033,"byte_end":17165049,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165054,"byte_end":17165057,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165062,"byte_end":17165075,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165080,"byte_end":17165098,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165103,"byte_end":17165108,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165113,"byte_end":17165139,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165144,"byte_end":17165181,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165186,"byte_end":17165191,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165196,"byte_end":17165217,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165222,"byte_end":17165227,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165232,"byte_end":17165262,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165267,"byte_end":17165281,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165286,"byte_end":17165317,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165322,"byte_end":17165355,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165360,"byte_end":17165363,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165368,"byte_end":17165461,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165466,"byte_end":17165484,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165489,"byte_end":17165492,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165497,"byte_end":17165569,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165574,"byte_end":17165634,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165639,"byte_end":17165691,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165696,"byte_end":17165758,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165763,"byte_end":17165830,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165835,"byte_end":17165838,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165843,"byte_end":17165871,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165876,"byte_end":17165885,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165890,"byte_end":17165895,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165900,"byte_end":17165907,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165912,"byte_end":17165915,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165920,"byte_end":17165989,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17165994,"byte_end":17166015,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167195,"byte_end":17167205,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166110,"byte_end":17166182,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166187,"byte_end":17166236,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166241,"byte_end":17166244,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166249,"byte_end":17166317,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166322,"byte_end":17166389,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166394,"byte_end":17166462,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166467,"byte_end":17166543,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166548,"byte_end":17166614,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166619,"byte_end":17166622,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166627,"byte_end":17166695,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166700,"byte_end":17166775,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166780,"byte_end":17166855,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166860,"byte_end":17166932,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166937,"byte_end":17166979,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166984,"byte_end":17166987,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17166992,"byte_end":17167067,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167072,"byte_end":17167150,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167155,"byte_end":17167187,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168813,"byte_end":17168819,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167623,"byte_end":17167703,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167708,"byte_end":17167784,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167789,"byte_end":17167792,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167797,"byte_end":17167872,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167877,"byte_end":17167947,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17167952,"byte_end":17168023,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168028,"byte_end":17168100,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168105,"byte_end":17168163,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168168,"byte_end":17168171,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168176,"byte_end":17168245,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168250,"byte_end":17168325,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168330,"byte_end":17168406,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168411,"byte_end":17168433,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168438,"byte_end":17168441,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168446,"byte_end":17168519,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168524,"byte_end":17168597,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168602,"byte_end":17168678,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168683,"byte_end":17168686,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168691,"byte_end":17168727,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168732,"byte_end":17168764,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17168769,"byte_end":17168805,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169153,"byte_end":17169160,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17168998,"byte_end":17169070,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169071,"byte_end":17169091,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169092,"byte_end":17169095,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169096,"byte_end":17169142,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169425,"byte_end":17169430,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169173,"byte_end":17169205,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169210,"byte_end":17169213,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169218,"byte_end":17169295,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169300,"byte_end":17169356,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169361,"byte_end":17169364,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169369,"byte_end":17169415,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169781,"byte_end":17169787,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169454,"byte_end":17169499,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169504,"byte_end":17169507,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169512,"byte_end":17169586,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169591,"byte_end":17169671,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169676,"byte_end":17169714,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169719,"byte_end":17169722,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17169727,"byte_end":17169773,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183427,"byte_end":17183433,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1727}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185206,"byte_end":17185209,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183575,"byte_end":17183655,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183660,"byte_end":17183741,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183746,"byte_end":17183749,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183754,"byte_end":17183829,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183834,"byte_end":17183904,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183909,"byte_end":17183978,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183983,"byte_end":17184055,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184060,"byte_end":17184118,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184123,"byte_end":17184126,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184131,"byte_end":17184202,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184207,"byte_end":17184284,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184289,"byte_end":17184365,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184370,"byte_end":17184392,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184397,"byte_end":17184400,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184405,"byte_end":17184478,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184483,"byte_end":17184556,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184561,"byte_end":17184637,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184642,"byte_end":17184645,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184650,"byte_end":17184726,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184731,"byte_end":17184807,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184812,"byte_end":17184887,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184892,"byte_end":17184927,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184932,"byte_end":17184935,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184940,"byte_end":17184976,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17184981,"byte_end":17185013,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185018,"byte_end":17185055,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185060,"byte_end":17185098,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185103,"byte_end":17185194,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186817,"byte_end":17186830,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185422,"byte_end":17185502,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185507,"byte_end":17185588,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185593,"byte_end":17185642,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185647,"byte_end":17185650,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185655,"byte_end":17185730,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185735,"byte_end":17185805,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185810,"byte_end":17185879,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185884,"byte_end":17185956,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17185961,"byte_end":17186019,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186024,"byte_end":17186027,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186032,"byte_end":17186103,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186108,"byte_end":17186185,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186190,"byte_end":17186266,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186271,"byte_end":17186293,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186298,"byte_end":17186301,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186306,"byte_end":17186379,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186384,"byte_end":17186457,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186462,"byte_end":17186538,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186543,"byte_end":17186546,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186551,"byte_end":17186587,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186592,"byte_end":17186624,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186629,"byte_end":17186666,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186671,"byte_end":17186709,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17186714,"byte_end":17186805,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188977,"byte_end":17188987,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187400,"byte_end":17187480,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187485,"byte_end":17187566,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187571,"byte_end":17187574,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187579,"byte_end":17187654,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187659,"byte_end":17187729,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187734,"byte_end":17187805,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187810,"byte_end":17187882,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187887,"byte_end":17187945,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187950,"byte_end":17187953,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187958,"byte_end":17188029,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188034,"byte_end":17188111,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188116,"byte_end":17188192,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188197,"byte_end":17188219,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188224,"byte_end":17188227,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188232,"byte_end":17188311,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188316,"byte_end":17188393,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188398,"byte_end":17188401,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188406,"byte_end":17188479,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188484,"byte_end":17188557,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188562,"byte_end":17188638,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188643,"byte_end":17188646,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188651,"byte_end":17188687,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188692,"byte_end":17188724,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188729,"byte_end":17188767,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188772,"byte_end":17188810,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188815,"byte_end":17188869,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17188874,"byte_end":17188965,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189622,"byte_end":17189629,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189339,"byte_end":17189402,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189407,"byte_end":17189420,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189425,"byte_end":17189428,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189433,"byte_end":17189508,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189513,"byte_end":17189583,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189588,"byte_end":17189610,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189973,"byte_end":17189980,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189682,"byte_end":17189753,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189758,"byte_end":17189771,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189776,"byte_end":17189779,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189784,"byte_end":17189859,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189864,"byte_end":17189934,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17189939,"byte_end":17189961,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190343,"byte_end":17190354,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190045,"byte_end":17190123,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190128,"byte_end":17190141,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190146,"byte_end":17190149,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190154,"byte_end":17190229,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190234,"byte_end":17190304,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190309,"byte_end":17190331,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190701,"byte_end":17190706,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190450,"byte_end":17190508,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190513,"byte_end":17190526,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190531,"byte_end":17190534,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190539,"byte_end":17190613,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190618,"byte_end":17190689,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191018,"byte_end":17191027,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190759,"byte_end":17190825,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190830,"byte_end":17190843,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190848,"byte_end":17190851,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190856,"byte_end":17190930,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17190935,"byte_end":17191006,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191364,"byte_end":17191373,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191092,"byte_end":17191160,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191165,"byte_end":17191189,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191194,"byte_end":17191197,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191202,"byte_end":17191276,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191281,"byte_end":17191352,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192064,"byte_end":17192077,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191805,"byte_end":17191871,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191876,"byte_end":17191889,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191894,"byte_end":17191897,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191902,"byte_end":17191976,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17191981,"byte_end":17192052,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192223,"byte_end":17192234,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192168,"byte_end":17192211,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192369,"byte_end":17192384,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192306,"byte_end":17192357,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192524,"byte_end":17192536,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192468,"byte_end":17192512,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192673,"byte_end":17192689,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192609,"byte_end":17192661,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193039,"byte_end":17193049,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192774,"byte_end":17192837,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192842,"byte_end":17192845,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192850,"byte_end":17192925,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17192930,"byte_end":17193000,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193005,"byte_end":17193027,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193421,"byte_end":17193431,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193099,"byte_end":17193173,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193178,"byte_end":17193219,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193224,"byte_end":17193227,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193232,"byte_end":17193307,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193312,"byte_end":17193382,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193387,"byte_end":17193409,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195405,"byte_end":17195416,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195090,"byte_end":17195161,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195162,"byte_end":17195234,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195235,"byte_end":17195295,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195296,"byte_end":17195299,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195300,"byte_end":17195336,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195354,"byte_end":17195393,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195502,"byte_end":17195504,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195429,"byte_end":17195493,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195536,"byte_end":17195541,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195514,"byte_end":17195527,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195606,"byte_end":17195614,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195551,"byte_end":17195597,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195701,"byte_end":17195710,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195631,"byte_end":17195692,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195943,"byte_end":17195946,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195891,"byte_end":17195931,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17196675,"byte_end":17196685,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1686}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17196936,"byte_end":17196939,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17196868,"byte_end":17196924,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197287,"byte_end":17197300,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197171,"byte_end":17197253,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197258,"byte_end":17197275,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198054,"byte_end":17198061,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197767,"byte_end":17197830,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197835,"byte_end":17197852,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197857,"byte_end":17197860,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197865,"byte_end":17197940,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197945,"byte_end":17198015,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198020,"byte_end":17198042,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198409,"byte_end":17198416,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198114,"byte_end":17198185,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198190,"byte_end":17198207,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198212,"byte_end":17198215,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198220,"byte_end":17198295,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198300,"byte_end":17198370,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198375,"byte_end":17198397,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198783,"byte_end":17198794,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198481,"byte_end":17198559,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198564,"byte_end":17198581,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198586,"byte_end":17198589,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198594,"byte_end":17198669,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198674,"byte_end":17198744,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198749,"byte_end":17198771,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199159,"byte_end":17199169,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198890,"byte_end":17198957,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198962,"byte_end":17198965,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17198970,"byte_end":17199045,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199050,"byte_end":17199120,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199125,"byte_end":17199147,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199281,"byte_end":17199288,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199219,"byte_end":17199269,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199411,"byte_end":17199422,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199341,"byte_end":17199399,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199587,"byte_end":17199598,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199487,"byte_end":17199546,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17199551,"byte_end":17199575,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200114,"byte_end":17200129,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200044,"byte_end":17200102,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200275,"byte_end":17200286,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200220,"byte_end":17200263,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200416,"byte_end":17200431,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200353,"byte_end":17200404,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1642},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17202532,"byte_end":17202543,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1645}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17202750,"byte_end":17202753,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17202681,"byte_end":17202738,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203311,"byte_end":17203318,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203023,"byte_end":17203086,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203091,"byte_end":17203109,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203114,"byte_end":17203117,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203122,"byte_end":17203197,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203202,"byte_end":17203272,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203277,"byte_end":17203299,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203667,"byte_end":17203674,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203371,"byte_end":17203442,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203447,"byte_end":17203465,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203470,"byte_end":17203473,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203478,"byte_end":17203553,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203558,"byte_end":17203628,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203633,"byte_end":17203655,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204042,"byte_end":17204053,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203739,"byte_end":17203817,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203822,"byte_end":17203840,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203845,"byte_end":17203848,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203853,"byte_end":17203928,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17203933,"byte_end":17204003,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204008,"byte_end":17204030,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204419,"byte_end":17204429,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204149,"byte_end":17204217,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204222,"byte_end":17204225,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204230,"byte_end":17204305,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204310,"byte_end":17204380,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204385,"byte_end":17204407,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204541,"byte_end":17204548,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204479,"byte_end":17204529,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204671,"byte_end":17204682,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204601,"byte_end":17204659,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204848,"byte_end":17204859,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204747,"byte_end":17204807,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17204812,"byte_end":17204836,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205377,"byte_end":17205392,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205307,"byte_end":17205365,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205539,"byte_end":17205551,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205483,"byte_end":17205527,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205682,"byte_end":17205698,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205618,"byte_end":17205670,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":1214},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":974},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":976},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":1000},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207225,"byte_end":17207277,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207278,"byte_end":17207281,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207282,"byte_end":17207352,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207353,"byte_end":17207411,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207412,"byte_end":17207484,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207485,"byte_end":17207555,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207556,"byte_end":17207623,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207624,"byte_end":17207627,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207628,"byte_end":17207649,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207650,"byte_end":17207653,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207654,"byte_end":17207729,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207730,"byte_end":17207801,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207802,"byte_end":17207873,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207874,"byte_end":17207944,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207945,"byte_end":17207985,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207986,"byte_end":17207989,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207990,"byte_end":17207997,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17207998,"byte_end":17208041,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208042,"byte_end":17208100,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208101,"byte_end":17208104,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208105,"byte_end":17208160,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208161,"byte_end":17208203,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208204,"byte_end":17208209,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208210,"byte_end":17208262,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208263,"byte_end":17208268,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208269,"byte_end":17208291,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208292,"byte_end":17208299,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208300,"byte_end":17208303,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208304,"byte_end":17208376,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208377,"byte_end":17208448,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208449,"byte_end":17208468,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208469,"byte_end":17208472,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208473,"byte_end":17208484,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208485,"byte_end":17208534,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208535,"byte_end":17208584,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208585,"byte_end":17208634,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208635,"byte_end":17208642,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208643,"byte_end":17208646,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208647,"byte_end":17208685,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208686,"byte_end":17208689,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208690,"byte_end":17208697,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208698,"byte_end":17208741,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208742,"byte_end":17208800,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208801,"byte_end":17208804,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208805,"byte_end":17208830,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208831,"byte_end":17208852,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208853,"byte_end":17208856,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208857,"byte_end":17208933,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208934,"byte_end":17208943,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208944,"byte_end":17208986,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208987,"byte_end":17208992,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17208993,"byte_end":17209066,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209067,"byte_end":17209114,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209115,"byte_end":17209118,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209119,"byte_end":17209156,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209157,"byte_end":17209171,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209172,"byte_end":17209177,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209178,"byte_end":17209185,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209186,"byte_end":17209189,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209190,"byte_end":17209232,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209233,"byte_end":17209236,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209237,"byte_end":17209248,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209249,"byte_end":17209288,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209289,"byte_end":17209328,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209329,"byte_end":17209368,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209369,"byte_end":17209376,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209377,"byte_end":17209380,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209381,"byte_end":17209395,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209396,"byte_end":17209399,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209400,"byte_end":17209475,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209476,"byte_end":17209549,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209550,"byte_end":17209616,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209617,"byte_end":17209686,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209687,"byte_end":17209752,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209753,"byte_end":17209756,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209757,"byte_end":17209773,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209774,"byte_end":17209777,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209778,"byte_end":17209854,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209855,"byte_end":17209896,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209897,"byte_end":17209900,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209901,"byte_end":17209908,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209909,"byte_end":17209940,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209941,"byte_end":17209991,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17209992,"byte_end":17210033,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210034,"byte_end":17210069,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210070,"byte_end":17210118,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210119,"byte_end":17210154,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210155,"byte_end":17210203,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210204,"byte_end":17210253,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210254,"byte_end":17210276,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210277,"byte_end":17210284,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210285,"byte_end":17210307,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210308,"byte_end":17210315,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210316,"byte_end":17210319,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210320,"byte_end":17210368,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210369,"byte_end":17210372,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210373,"byte_end":17210384,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210385,"byte_end":17210437,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210438,"byte_end":17210503,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210504,"byte_end":17210569,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210570,"byte_end":17210635,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210636,"byte_end":17210643,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210644,"byte_end":17210647,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210648,"byte_end":17210724,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210725,"byte_end":17210799,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210800,"byte_end":17210872,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210873,"byte_end":17210949,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210950,"byte_end":17210992,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210993,"byte_end":17210996,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17210997,"byte_end":17211013,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211014,"byte_end":17211017,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211018,"byte_end":17211093,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211094,"byte_end":17211135,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211136,"byte_end":17211139,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211140,"byte_end":17211147,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211148,"byte_end":17211179,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211180,"byte_end":17211230,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211231,"byte_end":17211272,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211273,"byte_end":17211308,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211309,"byte_end":17211357,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211358,"byte_end":17211393,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211394,"byte_end":17211442,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211443,"byte_end":17211502,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211503,"byte_end":17211525,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211526,"byte_end":17211533,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211534,"byte_end":17211556,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211557,"byte_end":17211564,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211565,"byte_end":17211568,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211569,"byte_end":17211617,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211618,"byte_end":17211621,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211622,"byte_end":17211633,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211634,"byte_end":17211683,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211684,"byte_end":17211738,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211739,"byte_end":17211793,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211794,"byte_end":17211848,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211849,"byte_end":17211856,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211857,"byte_end":17211860,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211861,"byte_end":17211934,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17211935,"byte_end":17212002,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212003,"byte_end":17212006,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212007,"byte_end":17212023,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212024,"byte_end":17212027,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212028,"byte_end":17212104,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212105,"byte_end":17212177,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212178,"byte_end":17212217,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212218,"byte_end":17212221,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212222,"byte_end":17212229,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212230,"byte_end":17212261,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212262,"byte_end":17212312,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212313,"byte_end":17212354,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212355,"byte_end":17212390,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212391,"byte_end":17212439,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212440,"byte_end":17212475,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212476,"byte_end":17212523,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212524,"byte_end":17212544,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212545,"byte_end":17212567,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212568,"byte_end":17212575,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212576,"byte_end":17212598,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212599,"byte_end":17212606,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212607,"byte_end":17212610,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212611,"byte_end":17212659,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212660,"byte_end":17212663,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212664,"byte_end":17212675,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212676,"byte_end":17212728,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212729,"byte_end":17212794,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212795,"byte_end":17212860,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212861,"byte_end":17212926,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212927,"byte_end":17212934,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212935,"byte_end":17212938,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17212939,"byte_end":17213011,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213012,"byte_end":17213087,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213088,"byte_end":17213160,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213161,"byte_end":17213237,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213238,"byte_end":17213311,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213312,"byte_end":17213315,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213316,"byte_end":17213332,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213333,"byte_end":17213336,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213337,"byte_end":17213411,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213412,"byte_end":17213479,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213480,"byte_end":17213483,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213484,"byte_end":17213491,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213492,"byte_end":17213523,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213524,"byte_end":17213574,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213575,"byte_end":17213616,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213617,"byte_end":17213652,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213653,"byte_end":17213701,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213702,"byte_end":17213733,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213734,"byte_end":17213782,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213783,"byte_end":17213803,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213804,"byte_end":17213826,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213827,"byte_end":17213834,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213835,"byte_end":17213857,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213858,"byte_end":17213865,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213866,"byte_end":17213869,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213870,"byte_end":17213918,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213919,"byte_end":17213922,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213923,"byte_end":17213934,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213935,"byte_end":17213961,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17213962,"byte_end":17214007,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214008,"byte_end":17214053,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214054,"byte_end":17214099,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214100,"byte_end":17214103,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214104,"byte_end":17214132,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214133,"byte_end":17214178,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214179,"byte_end":17214224,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214225,"byte_end":17214270,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214271,"byte_end":17214278,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214279,"byte_end":17214282,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214283,"byte_end":17214355,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214356,"byte_end":17214432,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214433,"byte_end":17214503,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214504,"byte_end":17214573,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214574,"byte_end":17214611,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214612,"byte_end":17214615,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214616,"byte_end":17214690,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214691,"byte_end":17214745,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214746,"byte_end":17214749,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214750,"byte_end":17214766,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214767,"byte_end":17214770,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214771,"byte_end":17214844,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214845,"byte_end":17214921,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214922,"byte_end":17214996,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17214997,"byte_end":17215010,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215011,"byte_end":17215014,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215015,"byte_end":17215022,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215023,"byte_end":17215054,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215055,"byte_end":17215105,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215106,"byte_end":17215147,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215148,"byte_end":17215183,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215184,"byte_end":17215233,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215234,"byte_end":17215269,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215270,"byte_end":17215318,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215319,"byte_end":17215363,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215364,"byte_end":17215386,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215387,"byte_end":17215394,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215395,"byte_end":17215417,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215418,"byte_end":17215425,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215426,"byte_end":17215429,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215430,"byte_end":17215478,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215479,"byte_end":17215482,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215483,"byte_end":17215494,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215495,"byte_end":17215521,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215522,"byte_end":17215572,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215573,"byte_end":17215623,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215624,"byte_end":17215674,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215675,"byte_end":17215678,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215679,"byte_end":17215699,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215700,"byte_end":17215730,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215731,"byte_end":17215761,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215762,"byte_end":17215792,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215793,"byte_end":17215800,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215801,"byte_end":17215804,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215805,"byte_end":17215878,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215879,"byte_end":17215954,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17215955,"byte_end":17216027,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216028,"byte_end":17216066,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216067,"byte_end":17216070,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216071,"byte_end":17216145,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216146,"byte_end":17216222,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216223,"byte_end":17216296,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216297,"byte_end":17216325,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216326,"byte_end":17216329,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216330,"byte_end":17216346,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216347,"byte_end":17216350,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216351,"byte_end":17216424,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216425,"byte_end":17216501,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216502,"byte_end":17216576,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216577,"byte_end":17216649,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216650,"byte_end":17216661,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216662,"byte_end":17216665,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216666,"byte_end":17216673,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216674,"byte_end":17216705,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216706,"byte_end":17216756,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216757,"byte_end":17216798,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216799,"byte_end":17216834,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216835,"byte_end":17216884,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216885,"byte_end":17216920,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216921,"byte_end":17216986,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17216987,"byte_end":17217007,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217008,"byte_end":17217030,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217031,"byte_end":17217038,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217039,"byte_end":17217046,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217047,"byte_end":17217050,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217051,"byte_end":17217099,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217100,"byte_end":17217103,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217104,"byte_end":17217115,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217116,"byte_end":17217142,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217143,"byte_end":17217193,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217194,"byte_end":17217244,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217245,"byte_end":17217295,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217296,"byte_end":17217299,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217300,"byte_end":17217320,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217321,"byte_end":17217351,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217352,"byte_end":17217382,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217383,"byte_end":17217413,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217414,"byte_end":17217421,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217422,"byte_end":17217425,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217426,"byte_end":17217499,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217500,"byte_end":17217574,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217575,"byte_end":17217649,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217650,"byte_end":17217723,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217724,"byte_end":17217800,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217801,"byte_end":17217834,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217835,"byte_end":17217838,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217839,"byte_end":17217855,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217856,"byte_end":17217859,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217860,"byte_end":17217934,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17217935,"byte_end":17218002,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218003,"byte_end":17218006,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218007,"byte_end":17218014,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218015,"byte_end":17218046,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218047,"byte_end":17218097,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218098,"byte_end":17218139,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218140,"byte_end":17218175,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218176,"byte_end":17218224,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218225,"byte_end":17218256,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218257,"byte_end":17218304,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218305,"byte_end":17218351,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218352,"byte_end":17218374,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218375,"byte_end":17218382,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218383,"byte_end":17218405,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218406,"byte_end":17218413,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218414,"byte_end":17218417,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218418,"byte_end":17218466,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218467,"byte_end":17218470,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218471,"byte_end":17218482,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218483,"byte_end":17218539,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218540,"byte_end":17218601,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218602,"byte_end":17218663,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218664,"byte_end":17218725,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218726,"byte_end":17218733,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218734,"byte_end":17218737,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218738,"byte_end":17218812,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218813,"byte_end":17218833,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218834,"byte_end":17218837,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218838,"byte_end":17218852,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218853,"byte_end":17218856,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218857,"byte_end":17218932,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17218933,"byte_end":17219005,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219006,"byte_end":17219074,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219075,"byte_end":17219151,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219152,"byte_end":17219193,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219194,"byte_end":17219197,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219198,"byte_end":17219268,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219269,"byte_end":17219287,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219288,"byte_end":17219291,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219292,"byte_end":17219299,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219300,"byte_end":17219332,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219333,"byte_end":17219383,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219384,"byte_end":17219428,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219429,"byte_end":17219442,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219443,"byte_end":17219478,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219479,"byte_end":17219514,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219515,"byte_end":17219538,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219539,"byte_end":17219546,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219547,"byte_end":17219569,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219570,"byte_end":17219577,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219578,"byte_end":17219581,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219582,"byte_end":17219632,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219633,"byte_end":17219636,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219637,"byte_end":17219648,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219649,"byte_end":17219682,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219683,"byte_end":17219716,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219717,"byte_end":17219750,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219751,"byte_end":17219758,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219759,"byte_end":17219762,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219763,"byte_end":17219832,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219833,"byte_end":17219870,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219871,"byte_end":17219910,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219911,"byte_end":17219956,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17219957,"byte_end":17220004,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220005,"byte_end":17220035,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220036,"byte_end":17220069,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220636,"byte_end":17220643,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220318,"byte_end":17220373,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220374,"byte_end":17220377,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220378,"byte_end":17220453,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220454,"byte_end":17220534,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17220535,"byte_end":17220594,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221314,"byte_end":17221339,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":975}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221229,"byte_end":17221302,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221691,"byte_end":17221711,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221360,"byte_end":17221434,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221435,"byte_end":17221438,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221439,"byte_end":17221518,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221519,"byte_end":17221562,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221563,"byte_end":17221566,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221567,"byte_end":17221620,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221621,"byte_end":17221624,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221625,"byte_end":17221655,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222055,"byte_end":17222058,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221964,"byte_end":17222043,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222285,"byte_end":17222292,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222182,"byte_end":17222257,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222262,"byte_end":17222273,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222514,"byte_end":17222530,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222342,"byte_end":17222383,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222388,"byte_end":17222391,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222396,"byte_end":17222469,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222474,"byte_end":17222502,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222951,"byte_end":17222971,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222595,"byte_end":17222629,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222634,"byte_end":17222637,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222642,"byte_end":17222712,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222717,"byte_end":17222792,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222797,"byte_end":17222869,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17222874,"byte_end":17222939,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17227760,"byte_end":17227775,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17227684,"byte_end":17227745,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228700,"byte_end":17228703,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228154,"byte_end":17228229,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228234,"byte_end":17228245,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228250,"byte_end":17228253,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228258,"byte_end":17228272,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228277,"byte_end":17228280,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228285,"byte_end":17228292,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228297,"byte_end":17228328,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228333,"byte_end":17228381,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228386,"byte_end":17228389,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228394,"byte_end":17228435,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228440,"byte_end":17228475,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228480,"byte_end":17228511,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228516,"byte_end":17228551,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228556,"byte_end":17228585,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228590,"byte_end":17228610,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228615,"byte_end":17228637,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228642,"byte_end":17228649,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228654,"byte_end":17228676,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228681,"byte_end":17228688,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229888,"byte_end":17229898,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229367,"byte_end":17229416,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229421,"byte_end":17229424,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229429,"byte_end":17229461,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229466,"byte_end":17229469,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229474,"byte_end":17229542,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229547,"byte_end":17229550,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229555,"byte_end":17229569,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229574,"byte_end":17229577,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229582,"byte_end":17229589,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229594,"byte_end":17229625,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229630,"byte_end":17229678,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229683,"byte_end":17229686,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229691,"byte_end":17229732,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229737,"byte_end":17229772,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229777,"byte_end":17229798,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229803,"byte_end":17229825,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229830,"byte_end":17229837,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229842,"byte_end":17229864,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229869,"byte_end":17229876,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230530,"byte_end":17230543,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17229997,"byte_end":17230049,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230054,"byte_end":17230057,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230062,"byte_end":17230100,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230105,"byte_end":17230108,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230113,"byte_end":17230181,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230186,"byte_end":17230189,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230194,"byte_end":17230208,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230213,"byte_end":17230216,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230221,"byte_end":17230228,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230233,"byte_end":17230264,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230269,"byte_end":17230317,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230322,"byte_end":17230325,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230330,"byte_end":17230371,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230376,"byte_end":17230411,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230416,"byte_end":17230440,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230445,"byte_end":17230467,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230472,"byte_end":17230479,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230484,"byte_end":17230506,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230511,"byte_end":17230518,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231176,"byte_end":17231189,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230643,"byte_end":17230695,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230700,"byte_end":17230703,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230708,"byte_end":17230746,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230751,"byte_end":17230754,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230759,"byte_end":17230827,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230832,"byte_end":17230835,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230840,"byte_end":17230854,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230859,"byte_end":17230862,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230867,"byte_end":17230874,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230879,"byte_end":17230910,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230915,"byte_end":17230963,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230968,"byte_end":17230971,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17230976,"byte_end":17231017,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231022,"byte_end":17231057,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231062,"byte_end":17231086,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231091,"byte_end":17231113,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231118,"byte_end":17231125,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231130,"byte_end":17231152,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231157,"byte_end":17231164,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232286,"byte_end":17232302,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231358,"byte_end":17231396,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231401,"byte_end":17231404,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231409,"byte_end":17231481,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231486,"byte_end":17231511,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231516,"byte_end":17231519,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231524,"byte_end":17231596,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231601,"byte_end":17231670,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231675,"byte_end":17231748,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231753,"byte_end":17231765,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231770,"byte_end":17231773,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231778,"byte_end":17231853,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231858,"byte_end":17231919,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231924,"byte_end":17231927,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231932,"byte_end":17231946,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231951,"byte_end":17231954,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231959,"byte_end":17231966,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17231971,"byte_end":17232002,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232007,"byte_end":17232055,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232060,"byte_end":17232063,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232068,"byte_end":17232109,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232114,"byte_end":17232149,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232154,"byte_end":17232196,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232201,"byte_end":17232223,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232228,"byte_end":17232235,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232240,"byte_end":17232262,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232267,"byte_end":17232274,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233401,"byte_end":17233418,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232399,"byte_end":17232469,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232474,"byte_end":17232477,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232482,"byte_end":17232555,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232560,"byte_end":17232580,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232585,"byte_end":17232588,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232593,"byte_end":17232607,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232612,"byte_end":17232615,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232620,"byte_end":17232627,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232632,"byte_end":17232663,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232668,"byte_end":17232716,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232721,"byte_end":17232724,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232729,"byte_end":17232770,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232775,"byte_end":17232810,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232815,"byte_end":17232850,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232855,"byte_end":17232877,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232882,"byte_end":17232889,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232894,"byte_end":17232916,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232921,"byte_end":17232928,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232933,"byte_end":17232936,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17232941,"byte_end":17233015,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233020,"byte_end":17233061,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233066,"byte_end":17233069,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233074,"byte_end":17233093,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233098,"byte_end":17233129,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233134,"byte_end":17233184,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233189,"byte_end":17233230,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233235,"byte_end":17233270,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233275,"byte_end":17233311,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233316,"byte_end":17233338,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233343,"byte_end":17233350,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233355,"byte_end":17233377,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233382,"byte_end":17233389,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234103,"byte_end":17234122,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233539,"byte_end":17233602,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233607,"byte_end":17233610,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233615,"byte_end":17233666,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233671,"byte_end":17233674,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233679,"byte_end":17233747,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233752,"byte_end":17233755,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233760,"byte_end":17233774,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233779,"byte_end":17233782,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233787,"byte_end":17233794,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233799,"byte_end":17233830,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233835,"byte_end":17233883,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233888,"byte_end":17233891,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233896,"byte_end":17233937,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233942,"byte_end":17233977,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17233982,"byte_end":17234013,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234018,"byte_end":17234040,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234045,"byte_end":17234052,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234057,"byte_end":17234079,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234084,"byte_end":17234091,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234781,"byte_end":17234800,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234291,"byte_end":17234357,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234362,"byte_end":17234365,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234370,"byte_end":17234425,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234430,"byte_end":17234433,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234438,"byte_end":17234452,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234457,"byte_end":17234460,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234465,"byte_end":17234472,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234477,"byte_end":17234508,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234513,"byte_end":17234561,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234566,"byte_end":17234569,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234574,"byte_end":17234615,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234620,"byte_end":17234655,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234660,"byte_end":17234691,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234696,"byte_end":17234718,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234723,"byte_end":17234730,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234735,"byte_end":17234757,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234762,"byte_end":17234769,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235354,"byte_end":17235371,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234903,"byte_end":17234976,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17234981,"byte_end":17234999,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235004,"byte_end":17235007,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235012,"byte_end":17235026,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235031,"byte_end":17235034,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235039,"byte_end":17235046,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235051,"byte_end":17235082,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235087,"byte_end":17235135,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235140,"byte_end":17235143,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235148,"byte_end":17235189,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235194,"byte_end":17235229,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235234,"byte_end":17235264,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235269,"byte_end":17235291,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235296,"byte_end":17235303,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235308,"byte_end":17235330,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235335,"byte_end":17235342,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236021,"byte_end":17236029,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235472,"byte_end":17235535,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235540,"byte_end":17235543,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235548,"byte_end":17235609,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235614,"byte_end":17235617,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235622,"byte_end":17235676,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235681,"byte_end":17235684,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235689,"byte_end":17235703,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235708,"byte_end":17235711,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235716,"byte_end":17235723,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235728,"byte_end":17235759,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235764,"byte_end":17235812,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235817,"byte_end":17235820,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235825,"byte_end":17235866,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235871,"byte_end":17235906,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235911,"byte_end":17235931,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235936,"byte_end":17235958,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235963,"byte_end":17235970,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17235975,"byte_end":17235997,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236002,"byte_end":17236009,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236553,"byte_end":17236562,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236127,"byte_end":17236190,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236195,"byte_end":17236198,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236203,"byte_end":17236217,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236222,"byte_end":17236225,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236230,"byte_end":17236237,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236242,"byte_end":17236290,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236295,"byte_end":17236316,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236321,"byte_end":17236356,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236361,"byte_end":17236392,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236397,"byte_end":17236432,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236437,"byte_end":17236466,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236471,"byte_end":17236491,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236496,"byte_end":17236517,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236522,"byte_end":17236529,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236534,"byte_end":17236541,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237222,"byte_end":17237230,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236714,"byte_end":17236767,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236772,"byte_end":17236775,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236780,"byte_end":17236794,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236799,"byte_end":17236802,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236807,"byte_end":17236814,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236819,"byte_end":17236850,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236855,"byte_end":17236903,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236908,"byte_end":17236911,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236916,"byte_end":17236957,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17236962,"byte_end":17236997,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237002,"byte_end":17237033,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237038,"byte_end":17237073,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237078,"byte_end":17237107,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237112,"byte_end":17237132,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237137,"byte_end":17237159,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237164,"byte_end":17237171,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237176,"byte_end":17237198,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237203,"byte_end":17237210,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237807,"byte_end":17237816,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237394,"byte_end":17237448,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237453,"byte_end":17237456,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237461,"byte_end":17237475,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237480,"byte_end":17237483,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237488,"byte_end":17237495,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237500,"byte_end":17237532,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237537,"byte_end":17237587,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237592,"byte_end":17237636,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237641,"byte_end":17237676,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237681,"byte_end":17237716,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237721,"byte_end":17237744,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237749,"byte_end":17237756,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237761,"byte_end":17237783,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237788,"byte_end":17237795,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238429,"byte_end":17238439,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17237977,"byte_end":17238026,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238031,"byte_end":17238034,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238039,"byte_end":17238053,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238058,"byte_end":17238061,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238066,"byte_end":17238073,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238078,"byte_end":17238123,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238128,"byte_end":17238178,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238183,"byte_end":17238239,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238244,"byte_end":17238257,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238262,"byte_end":17238297,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238302,"byte_end":17238337,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238342,"byte_end":17238366,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238371,"byte_end":17238378,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238383,"byte_end":17238405,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238410,"byte_end":17238417,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17239818,"byte_end":17239828,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17239575,"byte_end":17239662,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17239663,"byte_end":17239666,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17239667,"byte_end":17239705,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17239706,"byte_end":17239744,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240928,"byte_end":17240931,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240509,"byte_end":17240569,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240574,"byte_end":17240577,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240582,"byte_end":17240592,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240597,"byte_end":17240600,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240605,"byte_end":17240677,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240682,"byte_end":17240755,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240760,"byte_end":17240827,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240832,"byte_end":17240835,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240840,"byte_end":17240916,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242062,"byte_end":17242081,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241089,"byte_end":17241149,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241154,"byte_end":17241157,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241162,"byte_end":17241225,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241230,"byte_end":17241308,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241313,"byte_end":17241380,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241385,"byte_end":17241457,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241462,"byte_end":17241532,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241537,"byte_end":17241560,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241565,"byte_end":17241568,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241573,"byte_end":17241583,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241588,"byte_end":17241591,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241596,"byte_end":17241671,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241676,"byte_end":17241749,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241754,"byte_end":17241830,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241835,"byte_end":17241908,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241913,"byte_end":17241983,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241988,"byte_end":17241991,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17241996,"byte_end":17242050,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242647,"byte_end":17242657,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242209,"byte_end":17242259,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242264,"byte_end":17242267,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242272,"byte_end":17242279,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242284,"byte_end":17242303,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242308,"byte_end":17242346,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242351,"byte_end":17242354,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242359,"byte_end":17242393,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242398,"byte_end":17242445,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242450,"byte_end":17242457,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242462,"byte_end":17242469,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242474,"byte_end":17242512,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242517,"byte_end":17242520,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242525,"byte_end":17242578,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242583,"byte_end":17242623,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17242628,"byte_end":17242635,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246983,"byte_end":17247004,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246937,"byte_end":17246978,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247040,"byte_end":17247042,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247010,"byte_end":17247035,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246915,"byte_end":17246930,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1269}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246832,"byte_end":17246888,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248964,"byte_end":17248981,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17247778,"byte_end":17247919,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17247920,"byte_end":17247923,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17247924,"byte_end":17247962,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17247963,"byte_end":17248001,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248002,"byte_end":17248005,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248006,"byte_end":17248019,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248020,"byte_end":17248087,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248088,"byte_end":17248091,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248092,"byte_end":17248125,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248126,"byte_end":17248155,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248156,"byte_end":17248159,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248160,"byte_end":17248167,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248168,"byte_end":17248224,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248225,"byte_end":17248259,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248260,"byte_end":17248263,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248264,"byte_end":17248269,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248270,"byte_end":17248317,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248318,"byte_end":17248371,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248372,"byte_end":17248449,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248450,"byte_end":17248485,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248486,"byte_end":17248507,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248508,"byte_end":17248558,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248559,"byte_end":17248622,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248623,"byte_end":17248686,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248687,"byte_end":17248750,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248751,"byte_end":17248807,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248808,"byte_end":17248857,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248858,"byte_end":17248870,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248871,"byte_end":17248878,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248879,"byte_end":17248886,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17248887,"byte_end":17248890,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250316,"byte_end":17250319,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17249874,"byte_end":17249942,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17249947,"byte_end":17249950,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17249955,"byte_end":17249965,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17249970,"byte_end":17249973,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17249978,"byte_end":17250057,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250062,"byte_end":17250136,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250141,"byte_end":17250208,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250213,"byte_end":17250216,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250221,"byte_end":17250304,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251630,"byte_end":17251649,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250599,"byte_end":17250667,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250672,"byte_end":17250675,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250680,"byte_end":17250750,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250755,"byte_end":17250841,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250846,"byte_end":17250916,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17250921,"byte_end":17250998,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251003,"byte_end":17251073,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251078,"byte_end":17251101,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251106,"byte_end":17251109,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251114,"byte_end":17251124,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251129,"byte_end":17251132,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251137,"byte_end":17251219,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251224,"byte_end":17251297,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251302,"byte_end":17251379,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251384,"byte_end":17251457,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251462,"byte_end":17251537,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251542,"byte_end":17251545,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251550,"byte_end":17251618,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252437,"byte_end":17252447,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251906,"byte_end":17251957,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251962,"byte_end":17251965,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251970,"byte_end":17251977,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17251982,"byte_end":17252001,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252006,"byte_end":17252051,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252056,"byte_end":17252059,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252064,"byte_end":17252136,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252141,"byte_end":17252188,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252193,"byte_end":17252200,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252205,"byte_end":17252212,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252217,"byte_end":17252262,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252267,"byte_end":17252270,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252275,"byte_end":17252368,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252373,"byte_end":17252413,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252418,"byte_end":17252425,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256543,"byte_end":17256565,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256496,"byte_end":17256538,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256601,"byte_end":17256603,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256571,"byte_end":17256596,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256467,"byte_end":17256489,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1301}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256383,"byte_end":17256440,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1348},{"krate":0,"index":1387},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1458}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\cfg.rs","byte_start":6222,"byte_end":6244,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257172,"byte_end":17257205,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257206,"byte_end":17257209,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257210,"byte_end":17257291,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257292,"byte_end":17257356,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257357,"byte_end":17257360,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257361,"byte_end":17257427,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257428,"byte_end":17257502,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257503,"byte_end":17257546,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257547,"byte_end":17257550,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257551,"byte_end":17257614,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\mod.rs","byte_start":17257615,"byte_end":17257654,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17259025,"byte_end":17259033,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258102,"byte_end":17258180,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258181,"byte_end":17258184,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258185,"byte_end":17258214,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258215,"byte_end":17258218,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258219,"byte_end":17258232,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258233,"byte_end":17258236,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258237,"byte_end":17258244,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258245,"byte_end":17258278,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258279,"byte_end":17258310,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258311,"byte_end":17258337,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258338,"byte_end":17258387,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258388,"byte_end":17258408,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258409,"byte_end":17258455,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258456,"byte_end":17258459,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258460,"byte_end":17258538,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258539,"byte_end":17258552,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258553,"byte_end":17258657,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258658,"byte_end":17258661,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258662,"byte_end":17258696,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258697,"byte_end":17258719,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258720,"byte_end":17258723,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258724,"byte_end":17258734,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258735,"byte_end":17258754,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258755,"byte_end":17258808,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258809,"byte_end":17258812,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258813,"byte_end":17258832,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258833,"byte_end":17258851,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258852,"byte_end":17258861,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258862,"byte_end":17258867,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258868,"byte_end":17258871,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258872,"byte_end":17258916,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258917,"byte_end":17258941,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258942,"byte_end":17258982,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258983,"byte_end":17258995,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17258996,"byte_end":17259003,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17259004,"byte_end":17259011,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17260919,"byte_end":17260931,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261440,"byte_end":17261443,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261233,"byte_end":17261294,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261299,"byte_end":17261335,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261340,"byte_end":17261343,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261348,"byte_end":17261387,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261392,"byte_end":17261428,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261878,"byte_end":17261891,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"pub fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261617,"byte_end":17261678,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261683,"byte_end":17261719,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261724,"byte_end":17261773,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261778,"byte_end":17261781,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261786,"byte_end":17261825,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261830,"byte_end":17261866,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17264899,"byte_end":17264911,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265528,"byte_end":17265531,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265110,"byte_end":17265190,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265195,"byte_end":17265198,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265203,"byte_end":17265279,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265284,"byte_end":17265355,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265360,"byte_end":17265405,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265410,"byte_end":17265413,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265418,"byte_end":17265453,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265458,"byte_end":17265481,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265486,"byte_end":17265516,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266059,"byte_end":17266080,"line_start":98,"line_end":98,"column_start":12,"column_end":33},"name":"into_inner_with_chunk","qualname":"<StreamReader<S, B>>::into_inner_with_chunk","value":"pub fn into_inner_with_chunk(Self) -> (S, Option<B>)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `StreamReader`, returning a Tuple consisting\n of the underlying stream and an Option of the interal buffer,\n which is Some in case the buffer contains elements.\n","sig":null,"attributes":[{"value":"/ Consumes this `StreamReader`, returning a Tuple consisting","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265855,"byte_end":17265917,"line_start":95,"line_end":95,"column_start":5,"column_end":67}},{"value":"/ of the underlying stream and an Option of the interal buffer,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265922,"byte_end":17265987,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ which is Some in case the buffer contains elements.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265992,"byte_end":17266047,"line_start":97,"line_end":97,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266414,"byte_end":17266421,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266277,"byte_end":17266323,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266328,"byte_end":17266331,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266336,"byte_end":17266402,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266613,"byte_end":17266620,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266468,"byte_end":17266522,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266527,"byte_end":17266530,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266535,"byte_end":17266601,"line_start":117,"line_end":117,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266831,"byte_end":17266842,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266679,"byte_end":17266740,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266745,"byte_end":17266748,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266753,"byte_end":17266819,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17267265,"byte_end":17267275,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266922,"byte_end":17266985,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266990,"byte_end":17266993,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266998,"byte_end":17267061,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/ If you additionally want access to the internal buffer use","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17267066,"byte_end":17267128,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/ [`into_inner_with_chunk`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17267133,"byte_end":17267163,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17267168,"byte_end":17267171,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`into_inner_with_chunk`]: crate::io::StreamReader::into_inner_with_chunk","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17267176,"byte_end":17267253,"line_start":135,"line_end":135,"column_start":5,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7007,"byte_end":7037,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14476,"byte_end":14485,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1462}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14299,"byte_end":14363,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14364,"byte_end":14447,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14748,"byte_end":14754,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14561,"byte_end":14635,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14640,"byte_end":14710,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14715,"byte_end":14736,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8887,"byte_end":8904,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7665,"byte_end":7742,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7743,"byte_end":7753,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7754,"byte_end":7757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7758,"byte_end":7823,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7824,"byte_end":7898,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7899,"byte_end":7902,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7903,"byte_end":7986,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7987,"byte_end":7990,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7991,"byte_end":8005,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8006,"byte_end":8009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8010,"byte_end":8023,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8024,"byte_end":8046,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8047,"byte_end":8091,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8092,"byte_end":8095,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8096,"byte_end":8114,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8115,"byte_end":8136,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8137,"byte_end":8182,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8183,"byte_end":8224,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8225,"byte_end":8228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8229,"byte_end":8280,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8281,"byte_end":8344,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8345,"byte_end":8366,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8367,"byte_end":8416,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8417,"byte_end":8463,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8464,"byte_end":8485,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8486,"byte_end":8503,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8585,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8586,"byte_end":8608,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8609,"byte_end":8626,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8627,"byte_end":8640,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8657,"byte_end":8690,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8691,"byte_end":8766,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8767,"byte_end":8794,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8795,"byte_end":8806,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8807,"byte_end":8810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8811,"byte_end":8861,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8862,"byte_end":8867,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8868,"byte_end":8875,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9131,"byte_end":9156,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":13525703,"byte_end":13525712,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10140,"byte_end":10143,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10065,"byte_end":10128,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11542,"byte_end":11553,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10275,"byte_end":10346,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10351,"byte_end":10384,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10389,"byte_end":10392,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10397,"byte_end":10468,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10473,"byte_end":10505,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10510,"byte_end":10513,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10518,"byte_end":10532,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10537,"byte_end":10540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10545,"byte_end":10558,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10563,"byte_end":10585,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10590,"byte_end":10634,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10639,"byte_end":10642,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10647,"byte_end":10665,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10670,"byte_end":10691,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10696,"byte_end":10741,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10746,"byte_end":10792,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10797,"byte_end":10800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10805,"byte_end":10856,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10861,"byte_end":10924,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10929,"byte_end":10950,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10955,"byte_end":11003,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11008,"byte_end":11054,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11059,"byte_end":11080,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11085,"byte_end":11102,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11107,"byte_end":11188,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11193,"byte_end":11215,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11220,"byte_end":11237,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11242,"byte_end":11255,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11260,"byte_end":11271,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11276,"byte_end":11279,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11284,"byte_end":11317,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11322,"byte_end":11397,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11402,"byte_end":11429,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11434,"byte_end":11445,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11450,"byte_end":11453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11458,"byte_end":11508,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11513,"byte_end":11518,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11523,"byte_end":11530,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12276,"byte_end":12282,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11688,"byte_end":11760,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11765,"byte_end":11785,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11790,"byte_end":11793,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11798,"byte_end":11865,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11870,"byte_end":11873,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11878,"byte_end":11951,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11956,"byte_end":12031,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12036,"byte_end":12110,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12115,"byte_end":12187,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12192,"byte_end":12264,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12414,"byte_end":12426,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12402,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12785,"byte_end":12794,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12500,"byte_end":12574,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12579,"byte_end":12582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12587,"byte_end":12661,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12666,"byte_end":12697,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12702,"byte_end":12705,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12710,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12737,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12742,"byte_end":12773,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13138,"byte_end":13148,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12975,"byte_end":13016,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13021,"byte_end":13024,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13029,"byte_end":13101,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13106,"byte_end":13126,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29551,"byte_end":29564,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29456,"byte_end":29522,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29843,"byte_end":29853,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29612,"byte_end":29650,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29655,"byte_end":29658,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29663,"byte_end":29757,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29762,"byte_end":29831,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30373,"byte_end":30383,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30235,"byte_end":30292,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30293,"byte_end":30296,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30297,"byte_end":30344,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31287,"byte_end":31290,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31244,"byte_end":31275,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32274,"byte_end":32286,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31613,"byte_end":31667,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31672,"byte_end":31675,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31680,"byte_end":31765,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31770,"byte_end":31786,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31791,"byte_end":31794,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31799,"byte_end":31893,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31898,"byte_end":31984,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31989,"byte_end":32060,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32065,"byte_end":32140,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32145,"byte_end":32148,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32153,"byte_end":32165,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32170,"byte_end":32173,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32178,"byte_end":32262,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34291,"byte_end":34300,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33831,"byte_end":33864,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33869,"byte_end":33872,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33877,"byte_end":33963,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33968,"byte_end":34003,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34008,"byte_end":34011,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34016,"byte_end":34028,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34033,"byte_end":34036,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34041,"byte_end":34125,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34130,"byte_end":34133,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34138,"byte_end":34150,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34155,"byte_end":34158,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34163,"byte_end":34259,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34264,"byte_end":34279,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35319,"byte_end":35328,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35173,"byte_end":35219,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35224,"byte_end":35227,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35232,"byte_end":35307,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35650,"byte_end":35657,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35426,"byte_end":35489,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35494,"byte_end":35497,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35502,"byte_end":35598,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35603,"byte_end":35638,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36455,"byte_end":36460,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35729,"byte_end":35752,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35757,"byte_end":35760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35765,"byte_end":35859,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35864,"byte_end":35957,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35962,"byte_end":35965,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35970,"byte_end":36064,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36069,"byte_end":36164,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36169,"byte_end":36265,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36270,"byte_end":36325,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36330,"byte_end":36333,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36338,"byte_end":36393,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36398,"byte_end":36443,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37394,"byte_end":37404,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37098,"byte_end":37146,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37151,"byte_end":37154,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37159,"byte_end":37243,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37248,"byte_end":37343,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37348,"byte_end":37382,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40622,"byte_end":40635,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40491,"byte_end":40564,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40565,"byte_end":40568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40569,"byte_end":40610,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40838,"byte_end":40841,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40793,"byte_end":40826,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41005,"byte_end":41010,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40968,"byte_end":40993,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41116,"byte_end":41127,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41062,"byte_end":41104,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41242,"byte_end":41252,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41197,"byte_end":41230,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41986,"byte_end":41998,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41313,"byte_end":41361,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41366,"byte_end":41369,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41374,"byte_end":41415,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41420,"byte_end":41423,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41428,"byte_end":41490,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41495,"byte_end":41555,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41560,"byte_end":41620,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41625,"byte_end":41628,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41633,"byte_end":41708,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41786,"byte_end":41862,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41867,"byte_end":41935,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41940,"byte_end":41974,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43426,"byte_end":43443,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43142,"byte_end":43194,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43199,"byte_end":43202,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43207,"byte_end":43283,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43288,"byte_end":43322,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43327,"byte_end":43330,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43335,"byte_end":43414,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43903,"byte_end":43914,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43516,"byte_end":43558,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43563,"byte_end":43566,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43571,"byte_end":43644,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43649,"byte_end":43689,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43694,"byte_end":43697,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43702,"byte_end":43772,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43777,"byte_end":43811,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43816,"byte_end":43819,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43824,"byte_end":43891,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45068,"byte_end":45085,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44863,"byte_end":44925,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44926,"byte_end":44929,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44930,"byte_end":44997,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44998,"byte_end":45056,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45281,"byte_end":45284,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45198,"byte_end":45269,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45654,"byte_end":45657,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45439,"byte_end":45491,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45496,"byte_end":45499,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45504,"byte_end":45576,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45581,"byte_end":45642,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":46095,"byte_end":46102,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45854,"byte_end":45906,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45911,"byte_end":45914,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45919,"byte_end":45992,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45997,"byte_end":46067,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":46072,"byte_end":46083,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47169,"byte_end":47176,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47105,"byte_end":47157,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47329,"byte_end":47333,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47274,"byte_end":47317,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1532},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50184,"byte_end":50219,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52166,"byte_end":52170,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52179,"byte_end":52184,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52147,"byte_end":52153,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1538}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50396,"byte_end":50502,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50503,"byte_end":50506,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50507,"byte_end":50597,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50598,"byte_end":50601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50602,"byte_end":50637,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50638,"byte_end":50641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50642,"byte_end":50655,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50656,"byte_end":50659,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50660,"byte_end":50697,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50698,"byte_end":50701,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50702,"byte_end":50721,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50722,"byte_end":50764,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50765,"byte_end":50815,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50816,"byte_end":50867,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50868,"byte_end":50886,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50887,"byte_end":50908,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50909,"byte_end":50951,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50952,"byte_end":50985,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50986,"byte_end":51002,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51003,"byte_end":51097,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51098,"byte_end":51108,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51109,"byte_end":51112,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51113,"byte_end":51160,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51161,"byte_end":51166,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51167,"byte_end":51174,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51175,"byte_end":51178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51379,"byte_end":51382,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51383,"byte_end":51469,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51470,"byte_end":51480,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51481,"byte_end":51484,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51485,"byte_end":51492,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51493,"byte_end":51528,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51529,"byte_end":51571,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51572,"byte_end":51622,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51623,"byte_end":51674,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51675,"byte_end":51678,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51679,"byte_end":51697,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51698,"byte_end":51719,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51720,"byte_end":51762,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51763,"byte_end":51810,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51811,"byte_end":51827,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51828,"byte_end":51877,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51878,"byte_end":51888,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51889,"byte_end":51892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51893,"byte_end":51926,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51927,"byte_end":51967,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51968,"byte_end":52000,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52001,"byte_end":52006,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52007,"byte_end":52014,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52015,"byte_end":52037,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2417,"byte_end":2430,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\nB: BufMut>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1188,"byte_end":1273,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1278,"byte_end":1281,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1286,"byte_end":1312,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1317,"byte_end":1320,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1325,"byte_end":1338,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1343,"byte_end":1346,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1351,"byte_end":1358,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1363,"byte_end":1396,"line_start":75,"line_end":75,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1401,"byte_end":1432,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1437,"byte_end":1463,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1468,"byte_end":1522,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1527,"byte_end":1560,"line_start":79,"line_end":79,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1565,"byte_end":1587,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1592,"byte_end":1612,"line_start":81,"line_end":81,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1617,"byte_end":1663,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1668,"byte_end":1671,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1676,"byte_end":1754,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1759,"byte_end":1772,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1777,"byte_end":1881,"line_start":86,"line_end":86,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1886,"byte_end":1889,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1894,"byte_end":1928,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1933,"byte_end":1955,"line_start":89,"line_end":89,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1968,"byte_end":1978,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":1983,"byte_end":2002,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2007,"byte_end":2093,"line_start":93,"line_end":93,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2098,"byte_end":2101,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2106,"byte_end":2125,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2130,"byte_end":2148,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2153,"byte_end":2162,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2167,"byte_end":2172,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2177,"byte_end":2180,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2185,"byte_end":2229,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2234,"byte_end":2258,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2263,"byte_end":2303,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2308,"byte_end":2320,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2325,"byte_end":2332,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":2337,"byte_end":2344,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4872,"byte_end":4886,"line_start":181,"line_end":181,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\nB: Buf>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3500,"byte_end":3568,"line_start":140,"line_end":140,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3573,"byte_end":3632,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3637,"byte_end":3640,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3645,"byte_end":3722,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3727,"byte_end":3747,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3752,"byte_end":3755,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3760,"byte_end":3774,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3779,"byte_end":3782,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3787,"byte_end":3858,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3863,"byte_end":3875,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3880,"byte_end":3883,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3888,"byte_end":3901,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3906,"byte_end":3945,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3950,"byte_end":3968,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":3973,"byte_end":3997,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4002,"byte_end":4005,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4010,"byte_end":4029,"line_start":156,"line_end":156,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4034,"byte_end":4058,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4063,"byte_end":4085,"line_start":158,"line_end":158,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4090,"byte_end":4123,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4128,"byte_end":4131,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4136,"byte_end":4154,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4159,"byte_end":4198,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4203,"byte_end":4257,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4262,"byte_end":4314,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4319,"byte_end":4322,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4327,"byte_end":4397,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4402,"byte_end":4422,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4427,"byte_end":4462,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4467,"byte_end":4550,"line_start":169,"line_end":169,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4555,"byte_end":4564,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4569,"byte_end":4572,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4577,"byte_end":4591,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4596,"byte_end":4601,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4606,"byte_end":4613,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4618,"byte_end":4621,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4626,"byte_end":4649,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4654,"byte_end":4695,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4700,"byte_end":4729,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":4734,"byte_end":4799,"line_start":179,"line_end":179,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159926,"byte_end":17159936,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17160087,"byte_end":17160097,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17160424,"byte_end":17160434,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17160658,"byte_end":17160668,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17170905,"byte_end":17170914,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171146,"byte_end":17171156,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171307,"byte_end":17171316,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171671,"byte_end":17171681,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171927,"byte_end":17171935,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172032,"byte_end":17172040,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172151,"byte_end":17172159,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172259,"byte_end":17172267,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172377,"byte_end":17172387,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17180674,"byte_end":17180684,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183519,"byte_end":17183525,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187381,"byte_end":17187387,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193778,"byte_end":17193784,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17194100,"byte_end":17194106,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17194821,"byte_end":17194827,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195867,"byte_end":17195878,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17196805,"byte_end":17196815,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197744,"byte_end":17197754,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200584,"byte_end":17200594,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200907,"byte_end":17200917,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17201643,"byte_end":17201653,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17202632,"byte_end":17202643,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17202999,"byte_end":17203010,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205855,"byte_end":17205866,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17206630,"byte_end":17206641,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17206882,"byte_end":17206893,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221937,"byte_end":17221957,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17225291,"byte_end":17225311,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17226197,"byte_end":17226217,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17227558,"byte_end":17227578,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228140,"byte_end":17228147,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238922,"byte_end":17238929,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17239055,"byte_end":17239080,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17239238,"byte_end":17239263,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17239398,"byte_end":17239423,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240492,"byte_end":17240502,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17243044,"byte_end":17243054,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246430,"byte_end":17246440,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246763,"byte_end":17246773,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247080,"byte_end":17247095,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247377,"byte_end":17247392,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247509,"byte_end":17247524,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17249850,"byte_end":17249867,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252516,"byte_end":17252533,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17255825,"byte_end":17255842,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256206,"byte_end":17256223,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256641,"byte_end":17256663,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256992,"byte_end":17257014,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17257145,"byte_end":17257167,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17259262,"byte_end":17259271,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261211,"byte_end":17261223,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17262110,"byte_end":17262122,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265002,"byte_end":17265014,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266252,"byte_end":17266264,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17267345,"byte_end":17267357,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17268118,"byte_end":17268130,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":459}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17158338,"byte_end":17158354,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":917}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":764,"byte_end":766,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1306}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17159926,"byte_end":17159936,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17160087,"byte_end":17160097,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":512}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17160424,"byte_end":17160434,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":529}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17160658,"byte_end":17160668,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":529}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17170905,"byte_end":17170914,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171146,"byte_end":17171156,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171307,"byte_end":17171316,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171671,"byte_end":17171681,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17171927,"byte_end":17171935,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172032,"byte_end":17172040,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172151,"byte_end":17172159,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172259,"byte_end":17172267,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17172377,"byte_end":17172387,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1909},"to":{"krate":30,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17180674,"byte_end":17180684,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1909},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17183519,"byte_end":17183525,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17187381,"byte_end":17187387,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17193778,"byte_end":17193784,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1724},"to":{"krate":30,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17194100,"byte_end":17194106,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1724},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17194821,"byte_end":17194827,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17195867,"byte_end":17195878,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17196805,"byte_end":17196815,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17197744,"byte_end":17197754,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200584,"byte_end":17200594,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1683},"to":{"krate":30,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17200907,"byte_end":17200917,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1683},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17201643,"byte_end":17201653,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1683},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17202632,"byte_end":17202643,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17202999,"byte_end":17203010,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17205855,"byte_end":17205866,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1642},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17206630,"byte_end":17206641,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1642},"to":{"krate":30,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17206882,"byte_end":17206893,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1642},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17221937,"byte_end":17221957,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17225291,"byte_end":17225311,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":512}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17226197,"byte_end":17226217,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":529}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17227558,"byte_end":17227578,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17228140,"byte_end":17228147,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17238922,"byte_end":17238929,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1214},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17239055,"byte_end":17239080,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17239238,"byte_end":17239263,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17239398,"byte_end":17239423,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":974},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17240492,"byte_end":17240502,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17243044,"byte_end":17243054,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":512}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246430,"byte_end":17246440,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":529}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17246763,"byte_end":17246773,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247080,"byte_end":17247095,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247377,"byte_end":17247392,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17247509,"byte_end":17247524,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17249850,"byte_end":17249867,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17252516,"byte_end":17252533,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1274},"to":{"krate":0,"index":512}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17255825,"byte_end":17255842,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1274},"to":{"krate":0,"index":529}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256206,"byte_end":17256223,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256641,"byte_end":17256663,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17256992,"byte_end":17257014,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17257145,"byte_end":17257167,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1298},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\read_buf.rs","byte_start":17259262,"byte_end":17259271,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17261211,"byte_end":17261223,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\reader_stream.rs","byte_start":17262110,"byte_end":17262122,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1598},"to":{"krate":30,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17265002,"byte_end":17265014,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17266252,"byte_end":17266264,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17267345,"byte_end":17267357,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1549},"to":{"krate":18,"index":230}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\io\\stream_reader.rs","byte_start":17268118,"byte_end":17268130,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1549},"to":{"krate":18,"index":188}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1524},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1524},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":226},"to":{"krate":30,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1532},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1532},"to":{"krate":18,"index":230}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1532},"to":{"krate":18,"index":188}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1532},"to":{"krate":18,"index":269}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1532},"to":{"krate":18,"index":309}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1532},"to":{"krate":30,"index":96}}]}