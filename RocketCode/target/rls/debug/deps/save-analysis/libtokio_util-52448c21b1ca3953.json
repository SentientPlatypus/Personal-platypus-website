{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10","program":"C:\\Users\\trexx\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"io\"","-C","metadata=52448c21b1ca3953","-C","extra-filename=-52448c21b1ca3953","--out-dir","c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libbytes-68c44aea9a0fa3ea.rmeta","--extern","futures_core=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libfutures_core-e34f210f395a45b5.rmeta","--extern","futures_sink=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libfutures_sink-8c29533238f7a4d0.rmeta","--extern","log=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\liblog-426e82032e1efc24.rmeta","--extern","pin_project_lite=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libpin_project_lite-e22eb2e62c630ccc.rmeta","--extern","tokio=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libtokio-62a454d2e15bdb98.rmeta","--cap-lints","allow","-L","native=C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\trexx\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libtokio_util-52448c21b1ca3953.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[2280030009347673147,0]},"crate_root":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src","external_crates":[{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[11650812661830545456,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":17,"id":{"name":"futures_core","disambiguator":[11080074677927752119,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":18,"id":{"name":"futures_sink","disambiguator":[1247065067350179424,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":19,"id":{"name":"tokio","disambiguator":[9048994876817464327,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":20,"id":{"name":"winapi","disambiguator":[2330209372019163507,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":21,"id":{"name":"mio","disambiguator":[4629354155908151500,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":22,"id":{"name":"log","disambiguator":[500290388089087630,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":23,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":24,"id":{"name":"windows_sys","disambiguator":[8944581579481882201,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","num":25,"id":{"name":"bytes","disambiguator":[14130041510002590541,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":26,"id":{"name":"once_cell","disambiguator":[2720024562785292442,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":27,"id":{"name":"tokio_macros","disambiguator":[17274114679241400230,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":28,"id":{"name":"memchr","disambiguator":[11795001318777741512,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":29,"id":{"name":"socket2","disambiguator":[817978640156062366,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","num":30,"id":{"name":"num_cpus","disambiguator":[9680463424726089930,0]}}],"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17128157,"byte_end":17128165,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":426}},{"kind":"Use","ref_id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17128196,"byte_end":17128208,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":426}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17128239,"byte_end":17128251,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":426}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17128275,"byte_end":17128288,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":426}},{"kind":"Use","ref_id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17128290,"byte_end":17128304,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":426}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":7053,"byte_end":7063,"line_start":7,"line_end":7,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":7110,"byte_end":7123,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":7166,"byte_end":7183,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":426},{"krate":0,"index":14},{"krate":0,"index":307},{"krate":0,"index":376}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":468},{"krate":0,"index":507},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":577}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\cfg.rs","byte_start":6093,"byte_end":6115,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127513,"byte_end":17127546,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127547,"byte_end":17127550,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127551,"byte_end":17127632,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127633,"byte_end":17127697,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127698,"byte_end":17127701,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127702,"byte_end":17127768,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127769,"byte_end":17127843,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127844,"byte_end":17127887,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127888,"byte_end":17127891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127892,"byte_end":17127955,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\mod.rs","byte_start":17127956,"byte_end":17127995,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129366,"byte_end":17129374,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128443,"byte_end":17128521,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128522,"byte_end":17128525,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128526,"byte_end":17128555,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128556,"byte_end":17128559,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128560,"byte_end":17128573,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128574,"byte_end":17128577,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128578,"byte_end":17128585,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128586,"byte_end":17128619,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128620,"byte_end":17128651,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128652,"byte_end":17128678,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128679,"byte_end":17128728,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128729,"byte_end":17128749,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128750,"byte_end":17128796,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128797,"byte_end":17128800,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128801,"byte_end":17128879,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128880,"byte_end":17128893,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128894,"byte_end":17128998,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17128999,"byte_end":17129002,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129003,"byte_end":17129037,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129038,"byte_end":17129060,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129061,"byte_end":17129064,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129065,"byte_end":17129075,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129076,"byte_end":17129095,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129096,"byte_end":17129149,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129150,"byte_end":17129153,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129154,"byte_end":17129173,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129174,"byte_end":17129192,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129193,"byte_end":17129202,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129203,"byte_end":17129208,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129209,"byte_end":17129212,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129213,"byte_end":17129257,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129258,"byte_end":17129282,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129283,"byte_end":17129323,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129324,"byte_end":17129336,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129337,"byte_end":17129344,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129345,"byte_end":17129352,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131260,"byte_end":17131272,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131781,"byte_end":17131784,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131574,"byte_end":17131635,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131640,"byte_end":17131676,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131681,"byte_end":17131684,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131689,"byte_end":17131728,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131733,"byte_end":17131769,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132219,"byte_end":17132232,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"pub fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131958,"byte_end":17132019,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132024,"byte_end":17132060,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132065,"byte_end":17132114,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132119,"byte_end":17132122,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132127,"byte_end":17132166,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132171,"byte_end":17132207,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135240,"byte_end":17135252,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135869,"byte_end":17135872,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135451,"byte_end":17135531,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135536,"byte_end":17135539,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135544,"byte_end":17135620,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135625,"byte_end":17135696,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135701,"byte_end":17135746,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135751,"byte_end":17135754,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135759,"byte_end":17135794,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135799,"byte_end":17135822,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135827,"byte_end":17135857,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136388,"byte_end":17136395,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136251,"byte_end":17136297,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136302,"byte_end":17136305,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136310,"byte_end":17136376,"line_start":99,"line_end":99,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136587,"byte_end":17136594,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136442,"byte_end":17136496,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136501,"byte_end":17136504,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136509,"byte_end":17136575,"line_start":106,"line_end":106,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136805,"byte_end":17136816,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136653,"byte_end":17136714,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136719,"byte_end":17136722,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136727,"byte_end":17136793,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17137047,"byte_end":17137057,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136896,"byte_end":17136959,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136964,"byte_end":17136967,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136972,"byte_end":17137035,"line_start":120,"line_end":120,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":304}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14330,"byte_end":14339,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":581}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14153,"byte_end":14217,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14218,"byte_end":14301,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14602,"byte_end":14608,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14415,"byte_end":14489,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14494,"byte_end":14564,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14569,"byte_end":14590,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8741,"byte_end":8758,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7519,"byte_end":7596,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7597,"byte_end":7607,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7608,"byte_end":7611,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7612,"byte_end":7677,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7678,"byte_end":7752,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7753,"byte_end":7756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7757,"byte_end":7840,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7841,"byte_end":7844,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7845,"byte_end":7859,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7860,"byte_end":7863,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7864,"byte_end":7877,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7878,"byte_end":7900,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7901,"byte_end":7945,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7946,"byte_end":7949,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7950,"byte_end":7968,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7969,"byte_end":7990,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":7991,"byte_end":8036,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8037,"byte_end":8078,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8079,"byte_end":8082,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8083,"byte_end":8134,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8135,"byte_end":8198,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8199,"byte_end":8220,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8221,"byte_end":8270,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8271,"byte_end":8317,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8318,"byte_end":8339,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8340,"byte_end":8357,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8358,"byte_end":8439,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8440,"byte_end":8462,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8463,"byte_end":8480,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8481,"byte_end":8494,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8495,"byte_end":8506,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8507,"byte_end":8510,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8511,"byte_end":8544,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8545,"byte_end":8620,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8621,"byte_end":8648,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8649,"byte_end":8660,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8661,"byte_end":8664,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8665,"byte_end":8715,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8716,"byte_end":8721,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8722,"byte_end":8729,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":8985,"byte_end":9010,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":13521918,"byte_end":13521927,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9994,"byte_end":9997,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9919,"byte_end":9982,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11396,"byte_end":11407,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10129,"byte_end":10200,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10205,"byte_end":10238,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10243,"byte_end":10246,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10251,"byte_end":10322,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10327,"byte_end":10359,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10364,"byte_end":10367,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10372,"byte_end":10386,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10391,"byte_end":10394,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10399,"byte_end":10412,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10417,"byte_end":10439,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10444,"byte_end":10488,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10493,"byte_end":10496,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10501,"byte_end":10519,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10524,"byte_end":10545,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10550,"byte_end":10595,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10600,"byte_end":10646,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10651,"byte_end":10654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10659,"byte_end":10710,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10715,"byte_end":10778,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10783,"byte_end":10804,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10809,"byte_end":10857,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10862,"byte_end":10908,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10913,"byte_end":10934,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10939,"byte_end":10956,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":10961,"byte_end":11042,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11047,"byte_end":11069,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11074,"byte_end":11091,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11096,"byte_end":11109,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11114,"byte_end":11125,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11130,"byte_end":11133,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11138,"byte_end":11171,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11176,"byte_end":11251,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11256,"byte_end":11283,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11288,"byte_end":11299,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11304,"byte_end":11307,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11312,"byte_end":11362,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11367,"byte_end":11372,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11377,"byte_end":11384,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12130,"byte_end":12136,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11542,"byte_end":11614,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11619,"byte_end":11639,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11644,"byte_end":11647,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11652,"byte_end":11719,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11724,"byte_end":11727,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11732,"byte_end":11805,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11810,"byte_end":11885,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11890,"byte_end":11964,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":11969,"byte_end":12041,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12046,"byte_end":12118,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12268,"byte_end":12280,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12197,"byte_end":12256,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12639,"byte_end":12648,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12354,"byte_end":12428,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12433,"byte_end":12436,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12441,"byte_end":12515,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12520,"byte_end":12551,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12556,"byte_end":12559,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12564,"byte_end":12583,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12588,"byte_end":12591,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12596,"byte_end":12627,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12992,"byte_end":13002,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12829,"byte_end":12870,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12875,"byte_end":12878,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12883,"byte_end":12955,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":12960,"byte_end":12980,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":29661,"byte_end":29671,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":29523,"byte_end":29580,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":29581,"byte_end":29584,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":29585,"byte_end":29632,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30394,"byte_end":30397,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30352,"byte_end":30382,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31112,"byte_end":31122,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30600,"byte_end":30629,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30634,"byte_end":30637,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30642,"byte_end":30718,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30723,"byte_end":30792,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30797,"byte_end":30815,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30820,"byte_end":30823,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30828,"byte_end":30899,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30904,"byte_end":30977,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30982,"byte_end":31056,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31061,"byte_end":31100,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32643,"byte_end":32657,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31546,"byte_end":31627,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31632,"byte_end":31678,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31683,"byte_end":31686,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31691,"byte_end":31739,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31744,"byte_end":31747,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31752,"byte_end":31836,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31841,"byte_end":31900,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31905,"byte_end":31990,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":31995,"byte_end":32014,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32019,"byte_end":32098,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32103,"byte_end":32106,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32111,"byte_end":32186,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32191,"byte_end":32267,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32272,"byte_end":32327,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32332,"byte_end":32406,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32411,"byte_end":32484,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32489,"byte_end":32523,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32528,"byte_end":32531,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32536,"byte_end":32612,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":32617,"byte_end":32631,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33291,"byte_end":33299,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33043,"byte_end":33108,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33113,"byte_end":33116,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33121,"byte_end":33194,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33199,"byte_end":33209,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33214,"byte_end":33217,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33222,"byte_end":33279,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33411,"byte_end":33420,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33353,"byte_end":33399,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33761,"byte_end":33772,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33562,"byte_end":33596,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33601,"byte_end":33604,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33609,"byte_end":33682,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33687,"byte_end":33749,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34077,"byte_end":34086,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33877,"byte_end":33912,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33917,"byte_end":33920,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":33925,"byte_end":33998,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34003,"byte_end":34065,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34786,"byte_end":34803,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34237,"byte_end":34306,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34311,"byte_end":34314,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34319,"byte_end":34389,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34394,"byte_end":34467,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34472,"byte_end":34518,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34523,"byte_end":34526,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34531,"byte_end":34606,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34611,"byte_end":34685,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34690,"byte_end":34716,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34721,"byte_end":34724,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34729,"byte_end":34774,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34969,"byte_end":34979,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34856,"byte_end":34903,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34908,"byte_end":34911,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":34916,"byte_end":34957,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37491,"byte_end":37504,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37360,"byte_end":37433,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37434,"byte_end":37437,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37438,"byte_end":37479,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37698,"byte_end":37701,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37653,"byte_end":37686,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37865,"byte_end":37870,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37828,"byte_end":37853,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37976,"byte_end":37987,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37922,"byte_end":37964,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38102,"byte_end":38112,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38057,"byte_end":38090,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38846,"byte_end":38858,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38173,"byte_end":38221,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38226,"byte_end":38229,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38234,"byte_end":38275,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38280,"byte_end":38283,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38288,"byte_end":38350,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38355,"byte_end":38415,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38420,"byte_end":38480,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38485,"byte_end":38488,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38493,"byte_end":38568,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38573,"byte_end":38641,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38646,"byte_end":38722,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38727,"byte_end":38795,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":38800,"byte_end":38834,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40286,"byte_end":40303,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40002,"byte_end":40054,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40059,"byte_end":40062,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40067,"byte_end":40143,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40148,"byte_end":40182,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40187,"byte_end":40190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40195,"byte_end":40274,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40763,"byte_end":40774,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40376,"byte_end":40418,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40423,"byte_end":40426,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40431,"byte_end":40504,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40509,"byte_end":40549,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40554,"byte_end":40557,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40562,"byte_end":40632,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40637,"byte_end":40671,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40676,"byte_end":40679,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40684,"byte_end":40751,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":41917,"byte_end":41934,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":274}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":41717,"byte_end":41774,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":41775,"byte_end":41778,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":41779,"byte_end":41846,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":41847,"byte_end":41905,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42112,"byte_end":42115,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42029,"byte_end":42100,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42696,"byte_end":42699,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42481,"byte_end":42533,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42538,"byte_end":42541,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42546,"byte_end":42618,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42623,"byte_end":42684,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":43142,"byte_end":43149,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42901,"byte_end":42953,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42958,"byte_end":42961,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42966,"byte_end":43039,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":43044,"byte_end":43114,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":43119,"byte_end":43130,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":44989,"byte_end":44996,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":44925,"byte_end":44977,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45282,"byte_end":45286,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45227,"byte_end":45270,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":629},{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":360},{"krate":0,"index":365},{"krate":0,"index":371}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46399,"byte_end":46434,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48381,"byte_end":48385,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48394,"byte_end":48399,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48362,"byte_end":48368,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":635}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46611,"byte_end":46717,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46718,"byte_end":46721,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46722,"byte_end":46812,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46813,"byte_end":46816,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46817,"byte_end":46852,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46853,"byte_end":46856,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46857,"byte_end":46870,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46871,"byte_end":46874,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46875,"byte_end":46912,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46913,"byte_end":46916,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46917,"byte_end":46936,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46937,"byte_end":46979,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":46980,"byte_end":47030,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47031,"byte_end":47082,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47083,"byte_end":47101,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47102,"byte_end":47123,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47124,"byte_end":47166,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47167,"byte_end":47200,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47201,"byte_end":47217,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47218,"byte_end":47312,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47313,"byte_end":47323,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47324,"byte_end":47327,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47328,"byte_end":47375,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47376,"byte_end":47381,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47382,"byte_end":47389,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47390,"byte_end":47393,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47594,"byte_end":47597,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47598,"byte_end":47684,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47685,"byte_end":47695,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47696,"byte_end":47699,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47700,"byte_end":47707,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47708,"byte_end":47743,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47744,"byte_end":47786,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47787,"byte_end":47837,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47838,"byte_end":47889,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47890,"byte_end":47893,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47894,"byte_end":47912,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47913,"byte_end":47934,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47935,"byte_end":47977,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":47978,"byte_end":48025,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48026,"byte_end":48042,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48043,"byte_end":48092,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48093,"byte_end":48103,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48104,"byte_end":48107,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48108,"byte_end":48141,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48142,"byte_end":48182,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48183,"byte_end":48215,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48216,"byte_end":48221,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48222,"byte_end":48229,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":48230,"byte_end":48252,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2442,"byte_end":2455,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\nB: BufMut>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1213,"byte_end":1298,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1303,"byte_end":1306,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1311,"byte_end":1337,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1342,"byte_end":1345,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1350,"byte_end":1363,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1368,"byte_end":1371,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1376,"byte_end":1383,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1388,"byte_end":1421,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1426,"byte_end":1457,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1462,"byte_end":1488,"line_start":76,"line_end":76,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1493,"byte_end":1547,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1552,"byte_end":1585,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1590,"byte_end":1612,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1617,"byte_end":1637,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1642,"byte_end":1688,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1693,"byte_end":1696,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1701,"byte_end":1779,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1784,"byte_end":1797,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1802,"byte_end":1906,"line_start":85,"line_end":85,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1911,"byte_end":1914,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1919,"byte_end":1953,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1958,"byte_end":1980,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1985,"byte_end":1988,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":1993,"byte_end":2003,"line_start":90,"line_end":90,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2008,"byte_end":2027,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2032,"byte_end":2118,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2123,"byte_end":2126,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2131,"byte_end":2150,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2155,"byte_end":2173,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2178,"byte_end":2187,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2192,"byte_end":2197,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2202,"byte_end":2205,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2210,"byte_end":2254,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2259,"byte_end":2283,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2288,"byte_end":2328,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2333,"byte_end":2345,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2350,"byte_end":2357,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":2362,"byte_end":2369,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4743,"byte_end":4757,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\nB: Buf>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3371,"byte_end":3439,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3444,"byte_end":3503,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3508,"byte_end":3511,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3516,"byte_end":3593,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3598,"byte_end":3618,"line_start":140,"line_end":140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3623,"byte_end":3626,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3631,"byte_end":3645,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3650,"byte_end":3653,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3658,"byte_end":3729,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3734,"byte_end":3746,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3751,"byte_end":3754,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3759,"byte_end":3772,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3777,"byte_end":3816,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3821,"byte_end":3839,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3844,"byte_end":3868,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3873,"byte_end":3876,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3881,"byte_end":3900,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3905,"byte_end":3929,"line_start":153,"line_end":153,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3934,"byte_end":3956,"line_start":154,"line_end":154,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3961,"byte_end":3994,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":3999,"byte_end":4002,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4007,"byte_end":4025,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4030,"byte_end":4069,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4074,"byte_end":4128,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4133,"byte_end":4185,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4190,"byte_end":4193,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4198,"byte_end":4268,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4273,"byte_end":4293,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4298,"byte_end":4333,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4338,"byte_end":4421,"line_start":165,"line_end":165,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4426,"byte_end":4435,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4440,"byte_end":4443,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4448,"byte_end":4462,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4467,"byte_end":4472,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4477,"byte_end":4484,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4489,"byte_end":4492,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4497,"byte_end":4520,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4525,"byte_end":4566,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4571,"byte_end":4600,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":4605,"byte_end":4670,"line_start":175,"line_end":175,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129603,"byte_end":17129612,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131552,"byte_end":17131564,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132451,"byte_end":17132463,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135343,"byte_end":17135355,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136226,"byte_end":17136238,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17137127,"byte_end":17137139,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17137900,"byte_end":17137912,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":807,"byte_end":809,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":426}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":307}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\read_buf.rs","byte_start":17129603,"byte_end":17129612,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17131552,"byte_end":17131564,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\reader_stream.rs","byte_start":17132451,"byte_end":17132463,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":695},"to":{"krate":17,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17135343,"byte_end":17135355,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17136226,"byte_end":17136238,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17137127,"byte_end":17137139,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":646},"to":{"krate":19,"index":230}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\io\\stream_reader.rs","byte_start":17137900,"byte_end":17137912,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":646},"to":{"krate":19,"index":188}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":621},"to":{"krate":18,"index":17}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":215},"to":{"krate":17,"index":96}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\sync\\reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":629},"to":{"krate":19,"index":230}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":629},"to":{"krate":19,"index":188}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":629},"to":{"krate":19,"index":269}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":629},"to":{"krate":19,"index":309}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.10\\src\\either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":629},"to":{"krate":17,"index":96}}]}