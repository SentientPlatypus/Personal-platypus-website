{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9","program":"C:\\Users\\trexx\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","time","--edition=2018","C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"formatting\"","--cfg","feature=\"itoa\"","--cfg","feature=\"macros\"","--cfg","feature=\"parsing\"","--cfg","feature=\"std\"","--cfg","feature=\"time-macros\"","-C","metadata=c9a168f3379bda1d","-C","extra-filename=-c9a168f3379bda1d","--out-dir","c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps","--extern","itoa=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libitoa-262fc6ced709aa50.rmeta","--extern","time_macros=c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\time_macros-c1aba79bbf925d76.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\trexx\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\trexx\\Documents\\PYTHON CODE LOL\\PersonalWebsite\\Personal-platypus-website\\RocketCode\\target\\rls\\debug\\deps\\libtime-c9a168f3379bda1d.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[12780847338980137841,0]},"crate_root":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src","external_crates":[{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","num":16,"id":{"name":"time_macros","disambiguator":[3761168072059187856,0]}},{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","num":17,"id":{"name":"itoa","disambiguator":[15101035006270502539,0]}}],"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82316,"byte_end":82330,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82467,"byte_end":82473,"line_start":26,"line_end":26,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82676,"byte_end":82700,"line_start":30,"line_end":30,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82786,"byte_end":82791,"line_start":33,"line_end":33,"column_start":16,"column_end":21},"alias_span":null,"name":"Parse","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82853,"byte_end":82873,"line_start":35,"line_end":35,"column_start":33,"column_end":53},"alias_span":null,"name":"ParseFromDescription","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82928,"byte_end":82941,"line_start":37,"line_end":37,"column_start":26,"column_end":39},"alias_span":null,"name":"TryFromParsed","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113899,"byte_end":113908,"line_start":19,"line_end":19,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":629}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113957,"byte_end":113962,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":629}},{"kind":"Use","ref_id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","byte_start":148829,"byte_end":148840,"line_start":7,"line_end":7,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":16,"index":846},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":180925,"byte_end":180929,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"date","value":"","parent":{"krate":0,"index":1070}},{"kind":"Use","ref_id":{"krate":16,"index":850},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":181496,"byte_end":181504,"line_start":33,"line_end":33,"column_start":22,"column_end":30},"alias_span":null,"name":"datetime","value":"","parent":{"krate":0,"index":1070}},{"kind":"Use","ref_id":{"krate":16,"index":619},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":182507,"byte_end":182525,"line_start":56,"line_end":56,"column_start":22,"column_end":40},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":1070}},{"kind":"Use","ref_id":{"krate":16,"index":854},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":183665,"byte_end":183671,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"alias_span":null,"name":"offset","value":"","parent":{"krate":0,"index":1070}},{"kind":"Use","ref_id":{"krate":16,"index":858},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":185011,"byte_end":185015,"line_start":114,"line_end":114,"column_start":22,"column_end":26},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":1070}},{"kind":"Use","ref_id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":234830,"byte_end":234838,"line_start":9,"line_end":9,"column_start":25,"column_end":33},"alias_span":null,"name":"Parsable","value":"","parent":{"krate":0,"index":1294}},{"kind":"Use","ref_id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":234862,"byte_end":234868,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1294}},{"kind":"Use","ref_id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10491,"byte_end":10495,"line_start":317,"line_end":317,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10522,"byte_end":10530,"line_start":318,"line_end":318,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10554,"byte_end":10559,"line_start":319,"line_end":319,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3200},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10640,"byte_end":10645,"line_start":322,"line_end":322,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10680,"byte_end":10694,"line_start":323,"line_end":323,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10732,"byte_end":10749,"line_start":324,"line_end":324,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10772,"byte_end":10776,"line_start":325,"line_end":325,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10805,"byte_end":10814,"line_start":326,"line_end":326,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10840,"byte_end":10847,"line_start":327,"line_end":327,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":145},{"krate":0,"index":332},{"krate":0,"index":563},{"krate":0,"index":629},{"krate":0,"index":771},{"krate":0,"index":981},{"krate":0,"index":1070},{"krate":0,"index":1086},{"krate":0,"index":1117},{"krate":0,"index":1294},{"krate":0,"index":1977},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2194},{"krate":0,"index":2241},{"krate":0,"index":2257},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2302},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2314}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/   If you are using this feature, **please leave a comment**","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1510,"byte_end":1573,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/   [on this discussion](https://github.com/time-rs/time/discussions/306) with your use case. If","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1574,"byte_end":1672,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/   there is not sufficient demand for this feature, it will be dropped in a future release.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1673,"byte_end":1767,"line_start":44,"line_end":44,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1768,"byte_end":1771,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1772,"byte_end":1785,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1786,"byte_end":1789,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1790,"byte_end":1876,"line_start":48,"line_end":48,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1877,"byte_end":1880,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1881,"byte_end":1969,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1970,"byte_end":1973,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1974,"byte_end":2066,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2067,"byte_end":2161,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2162,"byte_end":2253,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2254,"byte_end":2257,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2258,"byte_end":2358,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2359,"byte_end":2377,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2378,"byte_end":2381,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde/alloc`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2382,"byte_end":2472,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2473,"byte_end":2476,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2477,"byte_end":2565,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2566,"byte_end":2634,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2635,"byte_end":2638,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2639,"byte_end":2651,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2652,"byte_end":2655,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2656,"byte_end":2721,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2722,"byte_end":2725,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2726,"byte_end":2775,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2776,"byte_end":2779,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2780,"byte_end":2876,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2877,"byte_end":2880,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2881,"byte_end":2979,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2980,"byte_end":3075,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3076,"byte_end":3173,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3174,"byte_end":3274,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3275,"byte_end":3374,"line_start":76,"line_end":76,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3375,"byte_end":3472,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3473,"byte_end":3568,"line_start":78,"line_end":78,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3569,"byte_end":3629,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"deny(anonymous_parameters, clippy :: all, const_err,\nillegal_floating_point_literal_pattern, late_bound_lifetime_arguments,\npath_statements, patterns_in_fns_without_body, rust_2018_idioms,\ntrivial_casts, trivial_numeric_casts, unreachable_pub, unsafe_code,\nunsafe_op_in_unsafe_fn, unused_extern_crates)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3926,"byte_end":4288,"line_start":88,"line_end":103,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n:: get_unwrap, clippy :: missing_docs_in_private_items, clippy :: nursery,\nclippy :: print_stdout, clippy :: todo, clippy :: unimplemented, clippy ::\nunnested_or_patterns, clippy :: unwrap_in_result, clippy :: unwrap_used,\nclippy :: use_debug, deprecated_in_future, missing_copy_implementations,\nmissing_debug_implementations, unused_qualifications,\nvariant_size_differences)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":4289,"byte_end":4789,"line_start":104,"line_end":122,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":4790,"byte_end":4828,"line_start":123,"line_end":123,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12232,"byte_end":12236,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2317}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11863,"byte_end":11908,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11909,"byte_end":11912,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11913,"byte_end":12012,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12013,"byte_end":12109,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12110,"byte_end":12159,"line_start":34,"line_end":34,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12961,"byte_end":12964,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12834,"byte_end":12863,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12868,"byte_end":12871,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12876,"byte_end":12946,"line_start":57,"line_end":57,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13155,"byte_end":13158,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13028,"byte_end":13057,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13062,"byte_end":13065,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13070,"byte_end":13140,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13428,"byte_end":13457,"line_start":69,"line_end":69,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"pub const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13271,"byte_end":13357,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13362,"byte_end":13391,"line_start":67,"line_end":67,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14059,"byte_end":14077,"line_start":87,"line_end":87,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"pub const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13578,"byte_end":13639,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13644,"byte_end":13647,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13652,"byte_end":13663,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13668,"byte_end":13698,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13703,"byte_end":13774,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13779,"byte_end":13852,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13857,"byte_end":13864,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13869,"byte_end":13872,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13877,"byte_end":13888,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13893,"byte_end":13923,"line_start":84,"line_end":84,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13928,"byte_end":14029,"line_start":85,"line_end":85,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14034,"byte_end":14041,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15268,"byte_end":15285,"line_start":120,"line_end":120,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"pub const fn from_ordinal_date(i32, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14849,"byte_end":14917,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14922,"byte_end":14925,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14930,"byte_end":14941,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14946,"byte_end":14967,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14972,"byte_end":15026,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15031,"byte_end":15087,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15092,"byte_end":15099,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15104,"byte_end":15107,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15112,"byte_end":15123,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15128,"byte_end":15149,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15154,"byte_end":15238,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15243,"byte_end":15250,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":16115,"byte_end":16133,"line_start":139,"line_end":139,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"pub const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15570,"byte_end":15638,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15643,"byte_end":15646,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15651,"byte_end":15662,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15667,"byte_end":15702,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15707,"byte_end":15770,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15775,"byte_end":15839,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15844,"byte_end":15908,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15913,"byte_end":15920,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15925,"byte_end":15928,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15933,"byte_end":15944,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15949,"byte_end":15984,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15989,"byte_end":16085,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":16090,"byte_end":16097,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":18008,"byte_end":18023,"line_start":186,"line_end":186,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"pub const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17308,"byte_end":17348,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17353,"byte_end":17356,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17361,"byte_end":17455,"line_start":175,"line_end":175,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17460,"byte_end":17556,"line_start":176,"line_end":176,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17561,"byte_end":17564,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17569,"byte_end":17580,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17585,"byte_end":17622,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17627,"byte_end":17696,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17701,"byte_end":17777,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17782,"byte_end":17858,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17863,"byte_end":17939,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17944,"byte_end":17951,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20040,"byte_end":20044,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19755,"byte_end":19784,"line_start":231,"line_end":231,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19789,"byte_end":19792,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19797,"byte_end":19808,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19813,"byte_end":19842,"line_start":234,"line_end":234,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19847,"byte_end":19898,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19903,"byte_end":19954,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19959,"byte_end":20010,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20015,"byte_end":20022,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20345,"byte_end":20350,"line_start":250,"line_end":250,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20095,"byte_end":20113,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20118,"byte_end":20121,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20126,"byte_end":20137,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20142,"byte_end":20180,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20185,"byte_end":20247,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20252,"byte_end":20315,"line_start":248,"line_end":248,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20320,"byte_end":20327,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20701,"byte_end":20704,"line_start":263,"line_end":263,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20406,"byte_end":20435,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20440,"byte_end":20443,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20448,"byte_end":20508,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20513,"byte_end":20516,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20521,"byte_end":20532,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20537,"byte_end":20566,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20571,"byte_end":20618,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20623,"byte_end":20671,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20676,"byte_end":20683,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22949,"byte_end":22956,"line_start":317,"line_end":317,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22616,"byte_end":22644,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22649,"byte_end":22652,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22657,"byte_end":22747,"line_start":310,"line_end":310,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22752,"byte_end":22755,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22760,"byte_end":22771,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22776,"byte_end":22805,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22810,"byte_end":22861,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22866,"byte_end":22919,"line_start":315,"line_end":315,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22924,"byte_end":22931,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23909,"byte_end":23917,"line_start":344,"line_end":344,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23432,"byte_end":23460,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23465,"byte_end":23468,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23473,"byte_end":23533,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23538,"byte_end":23541,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23546,"byte_end":23557,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23562,"byte_end":23591,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23596,"byte_end":23648,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23653,"byte_end":23706,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23711,"byte_end":23763,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23768,"byte_end":23821,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23826,"byte_end":23879,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23884,"byte_end":23891,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24464,"byte_end":24481,"line_start":359,"line_end":359,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23974,"byte_end":24038,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24043,"byte_end":24046,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24051,"byte_end":24111,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24116,"byte_end":24119,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24124,"byte_end":24135,"line_start":352,"line_end":352,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24140,"byte_end":24169,"line_start":353,"line_end":353,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24174,"byte_end":24235,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24240,"byte_end":24301,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24306,"byte_end":24368,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24373,"byte_end":24434,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24439,"byte_end":24446,"line_start":358,"line_end":358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25094,"byte_end":25111,"line_start":374,"line_end":374,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24604,"byte_end":24668,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24673,"byte_end":24676,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24681,"byte_end":24741,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24746,"byte_end":24749,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24754,"byte_end":24765,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24770,"byte_end":24799,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24804,"byte_end":24865,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24870,"byte_end":24931,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24936,"byte_end":24998,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25003,"byte_end":25064,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25069,"byte_end":25076,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25487,"byte_end":25503,"line_start":387,"line_end":387,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25234,"byte_end":25267,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25272,"byte_end":25275,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25280,"byte_end":25291,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25296,"byte_end":25334,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25339,"byte_end":25354,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25359,"byte_end":25408,"line_start":383,"line_end":383,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25413,"byte_end":25446,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25451,"byte_end":25457,"line_start":385,"line_end":385,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25462,"byte_end":25469,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25822,"byte_end":25837,"line_start":398,"line_end":398,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25622,"byte_end":25662,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25667,"byte_end":25670,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25675,"byte_end":25686,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25691,"byte_end":25720,"line_start":395,"line_end":395,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25725,"byte_end":25792,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25797,"byte_end":25804,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26545,"byte_end":26561,"line_start":418,"line_end":418,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25909,"byte_end":25961,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25966,"byte_end":25969,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25974,"byte_end":25985,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25990,"byte_end":26033,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26038,"byte_end":26115,"line_start":406,"line_end":406,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26120,"byte_end":26197,"line_start":407,"line_end":407,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26202,"byte_end":26217,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26222,"byte_end":26271,"line_start":409,"line_end":409,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26276,"byte_end":26304,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26309,"byte_end":26315,"line_start":411,"line_end":411,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26320,"byte_end":26335,"line_start":412,"line_end":412,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26340,"byte_end":26389,"line_start":413,"line_end":413,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26394,"byte_end":26422,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26427,"byte_end":26433,"line_start":415,"line_end":415,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26438,"byte_end":26515,"line_start":416,"line_end":416,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26520,"byte_end":26527,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27833,"byte_end":27840,"line_start":446,"line_end":446,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26970,"byte_end":26990,"line_start":429,"line_end":429,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26995,"byte_end":26998,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27003,"byte_end":27014,"line_start":431,"line_end":431,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27019,"byte_end":27062,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27067,"byte_end":27124,"line_start":433,"line_end":433,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27129,"byte_end":27185,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27190,"byte_end":27246,"line_start":435,"line_end":435,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27251,"byte_end":27307,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27312,"byte_end":27371,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27376,"byte_end":27434,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27439,"byte_end":27495,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27500,"byte_end":27558,"line_start":440,"line_end":440,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27563,"byte_end":27619,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27624,"byte_end":27681,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27686,"byte_end":27742,"line_start":443,"line_end":443,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27747,"byte_end":27803,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27808,"byte_end":27815,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28724,"byte_end":28732,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"pub const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28198,"byte_end":28229,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28234,"byte_end":28237,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28242,"byte_end":28253,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28258,"byte_end":28295,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28300,"byte_end":28315,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28320,"byte_end":28361,"line_start":463,"line_end":463,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28366,"byte_end":28401,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28406,"byte_end":28412,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28417,"byte_end":28432,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28437,"byte_end":28478,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28483,"byte_end":28518,"line_start":468,"line_end":468,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28523,"byte_end":28529,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28534,"byte_end":28549,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28554,"byte_end":28595,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28600,"byte_end":28635,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28640,"byte_end":28646,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28651,"byte_end":28694,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28699,"byte_end":28706,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29692,"byte_end":29704,"line_start":508,"line_end":508,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"pub const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29146,"byte_end":29181,"line_start":490,"line_end":490,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29186,"byte_end":29189,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29194,"byte_end":29205,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29210,"byte_end":29247,"line_start":493,"line_end":493,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29252,"byte_end":29267,"line_start":494,"line_end":494,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29272,"byte_end":29317,"line_start":495,"line_end":495,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29322,"byte_end":29357,"line_start":496,"line_end":496,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29362,"byte_end":29368,"line_start":497,"line_end":497,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29373,"byte_end":29388,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29393,"byte_end":29438,"line_start":499,"line_end":499,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29443,"byte_end":29478,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29483,"byte_end":29489,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29494,"byte_end":29509,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29514,"byte_end":29559,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29564,"byte_end":29599,"line_start":504,"line_end":504,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29604,"byte_end":29610,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29615,"byte_end":29662,"line_start":506,"line_end":506,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29667,"byte_end":29674,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30699,"byte_end":30712,"line_start":535,"line_end":535,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30094,"byte_end":30130,"line_start":523,"line_end":523,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30135,"byte_end":30138,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30143,"byte_end":30237,"line_start":525,"line_end":525,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30242,"byte_end":30338,"line_start":526,"line_end":526,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30343,"byte_end":30346,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30351,"byte_end":30362,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30367,"byte_end":30396,"line_start":529,"line_end":529,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30401,"byte_end":30459,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30464,"byte_end":30529,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30534,"byte_end":30599,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30604,"byte_end":30669,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30674,"byte_end":30681,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32055,"byte_end":32066,"line_start":575,"line_end":575,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31015,"byte_end":31088,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31093,"byte_end":31096,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31101,"byte_end":31112,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31117,"byte_end":31178,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31183,"byte_end":31237,"line_start":550,"line_end":550,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31242,"byte_end":31299,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31304,"byte_end":31319,"line_start":552,"line_end":552,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31324,"byte_end":31376,"line_start":553,"line_end":553,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31381,"byte_end":31416,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31421,"byte_end":31427,"line_start":555,"line_end":555,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31432,"byte_end":31439,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31444,"byte_end":31447,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31452,"byte_end":31462,"line_start":558,"line_end":558,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31467,"byte_end":31470,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31475,"byte_end":31528,"line_start":560,"line_end":560,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31533,"byte_end":31536,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31541,"byte_end":31552,"line_start":562,"line_end":562,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31557,"byte_end":31618,"line_start":563,"line_end":563,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31623,"byte_end":31690,"line_start":564,"line_end":564,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31695,"byte_end":31765,"line_start":565,"line_end":565,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31770,"byte_end":31785,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31790,"byte_end":31844,"line_start":567,"line_end":567,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31849,"byte_end":31884,"line_start":568,"line_end":568,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31889,"byte_end":31895,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31900,"byte_end":31915,"line_start":570,"line_end":570,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31920,"byte_end":31974,"line_start":571,"line_end":571,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31979,"byte_end":32014,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32019,"byte_end":32025,"line_start":573,"line_end":573,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32030,"byte_end":32037,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33533,"byte_end":33544,"line_start":618,"line_end":618,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32501,"byte_end":32574,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32579,"byte_end":32582,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32587,"byte_end":32594,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32599,"byte_end":32660,"line_start":592,"line_end":592,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32665,"byte_end":32722,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32727,"byte_end":32781,"line_start":594,"line_end":594,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32786,"byte_end":32801,"line_start":595,"line_end":595,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32806,"byte_end":32858,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32863,"byte_end":32898,"line_start":597,"line_end":597,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32903,"byte_end":32909,"line_start":598,"line_end":598,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32914,"byte_end":32921,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32926,"byte_end":32929,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32934,"byte_end":32944,"line_start":601,"line_end":601,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32949,"byte_end":32952,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32957,"byte_end":33010,"line_start":603,"line_end":603,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33015,"byte_end":33018,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33023,"byte_end":33030,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33035,"byte_end":33096,"line_start":606,"line_end":606,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33101,"byte_end":33171,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33176,"byte_end":33243,"line_start":608,"line_end":608,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33248,"byte_end":33263,"line_start":609,"line_end":609,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33268,"byte_end":33322,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33327,"byte_end":33362,"line_start":611,"line_end":611,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33367,"byte_end":33373,"line_start":612,"line_end":612,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33378,"byte_end":33393,"line_start":613,"line_end":613,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33398,"byte_end":33452,"line_start":614,"line_end":614,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33457,"byte_end":33492,"line_start":615,"line_end":615,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33497,"byte_end":33503,"line_start":616,"line_end":616,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33508,"byte_end":33515,"line_start":617,"line_end":617,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34935,"byte_end":34949,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34053,"byte_end":34114,"line_start":634,"line_end":634,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34119,"byte_end":34122,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34127,"byte_end":34138,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34143,"byte_end":34204,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34209,"byte_end":34271,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34276,"byte_end":34341,"line_start":639,"line_end":639,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34346,"byte_end":34361,"line_start":640,"line_end":640,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34366,"byte_end":34421,"line_start":641,"line_end":641,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34426,"byte_end":34455,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34460,"byte_end":34466,"line_start":643,"line_end":643,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34471,"byte_end":34478,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34483,"byte_end":34486,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34491,"byte_end":34501,"line_start":646,"line_end":646,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34506,"byte_end":34509,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34514,"byte_end":34567,"line_start":648,"line_end":648,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34572,"byte_end":34575,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34580,"byte_end":34591,"line_start":650,"line_end":650,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34596,"byte_end":34651,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34656,"byte_end":34671,"line_start":652,"line_end":652,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34676,"byte_end":34733,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34738,"byte_end":34767,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34772,"byte_end":34778,"line_start":655,"line_end":655,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34783,"byte_end":34798,"line_start":656,"line_end":656,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34803,"byte_end":34860,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34865,"byte_end":34894,"line_start":658,"line_end":658,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34899,"byte_end":34905,"line_start":659,"line_end":659,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34910,"byte_end":34917,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36067,"byte_end":36081,"line_start":698,"line_end":698,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35193,"byte_end":35254,"line_start":671,"line_end":671,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35259,"byte_end":35262,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35267,"byte_end":35274,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35279,"byte_end":35340,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35345,"byte_end":35410,"line_start":675,"line_end":675,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35415,"byte_end":35477,"line_start":676,"line_end":676,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35482,"byte_end":35497,"line_start":677,"line_end":677,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35502,"byte_end":35557,"line_start":678,"line_end":678,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35562,"byte_end":35591,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35596,"byte_end":35602,"line_start":680,"line_end":680,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35607,"byte_end":35614,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35619,"byte_end":35622,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35627,"byte_end":35637,"line_start":683,"line_end":683,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35642,"byte_end":35645,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35650,"byte_end":35703,"line_start":685,"line_end":685,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35708,"byte_end":35711,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35716,"byte_end":35723,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35728,"byte_end":35783,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35788,"byte_end":35803,"line_start":689,"line_end":689,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35808,"byte_end":35865,"line_start":690,"line_end":690,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35870,"byte_end":35899,"line_start":691,"line_end":691,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35904,"byte_end":35910,"line_start":692,"line_end":692,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35915,"byte_end":35930,"line_start":693,"line_end":693,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35935,"byte_end":35992,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35997,"byte_end":36026,"line_start":695,"line_end":695,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36031,"byte_end":36037,"line_start":696,"line_end":696,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36042,"byte_end":36049,"line_start":697,"line_end":697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36955,"byte_end":36967,"line_start":722,"line_end":722,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36389,"byte_end":36447,"line_start":710,"line_end":710,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36452,"byte_end":36455,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36460,"byte_end":36471,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36476,"byte_end":36505,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36510,"byte_end":36525,"line_start":714,"line_end":714,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36530,"byte_end":36579,"line_start":715,"line_end":715,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36584,"byte_end":36617,"line_start":716,"line_end":716,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36622,"byte_end":36628,"line_start":717,"line_end":717,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36633,"byte_end":36743,"line_start":718,"line_end":718,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36748,"byte_end":36856,"line_start":719,"line_end":719,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36861,"byte_end":36868,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36873,"byte_end":36937,"line_start":721,"line_end":721,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38836,"byte_end":38849,"line_start":775,"line_end":775,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38312,"byte_end":38346,"line_start":759,"line_end":759,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38351,"byte_end":38354,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38359,"byte_end":38370,"line_start":761,"line_end":761,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38375,"byte_end":38404,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38409,"byte_end":38431,"line_start":763,"line_end":763,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38436,"byte_end":38451,"line_start":764,"line_end":764,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38456,"byte_end":38516,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38521,"byte_end":38554,"line_start":766,"line_end":766,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38559,"byte_end":38565,"line_start":767,"line_end":767,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38570,"byte_end":38582,"line_start":768,"line_end":768,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38587,"byte_end":38616,"line_start":769,"line_end":769,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38621,"byte_end":38664,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38669,"byte_end":38690,"line_start":771,"line_end":771,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38695,"byte_end":38737,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38742,"byte_end":38749,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38754,"byte_end":38818,"line_start":774,"line_end":774,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39524,"byte_end":39535,"line_start":792,"line_end":792,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39027,"byte_end":39060,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39065,"byte_end":39068,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39073,"byte_end":39084,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39089,"byte_end":39118,"line_start":783,"line_end":783,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39123,"byte_end":39138,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39143,"byte_end":39188,"line_start":785,"line_end":785,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39193,"byte_end":39226,"line_start":786,"line_end":786,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39231,"byte_end":39237,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39242,"byte_end":39324,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39329,"byte_end":39425,"line_start":789,"line_end":789,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39430,"byte_end":39437,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39442,"byte_end":39506,"line_start":791,"line_end":791,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40459,"byte_end":40467,"line_start":818,"line_end":818,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"pub const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40166,"byte_end":40260,"line_start":811,"line_end":811,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40265,"byte_end":40281,"line_start":812,"line_end":812,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40286,"byte_end":40289,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40294,"byte_end":40305,"line_start":814,"line_end":814,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40310,"byte_end":40351,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40356,"byte_end":40429,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40434,"byte_end":40441,"line_start":817,"line_end":817,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40877,"byte_end":40886,"line_start":831,"line_end":831,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"pub const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40561,"byte_end":40646,"line_start":822,"line_end":822,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40651,"byte_end":40654,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40659,"byte_end":40670,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40675,"byte_end":40722,"line_start":825,"line_end":825,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40727,"byte_end":40742,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40747,"byte_end":40796,"line_start":827,"line_end":827,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40801,"byte_end":40836,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40841,"byte_end":40847,"line_start":829,"line_end":829,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40852,"byte_end":40859,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41296,"byte_end":41304,"line_start":842,"line_end":842,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"pub const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40982,"byte_end":41074,"line_start":835,"line_end":835,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41079,"byte_end":41082,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41087,"byte_end":41098,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41103,"byte_end":41132,"line_start":838,"line_end":838,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41137,"byte_end":41198,"line_start":839,"line_end":839,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41203,"byte_end":41266,"line_start":840,"line_end":840,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41271,"byte_end":41278,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41907,"byte_end":41921,"line_start":861,"line_end":861,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"pub const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41575,"byte_end":41667,"line_start":854,"line_end":854,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41672,"byte_end":41675,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41680,"byte_end":41691,"line_start":856,"line_end":856,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41696,"byte_end":41725,"line_start":857,"line_end":857,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41730,"byte_end":41800,"line_start":858,"line_end":858,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41805,"byte_end":41877,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41882,"byte_end":41889,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42569,"byte_end":42583,"line_start":881,"line_end":881,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"pub const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42237,"byte_end":42329,"line_start":874,"line_end":874,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42334,"byte_end":42337,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42342,"byte_end":42353,"line_start":876,"line_end":876,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42358,"byte_end":42387,"line_start":877,"line_end":877,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42392,"byte_end":42462,"line_start":878,"line_end":878,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42467,"byte_end":42539,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42544,"byte_end":42551,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43229,"byte_end":43242,"line_start":901,"line_end":901,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"pub const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42899,"byte_end":42991,"line_start":894,"line_end":894,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42996,"byte_end":42999,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43004,"byte_end":43015,"line_start":896,"line_end":896,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43020,"byte_end":43049,"line_start":897,"line_end":897,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43054,"byte_end":43123,"line_start":898,"line_end":898,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43128,"byte_end":43199,"line_start":899,"line_end":899,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43204,"byte_end":43211,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43758,"byte_end":43769,"line_start":920,"line_end":920,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43657,"byte_end":43746,"line_start":919,"line_end":919,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44353,"byte_end":44359,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43978,"byte_end":44067,"line_start":928,"line_end":928,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44072,"byte_end":44075,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44080,"byte_end":44091,"line_start":930,"line_end":930,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44096,"byte_end":44147,"line_start":931,"line_end":931,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44152,"byte_end":44220,"line_start":932,"line_end":932,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44225,"byte_end":44294,"line_start":933,"line_end":933,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44299,"byte_end":44329,"line_start":934,"line_end":934,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44334,"byte_end":44341,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44945,"byte_end":44950,"line_start":952,"line_end":952,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Date` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Date` from the input using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44538,"byte_end":44598,"line_start":943,"line_end":943,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44603,"byte_end":44647,"line_start":944,"line_end":944,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44652,"byte_end":44655,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44660,"byte_end":44671,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date, Date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44676,"byte_end":44733,"line_start":947,"line_end":947,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44738,"byte_end":44806,"line_start":948,"line_end":948,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Date::parse(\"2020-01-02\", &format)?, date!(2020 - 01 - 02));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44811,"byte_end":44886,"line_start":949,"line_end":949,"column_start":5,"column_end":80}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44891,"byte_end":44921,"line_start":950,"line_end":950,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44926,"byte_end":44933,"line_start":951,"line_end":951,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48141,"byte_end":48149,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47803,"byte_end":47848,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47849,"byte_end":47852,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47853,"byte_end":47950,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47951,"byte_end":47967,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47968,"byte_end":47971,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47972,"byte_end":48059,"line_start":34,"line_end":34,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48924,"byte_end":48928,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48736,"byte_end":48768,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48773,"byte_end":48776,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48781,"byte_end":48792,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48797,"byte_end":48848,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48853,"byte_end":48897,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48902,"byte_end":48909,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49162,"byte_end":49172,"line_start":70,"line_end":70,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48960,"byte_end":48996,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49001,"byte_end":49004,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49009,"byte_end":49020,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49025,"byte_end":49076,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49081,"byte_end":49135,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49140,"byte_end":49147,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49413,"byte_end":49424,"line_start":78,"line_end":78,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49208,"byte_end":49245,"line_start":72,"line_end":72,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49250,"byte_end":49253,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49258,"byte_end":49269,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49274,"byte_end":49325,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49330,"byte_end":49386,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49391,"byte_end":49398,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49666,"byte_end":49677,"line_start":86,"line_end":86,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49461,"byte_end":49498,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49503,"byte_end":49506,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49511,"byte_end":49522,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49527,"byte_end":49578,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49583,"byte_end":49639,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49644,"byte_end":49651,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49904,"byte_end":49910,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49714,"byte_end":49746,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49751,"byte_end":49754,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49759,"byte_end":49770,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49775,"byte_end":49826,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49831,"byte_end":49877,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49882,"byte_end":49889,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50132,"byte_end":50138,"line_start":102,"line_end":102,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49942,"byte_end":49974,"line_start":96,"line_end":96,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49979,"byte_end":49982,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49987,"byte_end":49998,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50003,"byte_end":50054,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50059,"byte_end":50105,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50110,"byte_end":50117,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50354,"byte_end":50358,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50170,"byte_end":50200,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50205,"byte_end":50208,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50213,"byte_end":50224,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50229,"byte_end":50280,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50285,"byte_end":50327,"line_start":108,"line_end":108,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50332,"byte_end":50339,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50569,"byte_end":50572,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50388,"byte_end":50417,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50422,"byte_end":50425,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50430,"byte_end":50441,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50446,"byte_end":50497,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50502,"byte_end":50542,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50547,"byte_end":50554,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50785,"byte_end":50789,"line_start":126,"line_end":126,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50601,"byte_end":50631,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50636,"byte_end":50639,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50644,"byte_end":50655,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50660,"byte_end":50711,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50716,"byte_end":50758,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50763,"byte_end":50770,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50929,"byte_end":50932,"line_start":129,"line_end":129,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50819,"byte_end":50914,"line_start":128,"line_end":128,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51101,"byte_end":51104,"line_start":132,"line_end":132,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50991,"byte_end":51086,"line_start":131,"line_end":131,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51437,"byte_end":51444,"line_start":143,"line_end":143,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"pub const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51214,"byte_end":51254,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51259,"byte_end":51262,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51267,"byte_end":51278,"line_start":138,"line_end":138,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51283,"byte_end":51322,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51327,"byte_end":51362,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51367,"byte_end":51407,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51412,"byte_end":51419,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51794,"byte_end":51805,"line_start":155,"line_end":155,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51523,"byte_end":51559,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51564,"byte_end":51567,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51572,"byte_end":51583,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51588,"byte_end":51627,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51632,"byte_end":51674,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51679,"byte_end":51719,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51724,"byte_end":51764,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51769,"byte_end":51776,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52153,"byte_end":52164,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51882,"byte_end":51918,"line_start":159,"line_end":159,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51923,"byte_end":51926,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51931,"byte_end":51942,"line_start":161,"line_end":161,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51947,"byte_end":51986,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51991,"byte_end":52030,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52035,"byte_end":52075,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52080,"byte_end":52123,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52128,"byte_end":52135,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52676,"byte_end":52679,"line_start":183,"line_end":183,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"pub const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52287,"byte_end":52330,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52335,"byte_end":52338,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52343,"byte_end":52419,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52424,"byte_end":52427,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52432,"byte_end":52443,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52448,"byte_end":52487,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52492,"byte_end":52539,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52544,"byte_end":52591,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52596,"byte_end":52646,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52651,"byte_end":52658,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53987,"byte_end":53990,"line_start":215,"line_end":215,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"pub const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53537,"byte_end":53628,"line_start":206,"line_end":206,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53633,"byte_end":53699,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53704,"byte_end":53707,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53712,"byte_end":53723,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53728,"byte_end":53779,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53784,"byte_end":53833,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53838,"byte_end":53891,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53896,"byte_end":53957,"line_start":213,"line_end":213,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53962,"byte_end":53969,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54726,"byte_end":54731,"line_start":237,"line_end":237,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"pub const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54438,"byte_end":54511,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54516,"byte_end":54557,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54562,"byte_end":54565,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54570,"byte_end":54581,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54586,"byte_end":54637,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54642,"byte_end":54696,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54701,"byte_end":54708,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55087,"byte_end":55091,"line_start":248,"line_end":248,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"pub const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54804,"byte_end":54876,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54881,"byte_end":54920,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54925,"byte_end":54928,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54933,"byte_end":54944,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54949,"byte_end":55000,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55005,"byte_end":55057,"line_start":246,"line_end":246,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55062,"byte_end":55069,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55445,"byte_end":55450,"line_start":259,"line_end":259,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"pub const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55161,"byte_end":55234,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55239,"byte_end":55278,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55283,"byte_end":55286,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55291,"byte_end":55302,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55307,"byte_end":55358,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55363,"byte_end":55415,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55420,"byte_end":55427,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55805,"byte_end":55812,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"pub const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55521,"byte_end":55596,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55601,"byte_end":55639,"line_start":264,"line_end":264,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55644,"byte_end":55647,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55652,"byte_end":55663,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55668,"byte_end":55719,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55724,"byte_end":55775,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55780,"byte_end":55787,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56119,"byte_end":56126,"line_start":280,"line_end":280,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"pub const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55884,"byte_end":55945,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55950,"byte_end":55953,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55958,"byte_end":55969,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55974,"byte_end":56025,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56030,"byte_end":56089,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56094,"byte_end":56101,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56521,"byte_end":56532,"line_start":291,"line_end":291,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"pub fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56202,"byte_end":56289,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56294,"byte_end":56297,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56302,"byte_end":56313,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56318,"byte_end":56369,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56374,"byte_end":56432,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56437,"byte_end":56497,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56502,"byte_end":56509,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56971,"byte_end":56982,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"pub fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56650,"byte_end":56737,"line_start":295,"line_end":295,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56742,"byte_end":56745,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56750,"byte_end":56761,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56766,"byte_end":56817,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56822,"byte_end":56880,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56885,"byte_end":56947,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56952,"byte_end":56959,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57418,"byte_end":57430,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"pub const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57100,"byte_end":57166,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57171,"byte_end":57174,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57179,"byte_end":57190,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57195,"byte_end":57246,"line_start":309,"line_end":309,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57251,"byte_end":57315,"line_start":310,"line_end":310,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57320,"byte_end":57388,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57393,"byte_end":57400,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57915,"byte_end":57927,"line_start":327,"line_end":327,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"pub const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57599,"byte_end":57665,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57670,"byte_end":57673,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57678,"byte_end":57689,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57694,"byte_end":57745,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57750,"byte_end":57813,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57818,"byte_end":57885,"line_start":325,"line_end":325,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57890,"byte_end":57897,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58423,"byte_end":58434,"line_start":341,"line_end":341,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"pub const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58100,"byte_end":58165,"line_start":334,"line_end":334,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58170,"byte_end":58173,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58178,"byte_end":58189,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58194,"byte_end":58245,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58250,"byte_end":58317,"line_start":338,"line_end":338,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58322,"byte_end":58393,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58398,"byte_end":58405,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59433,"byte_end":59444,"line_start":370,"line_end":370,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"pub const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59088,"byte_end":59138,"line_start":361,"line_end":361,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59143,"byte_end":59146,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59151,"byte_end":59162,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59167,"byte_end":59206,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59211,"byte_end":59254,"line_start":365,"line_end":365,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59259,"byte_end":59306,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59311,"byte_end":59353,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59358,"byte_end":59403,"line_start":368,"line_end":368,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59408,"byte_end":59415,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59852,"byte_end":59862,"line_start":383,"line_end":383,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"pub const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59510,"byte_end":59559,"line_start":374,"line_end":374,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59564,"byte_end":59567,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59572,"byte_end":59583,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59588,"byte_end":59627,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59632,"byte_end":59673,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59678,"byte_end":59723,"line_start":379,"line_end":379,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59728,"byte_end":59771,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59776,"byte_end":59822,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59827,"byte_end":59834,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60280,"byte_end":60291,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"pub const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59927,"byte_end":59977,"line_start":387,"line_end":387,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59982,"byte_end":59985,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59990,"byte_end":60001,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60006,"byte_end":60045,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60050,"byte_end":60093,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60098,"byte_end":60145,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60150,"byte_end":60196,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60201,"byte_end":60250,"line_start":394,"line_end":394,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60255,"byte_end":60262,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60722,"byte_end":60735,"line_start":409,"line_end":409,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60355,"byte_end":60407,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60412,"byte_end":60415,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60420,"byte_end":60431,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60436,"byte_end":60475,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60480,"byte_end":60527,"line_start":404,"line_end":404,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60532,"byte_end":60583,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60588,"byte_end":60636,"line_start":406,"line_end":406,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60641,"byte_end":60692,"line_start":407,"line_end":407,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60697,"byte_end":60704,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61164,"byte_end":61177,"line_start":422,"line_end":422,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60796,"byte_end":60848,"line_start":413,"line_end":413,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60853,"byte_end":60856,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60861,"byte_end":60872,"line_start":415,"line_end":415,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60877,"byte_end":60916,"line_start":416,"line_end":416,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60921,"byte_end":60968,"line_start":417,"line_end":417,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60973,"byte_end":61024,"line_start":418,"line_end":418,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61029,"byte_end":61077,"line_start":419,"line_end":419,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61082,"byte_end":61134,"line_start":420,"line_end":420,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61139,"byte_end":61146,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61492,"byte_end":61506,"line_start":433,"line_end":433,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"pub fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61225,"byte_end":61282,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61287,"byte_end":61290,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61295,"byte_end":61306,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61311,"byte_end":61350,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61355,"byte_end":61407,"line_start":430,"line_end":430,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61412,"byte_end":61468,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61473,"byte_end":61480,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61871,"byte_end":61885,"line_start":444,"line_end":444,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"pub fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61604,"byte_end":61661,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61666,"byte_end":61669,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61674,"byte_end":61685,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61690,"byte_end":61729,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61734,"byte_end":61786,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61791,"byte_end":61847,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61852,"byte_end":61859,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62392,"byte_end":62410,"line_start":457,"line_end":457,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"pub const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61983,"byte_end":62040,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62045,"byte_end":62048,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62053,"byte_end":62064,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62069,"byte_end":62108,"line_start":451,"line_end":451,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62113,"byte_end":62169,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62174,"byte_end":62234,"line_start":453,"line_end":453,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62239,"byte_end":62296,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62301,"byte_end":62362,"line_start":455,"line_end":455,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62367,"byte_end":62374,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62933,"byte_end":62952,"line_start":471,"line_end":471,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"pub const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62514,"byte_end":62582,"line_start":461,"line_end":461,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62587,"byte_end":62590,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62595,"byte_end":62635,"line_start":463,"line_end":463,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62640,"byte_end":62643,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62648,"byte_end":62659,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62664,"byte_end":62703,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62708,"byte_end":62765,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62770,"byte_end":62831,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62836,"byte_end":62843,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63442,"byte_end":63460,"line_start":484,"line_end":484,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"pub const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63023,"byte_end":63080,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63085,"byte_end":63088,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63093,"byte_end":63104,"line_start":477,"line_end":477,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63109,"byte_end":63148,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63153,"byte_end":63214,"line_start":479,"line_end":479,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63219,"byte_end":63284,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63289,"byte_end":63346,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63351,"byte_end":63412,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63417,"byte_end":63424,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63925,"byte_end":63944,"line_start":497,"line_end":497,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"pub const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63564,"byte_end":63632,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63637,"byte_end":63640,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63645,"byte_end":63693,"line_start":490,"line_end":490,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63698,"byte_end":63701,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63706,"byte_end":63717,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63722,"byte_end":63761,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63766,"byte_end":63826,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63831,"byte_end":63895,"line_start":495,"line_end":495,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63900,"byte_end":63907,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64410,"byte_end":64427,"line_start":510,"line_end":510,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"pub const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64004,"byte_end":64054,"line_start":501,"line_end":501,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64059,"byte_end":64062,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64067,"byte_end":64078,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64083,"byte_end":64122,"line_start":504,"line_end":504,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64127,"byte_end":64187,"line_start":505,"line_end":505,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64192,"byte_end":64256,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64261,"byte_end":64316,"line_start":507,"line_end":507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64321,"byte_end":64380,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64385,"byte_end":64392,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64934,"byte_end":64952,"line_start":523,"line_end":523,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"pub const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64527,"byte_end":64594,"line_start":514,"line_end":514,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64599,"byte_end":64602,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64607,"byte_end":64690,"line_start":516,"line_end":516,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64695,"byte_end":64698,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64703,"byte_end":64714,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64719,"byte_end":64758,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64763,"byte_end":64829,"line_start":520,"line_end":520,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64834,"byte_end":64904,"line_start":521,"line_end":521,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64909,"byte_end":64916,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65469,"byte_end":65480,"line_start":537,"line_end":537,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"pub const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65063,"byte_end":65131,"line_start":529,"line_end":529,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65136,"byte_end":65139,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65144,"byte_end":65155,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65160,"byte_end":65211,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65216,"byte_end":65289,"line_start":533,"line_end":533,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65294,"byte_end":65359,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65364,"byte_end":65439,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65444,"byte_end":65451,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66519,"byte_end":66530,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"pub const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66110,"byte_end":66178,"line_start":552,"line_end":552,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66183,"byte_end":66186,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66191,"byte_end":66202,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66207,"byte_end":66258,"line_start":555,"line_end":555,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66263,"byte_end":66338,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66343,"byte_end":66408,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66413,"byte_end":66489,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66494,"byte_end":66501,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67657,"byte_end":67668,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"pub const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67160,"byte_end":67228,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67233,"byte_end":67236,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67241,"byte_end":67252,"line_start":577,"line_end":577,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67257,"byte_end":67308,"line_start":578,"line_end":578,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67313,"byte_end":67376,"line_start":579,"line_end":579,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67381,"byte_end":67448,"line_start":580,"line_end":580,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67453,"byte_end":67515,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67520,"byte_end":67571,"line_start":582,"line_end":582,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67576,"byte_end":67627,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67632,"byte_end":67639,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68546,"byte_end":68557,"line_start":605,"line_end":605,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"pub const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68164,"byte_end":68254,"line_start":597,"line_end":597,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68259,"byte_end":68262,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68267,"byte_end":68278,"line_start":599,"line_end":599,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68283,"byte_end":68322,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68327,"byte_end":68390,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68395,"byte_end":68462,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68467,"byte_end":68516,"line_start":603,"line_end":603,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68521,"byte_end":68528,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69587,"byte_end":69601,"line_start":628,"line_end":628,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"pub const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69059,"byte_end":69121,"line_start":616,"line_end":616,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69126,"byte_end":69129,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69134,"byte_end":69145,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69150,"byte_end":69201,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69206,"byte_end":69276,"line_start":620,"line_end":620,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69281,"byte_end":69358,"line_start":621,"line_end":621,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69363,"byte_end":69378,"line_start":622,"line_end":622,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69383,"byte_end":69440,"line_start":623,"line_end":623,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69445,"byte_end":69466,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69471,"byte_end":69477,"line_start":625,"line_end":625,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69482,"byte_end":69557,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69562,"byte_end":69569,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":71069,"byte_end":71083,"line_start":667,"line_end":667,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"pub const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70541,"byte_end":70603,"line_start":655,"line_end":655,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70608,"byte_end":70611,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70616,"byte_end":70627,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70632,"byte_end":70683,"line_start":658,"line_end":658,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70688,"byte_end":70760,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70765,"byte_end":70842,"line_start":660,"line_end":660,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70847,"byte_end":70862,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70867,"byte_end":70924,"line_start":662,"line_end":662,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70929,"byte_end":70950,"line_start":663,"line_end":663,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70955,"byte_end":70961,"line_start":664,"line_end":664,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70966,"byte_end":71039,"line_start":665,"line_end":665,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":71044,"byte_end":71051,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72670,"byte_end":72684,"line_start":706,"line_end":706,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"pub const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72023,"byte_end":72085,"line_start":694,"line_end":694,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72090,"byte_end":72093,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72098,"byte_end":72109,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72114,"byte_end":72165,"line_start":697,"line_end":697,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72170,"byte_end":72230,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72235,"byte_end":72299,"line_start":699,"line_end":699,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72304,"byte_end":72366,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72371,"byte_end":72434,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72439,"byte_end":72502,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72507,"byte_end":72571,"line_start":703,"line_end":703,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72576,"byte_end":72640,"line_start":704,"line_end":704,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72645,"byte_end":72652,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73750,"byte_end":73757,"line_start":733,"line_end":733,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"pub fn time_fn<T, impl FnOnce() -> T: FnOnce() -> T>(impl FnOnce() -> T)\n-> (Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73559,"byte_end":73649,"line_start":730,"line_end":730,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73654,"byte_end":73710,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73715,"byte_end":73738,"line_start":732,"line_end":732,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":354},{"krate":0,"index":372},{"krate":0,"index":387},{"krate":0,"index":414},{"krate":0,"index":436},{"krate":0,"index":451},{"krate":0,"index":487},{"krate":0,"index":505},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":2631},{"krate":0,"index":2658},{"krate":0,"index":559},{"krate":0,"index":561}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":81764,"byte_end":81826,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86415,"byte_end":86429,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86146,"byte_end":86240,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86241,"byte_end":86253,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86951,"byte_end":86955,"line_start":28,"line_end":28,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"pub const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86867,"byte_end":86933,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87199,"byte_end":87213,"line_start":34,"line_end":34,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"pub const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87009,"byte_end":87096,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87101,"byte_end":87181,"line_start":33,"line_end":33,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89042,"byte_end":89057,"line_start":11,"line_end":11,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":88869,"byte_end":88966,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":88967,"byte_end":88985,"line_start":9,"line_end":9,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90024,"byte_end":90040,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":89825,"byte_end":89920,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":89921,"byte_end":89967,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91122,"byte_end":91149,"line_start":17,"line_end":17,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91004,"byte_end":91095,"line_start":15,"line_end":15,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91100,"byte_end":91117,"line_start":16,"line_end":16,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91324,"byte_end":91340,"line_start":21,"line_end":21,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91155,"byte_end":91242,"line_start":18,"line_end":18,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91247,"byte_end":91250,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91255,"byte_end":91319,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91421,"byte_end":91426,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91360,"byte_end":91416,"line_start":22,"line_end":22,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90991,"byte_end":90997,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"pub enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2531},{"krate":0,"index":2534}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90807,"byte_end":90845,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90846,"byte_end":90863,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":90864,"byte_end":90902,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94029,"byte_end":94051,"line_start":19,"line_end":19,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":93942,"byte_end":94002,"line_start":17,"line_end":17,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94007,"byte_end":94024,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":2542},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94205,"byte_end":94225,"line_start":25,"line_end":25,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94144,"byte_end":94178,"line_start":23,"line_end":23,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94183,"byte_end":94200,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94453,"byte_end":94468,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94398,"byte_end":94426,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94431,"byte_end":94448,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94690,"byte_end":94710,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94631,"byte_end":94663,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94668,"byte_end":94685,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":93911,"byte_end":93935,"line_start":16,"line_end":16,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"pub enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n            index: usize,\n        },\n    InvalidComponentName {\n            name: String,\n            index: usize,\n        },\n    InvalidModifier {\n            value: String,\n            index: usize,\n        },\n    MissingComponentName {\n            index: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":93672,"byte_end":93722,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":93845,"byte_end":93862,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96692,"byte_end":96706,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96509,"byte_end":96606,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96607,"byte_end":96635,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97828,"byte_end":97841,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::parse::Parse::TryFromParsed","value":"Parse::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":2574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97776,"byte_end":97823,"line_start":14,"line_end":14,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97914,"byte_end":97934,"line_start":17,"line_end":17,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::parse::Parse::ParseFromDescription","value":"Parse::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":2574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97862,"byte_end":97909,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98058,"byte_end":98086,"line_start":20,"line_end":20,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::parse::Parse::UnexpectedTrailingCharacters","value":"Parse::UnexpectedTrailingCharacters","parent":{"krate":0,"index":2574},"children":[],"decl_id":null,"docs":" The input should have ended, but there were characters remaining.\n","sig":null,"attributes":[{"value":"/ The input should have ended, but there were characters remaining.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97962,"byte_end":98031,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98036,"byte_end":98053,"line_start":19,"line_end":19,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97764,"byte_end":97769,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Parse","qualname":"::error::parse::Parse","value":"pub enum Parse {\n    TryFromParsed(TryFromParsed),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n}","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2581}],"decl_id":null,"docs":" An error that occurred at some stage of parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred at some stage of parsing.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97545,"byte_end":97597,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"allow(variant_size_differences)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97657,"byte_end":97691,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":97692,"byte_end":97709,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101271,"byte_end":101285,"line_start":15,"line_end":15,"column_start":5,"column_end":19},"name":"InvalidLiteral","qualname":"::error::parse_from_description::ParseFromDescription::InvalidLiteral","value":"ParseFromDescription::InvalidLiteral","parent":{"krate":0,"index":2595},"children":[],"decl_id":null,"docs":" A string literal was not what was expected.\n","sig":null,"attributes":[{"value":"/ A string literal was not what was expected.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101197,"byte_end":101244,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101249,"byte_end":101266,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101334,"byte_end":101350,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent","value":"ParseFromDescription::InvalidComponent(&'static str)","parent":{"krate":0,"index":2595},"children":[],"decl_id":null,"docs":" A dynamic component was not valid.\n","sig":null,"attributes":[{"value":"/ A dynamic component was not valid.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101291,"byte_end":101329,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101170,"byte_end":101190,"line_start":12,"line_end":12,"column_start":10,"column_end":30},"name":"ParseFromDescription","qualname":"::error::parse_from_description::ParseFromDescription","value":"pub enum ParseFromDescription {\n    InvalidLiteral,\n    InvalidComponent(&'static str),\n}","parent":null,"children":[{"krate":0,"index":2596},{"krate":0,"index":2598}],"decl_id":null,"docs":" An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.\n","sig":null,"attributes":[{"value":"/ An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":100938,"byte_end":101038,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101098,"byte_end":101115,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2614},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":102909,"byte_end":102932,"line_start":15,"line_end":15,"column_start":5,"column_end":28},"name":"InsufficientInformation","qualname":"::error::try_from_parsed::TryFromParsed::InsufficientInformation","value":"TryFromParsed::InsufficientInformation","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":" The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the\n type.\n","sig":null,"attributes":[{"value":"/ The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":102796,"byte_end":102890,"line_start":13,"line_end":13,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":102895,"byte_end":102904,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103002,"byte_end":103016,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange","value":"TryFromParsed::ComponentRange(error::ComponentRange)","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":" Some component contained an invalid value for the type.\n","sig":null,"attributes":[{"value":"/ Some component contained an invalid value for the type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":102938,"byte_end":102997,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":102776,"byte_end":102789,"line_start":12,"line_end":12,"column_start":10,"column_end":23},"name":"TryFromParsed","qualname":"::error::try_from_parsed::TryFromParsed","value":"pub enum TryFromParsed {\n    InsufficientInformation,\n    ComponentRange(error::ComponentRange),\n}","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2616}],"decl_id":null,"docs":" An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.\n","sig":null,"attributes":[{"value":"/ An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":102548,"byte_end":102644,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":102645,"byte_end":102662,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83399,"byte_end":83414,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2635},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83437,"byte_end":83451,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83591,"byte_end":83597,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83556,"byte_end":83586,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83643,"byte_end":83663,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::Error::ParseFromDescription","value":"Error::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83611,"byte_end":83638,"line_start":54,"line_end":54,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83745,"byte_end":83773,"line_start":58,"line_end":58,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::Error::UnexpectedTrailingCharacters","value":"Error::UnexpectedTrailingCharacters","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83691,"byte_end":83718,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83723,"byte_end":83740,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2646},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83811,"byte_end":83824,"line_start":60,"line_end":60,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::Error::TryFromParsed","value":"Error::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83779,"byte_end":83806,"line_start":59,"line_end":59,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2649},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83930,"byte_end":83954,"line_start":62,"line_end":62,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n\"alloc\"))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83845,"byte_end":83925,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2652},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83986,"byte_end":84002,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2655},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84026,"byte_end":84040,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83387,"byte_end":83392,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    Format(Format),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n    TryFromParsed(TryFromParsed),\n    InvalidFormatDescription(InvalidFormatDescription),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82944,"byte_end":83021,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83022,"byte_end":83025,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83026,"byte_end":83119,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83120,"byte_end":83212,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83213,"byte_end":83277,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83278,"byte_end":83325,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83343,"byte_end":83360,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":575},{"krate":0,"index":584},{"krate":0,"index":593},{"krate":0,"index":602},{"krate":0,"index":611},{"krate":0,"index":620}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":104694,"byte_end":104715,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":104928,"byte_end":104934,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":104854,"byte_end":104913,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106733,"byte_end":106750,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105051,"byte_end":105098,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105099,"byte_end":105102,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105103,"byte_end":105117,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105118,"byte_end":105121,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105122,"byte_end":105162,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105163,"byte_end":105166,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105167,"byte_end":105178,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105179,"byte_end":105230,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105231,"byte_end":105289,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105290,"byte_end":105350,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105351,"byte_end":105411,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105412,"byte_end":105462,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105463,"byte_end":105513,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105514,"byte_end":105560,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105561,"byte_end":105605,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105606,"byte_end":105652,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105653,"byte_end":105660,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105661,"byte_end":105664,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105665,"byte_end":105698,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105699,"byte_end":105702,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105703,"byte_end":105714,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105715,"byte_end":105766,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105767,"byte_end":105829,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105830,"byte_end":105894,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105895,"byte_end":105959,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":105960,"byte_end":106014,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106015,"byte_end":106069,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106070,"byte_end":106120,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106121,"byte_end":106169,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106170,"byte_end":106220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106221,"byte_end":106228,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106229,"byte_end":106232,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106233,"byte_end":106306,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106307,"byte_end":106310,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106311,"byte_end":106322,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106323,"byte_end":106362,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106363,"byte_end":106434,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106435,"byte_end":106506,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106507,"byte_end":106514,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106515,"byte_end":106518,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106519,"byte_end":106610,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106611,"byte_end":106708,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106709,"byte_end":106722,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106838,"byte_end":106849,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"pub fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106773,"byte_end":106830,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106939,"byte_end":106951,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"pub fn microseconds(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106873,"byte_end":106931,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107041,"byte_end":107053,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"pub fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106975,"byte_end":107033,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107138,"byte_end":107145,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"pub fn seconds(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107077,"byte_end":107130,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107230,"byte_end":107237,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"pub fn minutes(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107169,"byte_end":107222,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107320,"byte_end":107325,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"pub fn hours(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107261,"byte_end":107312,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107407,"byte_end":107411,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"pub fn days(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107349,"byte_end":107399,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107494,"byte_end":107499,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"pub fn weeks(Self) -> Duration","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":107435,"byte_end":107486,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110388,"byte_end":110408,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109069,"byte_end":109127,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109128,"byte_end":109131,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109132,"byte_end":109146,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109147,"byte_end":109150,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109151,"byte_end":109202,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109203,"byte_end":109206,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109207,"byte_end":109218,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109219,"byte_end":109261,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109262,"byte_end":109293,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109294,"byte_end":109355,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109356,"byte_end":109419,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109420,"byte_end":109483,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109484,"byte_end":109540,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109541,"byte_end":109602,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109603,"byte_end":109665,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109666,"byte_end":109728,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109729,"byte_end":109793,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109794,"byte_end":109801,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109802,"byte_end":109805,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109806,"byte_end":109890,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109891,"byte_end":109894,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109895,"byte_end":109906,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109907,"byte_end":109949,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109950,"byte_end":109965,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":109966,"byte_end":110015,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110016,"byte_end":110048,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110049,"byte_end":110055,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110056,"byte_end":110071,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110072,"byte_end":110121,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110122,"byte_end":110154,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110155,"byte_end":110161,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110162,"byte_end":110169,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110170,"byte_end":110173,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110174,"byte_end":110265,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110266,"byte_end":110363,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110364,"byte_end":110377,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110507,"byte_end":110522,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"pub fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110431,"byte_end":110499,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110626,"byte_end":110642,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"pub fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110549,"byte_end":110618,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110746,"byte_end":110762,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"pub fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110669,"byte_end":110738,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110861,"byte_end":110872,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"pub fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110789,"byte_end":110853,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110971,"byte_end":110982,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"pub fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110899,"byte_end":110963,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111079,"byte_end":111088,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"pub fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111009,"byte_end":111071,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111184,"byte_end":111192,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"pub fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111115,"byte_end":111176,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111289,"byte_end":111298,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"pub fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":111219,"byte_end":111281,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":676},{"krate":0,"index":694},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":3168},{"krate":0,"index":3185},{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9696,"byte_end":9752,"line_start":286,"line_end":286,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113278,"byte_end":113338,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113339,"byte_end":113342,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113343,"byte_end":113432,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113433,"byte_end":113513,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113514,"byte_end":113587,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113588,"byte_end":113667,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":119930,"byte_end":119933,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":119904,"byte_end":119925,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2664},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":119981,"byte_end":119986,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":119954,"byte_end":119976,"line_start":16,"line_end":16,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120042,"byte_end":120049,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120009,"byte_end":120037,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120099,"byte_end":120106,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120074,"byte_end":120094,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120161,"byte_end":120171,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120131,"byte_end":120156,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120225,"byte_end":120229,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120199,"byte_end":120220,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120276,"byte_end":120280,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120251,"byte_end":120271,"line_start":26,"line_end":26,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120334,"byte_end":120340,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120302,"byte_end":120329,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120396,"byte_end":120402,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120364,"byte_end":120391,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120460,"byte_end":120466,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120426,"byte_end":120455,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120527,"byte_end":120536,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120490,"byte_end":120522,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120595,"byte_end":120605,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120563,"byte_end":120590,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120683,"byte_end":120695,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120633,"byte_end":120678,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120777,"byte_end":120789,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":2660},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":120725,"byte_end":120772,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":119888,"byte_end":119897,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"pub enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":119768,"byte_end":119815,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":119816,"byte_end":119833,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2729},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2751},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2958},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2969},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3012},{"krate":0,"index":3014},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3026},{"krate":0,"index":3033},{"krate":0,"index":3035},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3118},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":692}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":125966,"byte_end":126003,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126323,"byte_end":126326,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":2716}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126227,"byte_end":126248,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126249,"byte_end":126266,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126386,"byte_end":126393,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126333,"byte_end":126377,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126594,"byte_end":126603,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126530,"byte_end":126589,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126667,"byte_end":126671,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126609,"byte_end":126662,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126732,"byte_end":126737,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126677,"byte_end":126727,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126514,"byte_end":126523,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"pub enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126407,"byte_end":126441,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126442,"byte_end":126459,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126839,"byte_end":126844,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126742,"byte_end":126764,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126765,"byte_end":126782,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126904,"byte_end":126911,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126851,"byte_end":126895,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126982,"byte_end":126986,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":126926,"byte_end":126973,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127057,"byte_end":127071,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127003,"byte_end":127048,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127185,"byte_end":127192,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":2764}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127082,"byte_end":127110,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127111,"byte_end":127128,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127252,"byte_end":127259,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127199,"byte_end":127243,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127468,"byte_end":127473,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127416,"byte_end":127463,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127533,"byte_end":127537,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127479,"byte_end":127528,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127703,"byte_end":127709,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127543,"byte_end":127616,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127621,"byte_end":127624,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127629,"byte_end":127698,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127875,"byte_end":127881,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127715,"byte_end":127788,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127793,"byte_end":127796,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127801,"byte_end":127870,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127398,"byte_end":127409,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"pub enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127273,"byte_end":127325,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127326,"byte_end":127343,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127981,"byte_end":127988,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127886,"byte_end":127906,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127907,"byte_end":127924,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128051,"byte_end":128055,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":127995,"byte_end":128042,"line_start":74,"line_end":74,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128159,"byte_end":128170,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128074,"byte_end":128150,"line_start":76,"line_end":76,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128236,"byte_end":128250,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128182,"byte_end":128227,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128455,"byte_end":128458,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128403,"byte_end":128450,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128528,"byte_end":128534,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128464,"byte_end":128523,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128604,"byte_end":128610,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":2813},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128540,"byte_end":128599,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128382,"byte_end":128396,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"pub enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128261,"byte_end":128309,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128310,"byte_end":128327,"line_start":83,"line_end":83,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128715,"byte_end":128725,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128615,"byte_end":128640,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128641,"byte_end":128658,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128785,"byte_end":128792,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2831},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128732,"byte_end":128776,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128863,"byte_end":128867,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":2831},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128807,"byte_end":128854,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129057,"byte_end":129061,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129021,"byte_end":129052,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129113,"byte_end":129120,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129067,"byte_end":129108,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129006,"byte_end":129014,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"pub enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2849}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128888,"byte_end":128933,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":128934,"byte_end":128951,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129221,"byte_end":129225,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129125,"byte_end":129146,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129147,"byte_end":129164,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129285,"byte_end":129292,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129232,"byte_end":129276,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129363,"byte_end":129367,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129307,"byte_end":129354,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129472,"byte_end":129486,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Whether the value is based on the ISO week number or the Gregorian calendar.\n","sig":null,"attributes":[{"value":"/ Whether the value is based on the ISO week number or the Gregorian calendar.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129383,"byte_end":129463,"line_start":122,"line_end":122,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129596,"byte_end":129613,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129498,"byte_end":129587,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129773,"byte_end":129777,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129678,"byte_end":129698,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129699,"byte_end":129716,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129837,"byte_end":129844,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129784,"byte_end":129828,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129922,"byte_end":129938,"line_start":137,"line_end":137,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129859,"byte_end":129913,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130051,"byte_end":130057,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":2895}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129949,"byte_end":129976,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":129977,"byte_end":129994,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130117,"byte_end":130124,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130064,"byte_end":130108,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130240,"byte_end":130246,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130138,"byte_end":130165,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130166,"byte_end":130183,"line_start":149,"line_end":149,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130303,"byte_end":130315,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130253,"byte_end":130294,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130481,"byte_end":130495,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130327,"byte_end":130372,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130377,"byte_end":130380,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130385,"byte_end":130472,"line_start":156,"line_end":156,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130610,"byte_end":130616,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":2924}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130506,"byte_end":130535,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130536,"byte_end":130553,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130676,"byte_end":130683,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2923},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130623,"byte_end":130667,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2938},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130882,"byte_end":130885,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130855,"byte_end":130877,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130919,"byte_end":130922,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130891,"byte_end":130914,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130958,"byte_end":130963,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130928,"byte_end":130953,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130998,"byte_end":131002,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130969,"byte_end":130993,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131037,"byte_end":131041,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131008,"byte_end":131032,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2948},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131075,"byte_end":131078,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131047,"byte_end":131070,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2950},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131114,"byte_end":131119,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131084,"byte_end":131109,"line_start":184,"line_end":184,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131155,"byte_end":131160,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131125,"byte_end":131150,"line_start":186,"line_end":186,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131195,"byte_end":131199,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131166,"byte_end":131190,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131337,"byte_end":131346,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":2937},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131205,"byte_end":131300,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131305,"byte_end":131332,"line_start":191,"line_end":191,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2937},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130833,"byte_end":130848,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"pub enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2946},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2952},{"krate":0,"index":2954},{"krate":0,"index":2956}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130697,"byte_end":130760,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":130761,"byte_end":130778,"line_start":169,"line_end":169,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2969},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131458,"byte_end":131467,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":2970}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131351,"byte_end":131383,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131384,"byte_end":131401,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131532,"byte_end":131538,"line_start":200,"line_end":200,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131474,"byte_end":131523,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131718,"byte_end":131728,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131616,"byte_end":131643,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131644,"byte_end":131661,"line_start":206,"line_end":206,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131799,"byte_end":131816,"line_start":210,"line_end":210,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":2983},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131735,"byte_end":131790,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131881,"byte_end":131888,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2983},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131828,"byte_end":131872,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132022,"byte_end":132034,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":2999}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131902,"byte_end":131947,"line_start":215,"line_end":215,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":131948,"byte_end":131965,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132094,"byte_end":132101,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132041,"byte_end":132085,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132237,"byte_end":132249,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":3013}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132115,"byte_end":132162,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132163,"byte_end":132180,"line_start":224,"line_end":224,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3013},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132309,"byte_end":132316,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132256,"byte_end":132300,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132552,"byte_end":132557,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":3026},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132493,"byte_end":132547,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132621,"byte_end":132625,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":3026},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132563,"byte_end":132616,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3031},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132745,"byte_end":132749,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":3026},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132631,"byte_end":132720,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132725,"byte_end":132740,"line_start":241,"line_end":241,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132479,"byte_end":132486,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"pub enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3031}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132360,"byte_end":132406,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":132407,"byte_end":132424,"line_start":233,"line_end":233,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":148386,"byte_end":148391,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"pub fn parse(&str) -> Result<Vec<FormatItem>, InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":148125,"byte_end":148183,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":148184,"byte_end":148187,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":148188,"byte_end":148250,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\parse.rs","byte_start":148251,"byte_end":148321,"line_start":82,"line_end":82,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114554,"byte_end":114564,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3166}],"decl_id":null,"docs":" Well-known formats, typically RFCs.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically RFCs.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114506,"byte_end":114545,"line_start":39,"line_end":39,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115398,"byte_end":115405,"line_start":63,"line_end":63,"column_start":16,"column_end":23},"name":"Rfc3339","qualname":"::format_description::well_known::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114571,"byte_end":114659,"line_start":41,"line_end":41,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114664,"byte_end":114667,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Format example: 1985-04-12T23:20:50.52Z","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114672,"byte_end":114715,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114720,"byte_end":114723,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114728,"byte_end":114739,"line_start":45,"line_end":45,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114744,"byte_end":114836,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114841,"byte_end":114856,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"1985-04-12T23:20:50.52Z\", &Rfc3339)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114861,"byte_end":114929,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114934,"byte_end":114982,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114987,"byte_end":114993,"line_start":50,"line_end":50,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":114998,"byte_end":115028,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115033,"byte_end":115040,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115045,"byte_end":115048,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115053,"byte_end":115064,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115069,"byte_end":115145,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115150,"byte_end":115165,"line_start":56,"line_end":56,"column_start":5,"column_end":20}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00).format(&Rfc3339)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115170,"byte_end":115237,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/     \"1985-04-12T23:20:50.52Z\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115242,"byte_end":115275,"line_start":58,"line_end":58,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115280,"byte_end":115286,"line_start":59,"line_end":59,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115291,"byte_end":115321,"line_start":60,"line_end":60,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115326,"byte_end":115333,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116267,"byte_end":116274,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"name":"Rfc2822","qualname":"::format_description::well_known::Rfc2822","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","sig":null,"attributes":[{"value":"/ The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115412,"byte_end":115500,"line_start":65,"line_end":65,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115505,"byte_end":115508,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Example: Fri, 21 Nov 1997 09:55:06 -0600","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115513,"byte_end":115557,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115562,"byte_end":115565,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115570,"byte_end":115584,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115589,"byte_end":115600,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115605,"byte_end":115697,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115702,"byte_end":115717,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"Sat, 12 Jun 1993 13:25:19 GMT\", &Rfc2822)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115722,"byte_end":115796,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     datetime!(1993-06-12 13:25:19 +00:00)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115801,"byte_end":115846,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115851,"byte_end":115857,"line_start":75,"line_end":75,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115862,"byte_end":115892,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115897,"byte_end":115904,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115909,"byte_end":115912,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115917,"byte_end":115928,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":115933,"byte_end":116009,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116014,"byte_end":116029,"line_start":81,"line_end":81,"column_start":5,"column_end":20}},{"value":"/     datetime!(1997-11-21 09:55:06 -06:00).format(&Rfc2822)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116034,"byte_end":116098,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/     \"Fri, 21 Nov 1997 09:55:06 -0600\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116103,"byte_end":116144,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116149,"byte_end":116155,"line_start":84,"line_end":84,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116160,"byte_end":116190,"line_start":85,"line_end":85,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116195,"byte_end":116202,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116665,"byte_end":116672,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::FormatItem::Literal","value":"FormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":3168},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116472,"byte_end":116507,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116512,"byte_end":116515,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116520,"byte_end":116610,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116615,"byte_end":116660,"line_start":99,"line_end":99,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116751,"byte_end":116760,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::FormatItem::Component","value":"FormatItem::Component(Component)","parent":{"krate":0,"index":3168},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116688,"byte_end":116746,"line_start":101,"line_end":101,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116886,"byte_end":116894,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::FormatItem::Compound","value":"FormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":3168},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116777,"byte_end":116860,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116865,"byte_end":116881,"line_start":104,"line_end":104,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117157,"byte_end":117165,"line_start":110,"line_end":110,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::FormatItem::Optional","value":"FormatItem::Optional(&'a Self)","parent":{"krate":0,"index":3168},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be\n no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116912,"byte_end":117007,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ no effect on the resulting `struct`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117012,"byte_end":117052,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117057,"byte_end":117060,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117065,"byte_end":117152,"line_start":109,"line_end":109,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117400,"byte_end":117405,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::FormatItem::First","value":"FormatItem::First(&'a [Self])","parent":{"krate":0,"index":3168},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the slice is used.  An empty slice is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117181,"byte_end":117272,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the slice is used.  An empty slice is a no-op when","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117277,"byte_end":117364,"line_start":112,"line_end":112,"column_start":5,"column_end":92}},{"value":"/ formatting or parsing.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117369,"byte_end":117395,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116451,"byte_end":116461,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"FormatItem","qualname":"::format_description::FormatItem","value":"pub enum FormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n    Optional(&'a Self),\n    First(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":3170},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3179},{"krate":0,"index":3182}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116279,"byte_end":116340,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":116341,"byte_end":116358,"line_start":92,"line_end":92,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":918},{"krate":0,"index":922},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9781,"byte_end":9811,"line_start":288,"line_end":288,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\mod.rs","byte_start":148724,"byte_end":148757,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164247,"byte_end":164258,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164155,"byte_end":164188,"line_start":13,"line_end":13,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164809,"byte_end":164815,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":830}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164632,"byte_end":164728,"line_start":27,"line_end":27,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164922,"byte_end":164933,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"pub fn format_into<impl io::Write: io::Write>(&Self, &mut impl io::Write,\nOption<Date>, Option<Time>, Option<UtcOffset>) -> Result<usize, error::Format>","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164826,"byte_end":164910,"line_start":30,"line_end":30,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165205,"byte_end":165211,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"pub fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165150,"byte_end":165193,"line_start":39,"line_end":39,"column_start":9,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173972,"byte_end":173979,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":172798,"byte_end":172898,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":172899,"byte_end":172902,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":172903,"byte_end":173002,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173003,"byte_end":173098,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173099,"byte_end":173109,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173110,"byte_end":173113,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173114,"byte_end":173212,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173213,"byte_end":173311,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173312,"byte_end":173409,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173410,"byte_end":173433,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173434,"byte_end":173437,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173438,"byte_end":173535,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173536,"byte_end":173635,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173636,"byte_end":173681,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173682,"byte_end":173685,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173686,"byte_end":173785,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173786,"byte_end":173816,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173872,"byte_end":173892,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":173980,"byte_end":173994,"line_start":32,"line_end":32,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174210,"byte_end":174213,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174043,"byte_end":174091,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174096,"byte_end":174099,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174104,"byte_end":174115,"line_start":38,"line_end":38,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174120,"byte_end":174144,"line_start":39,"line_end":39,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174149,"byte_end":174186,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174191,"byte_end":174198,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174725,"byte_end":174732,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174269,"byte_end":174364,"line_start":46,"line_end":46,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174369,"byte_end":174432,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174437,"byte_end":174440,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174445,"byte_end":174456,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174461,"byte_end":174535,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174540,"byte_end":174562,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174567,"byte_end":174600,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174605,"byte_end":174645,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174650,"byte_end":174701,"line_start":54,"line_end":54,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174706,"byte_end":174713,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175351,"byte_end":175362,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174853,"byte_end":174943,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174948,"byte_end":175039,"line_start":63,"line_end":63,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175044,"byte_end":175058,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175063,"byte_end":175066,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175071,"byte_end":175082,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175087,"byte_end":175137,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175142,"byte_end":175171,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175176,"byte_end":175246,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175251,"byte_end":175327,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175332,"byte_end":175339,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176214,"byte_end":176225,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175716,"byte_end":175806,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175811,"byte_end":175902,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175907,"byte_end":175921,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175926,"byte_end":175929,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175934,"byte_end":175945,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":175950,"byte_end":176000,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176005,"byte_end":176034,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176039,"byte_end":176109,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176114,"byte_end":176190,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176195,"byte_end":176202,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176821,"byte_end":176831,"line_start":112,"line_end":112,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"pub const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176615,"byte_end":176659,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176664,"byte_end":176667,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176672,"byte_end":176683,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176688,"byte_end":176712,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176717,"byte_end":176746,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176751,"byte_end":176791,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176796,"byte_end":176803,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083}],"decl_id":null,"docs":" Macros to construct statically known values.\n","sig":null,"attributes":[{"value":"cfg(feature = \"macros\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9869,"byte_end":9895,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"/ Macros to construct statically known values.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\macros.rs","byte_start":180209,"byte_end":180257,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185369,"byte_end":185376,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3237},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185386,"byte_end":185394,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185404,"byte_end":185409,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185419,"byte_end":185424,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185434,"byte_end":185437,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185447,"byte_end":185451,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3252},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185461,"byte_end":185465,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185475,"byte_end":185481,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185491,"byte_end":185500,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185510,"byte_end":185517,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185528,"byte_end":185536,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185547,"byte_end":185555,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185357,"byte_end":185362,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"pub enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3252},{"krate":0,"index":3255},{"krate":0,"index":3258},{"krate":0,"index":3261},{"krate":0,"index":3264},{"krate":0,"index":3267}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185201,"byte_end":185224,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185225,"byte_end":185272,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185285,"byte_end":185296,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186512,"byte_end":186520,"line_start":62,"line_end":62,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186340,"byte_end":186367,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186372,"byte_end":186375,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186380,"byte_end":186391,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186396,"byte_end":186418,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186423,"byte_end":186482,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186487,"byte_end":186494,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187107,"byte_end":187111,"line_start":85,"line_end":85,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186943,"byte_end":186966,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186971,"byte_end":186974,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186979,"byte_end":186990,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":186995,"byte_end":187017,"line_start":82,"line_end":82,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187022,"byte_end":187077,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187082,"byte_end":187089,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190378,"byte_end":190392,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":3285},{"krate":0,"index":3286}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":189993,"byte_end":190042,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190043,"byte_end":190046,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190047,"byte_end":190100,"line_start":28,"line_end":28,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190878,"byte_end":190888,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":1185},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190654,"byte_end":190690,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190695,"byte_end":190698,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190703,"byte_end":190714,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190719,"byte_end":190770,"line_start":44,"line_end":44,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190775,"byte_end":190851,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190856,"byte_end":190863,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191399,"byte_end":191406,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"pub fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191009,"byte_end":191081,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191086,"byte_end":191089,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191094,"byte_end":191105,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191110,"byte_end":191159,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191164,"byte_end":191218,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191223,"byte_end":191288,"line_start":57,"line_end":57,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191293,"byte_end":191300,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":191305,"byte_end":191328,"line_start":59,"line_end":59,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192887,"byte_end":192896,"line_start":103,"line_end":103,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"pub const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192080,"byte_end":192174,"line_start":82,"line_end":82,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192179,"byte_end":192182,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192187,"byte_end":192198,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192203,"byte_end":192246,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192251,"byte_end":192266,"line_start":86,"line_end":86,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192271,"byte_end":192309,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192314,"byte_end":192349,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192354,"byte_end":192374,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192379,"byte_end":192392,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192397,"byte_end":192403,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192408,"byte_end":192411,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192416,"byte_end":192509,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192514,"byte_end":192517,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192522,"byte_end":192572,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192577,"byte_end":192625,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192630,"byte_end":192679,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192684,"byte_end":192736,"line_start":98,"line_end":98,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192741,"byte_end":192774,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192779,"byte_end":192814,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192819,"byte_end":192857,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":192862,"byte_end":192869,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194078,"byte_end":194097,"line_start":138,"line_end":138,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"pub const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193061,"byte_end":193152,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193157,"byte_end":193205,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193210,"byte_end":193213,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193218,"byte_end":193229,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193234,"byte_end":193285,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193290,"byte_end":193305,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193310,"byte_end":193357,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193362,"byte_end":193401,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193406,"byte_end":193412,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193417,"byte_end":193432,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193437,"byte_end":193496,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193501,"byte_end":193544,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193549,"byte_end":193555,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193560,"byte_end":193567,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193572,"byte_end":193575,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193580,"byte_end":193669,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193674,"byte_end":193688,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193693,"byte_end":193696,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193701,"byte_end":193712,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193717,"byte_end":193784,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193789,"byte_end":193835,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193840,"byte_end":193855,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193860,"byte_end":193947,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":193952,"byte_end":194002,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194007,"byte_end":194013,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194018,"byte_end":194048,"line_start":136,"line_end":136,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":194053,"byte_end":194060,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195773,"byte_end":195798,"line_start":179,"line_end":179,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"pub const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195205,"byte_end":195297,"line_start":165,"line_end":165,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195302,"byte_end":195369,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195374,"byte_end":195377,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195382,"byte_end":195393,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195398,"byte_end":195449,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195454,"byte_end":195469,"line_start":170,"line_end":170,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195474,"byte_end":195527,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195532,"byte_end":195571,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195576,"byte_end":195582,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195587,"byte_end":195602,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195607,"byte_end":195684,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195689,"byte_end":195732,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195737,"byte_end":195743,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":195748,"byte_end":195755,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196677,"byte_end":196683,"line_start":204,"line_end":204,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"pub const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196401,"byte_end":196427,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196432,"byte_end":196435,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196440,"byte_end":196451,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196456,"byte_end":196499,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196504,"byte_end":196574,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196579,"byte_end":196647,"line_start":202,"line_end":202,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196652,"byte_end":196659,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197045,"byte_end":197059,"line_start":215,"line_end":215,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"pub const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196736,"byte_end":196806,"line_start":208,"line_end":208,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196811,"byte_end":196814,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196819,"byte_end":196830,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196835,"byte_end":196868,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196873,"byte_end":196940,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":196945,"byte_end":197015,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197020,"byte_end":197027,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197760,"byte_end":197780,"line_start":234,"line_end":234,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"pub const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197422,"byte_end":197464,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197469,"byte_end":197472,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197477,"byte_end":197488,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197493,"byte_end":197524,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197529,"byte_end":197602,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197607,"byte_end":197622,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197627,"byte_end":197688,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197693,"byte_end":197719,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197724,"byte_end":197730,"line_start":232,"line_end":232,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197735,"byte_end":197742,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198301,"byte_end":198305,"line_start":250,"line_end":250,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197903,"byte_end":197945,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197950,"byte_end":197953,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197958,"byte_end":197969,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":197974,"byte_end":198023,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198028,"byte_end":198101,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198106,"byte_end":198121,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198126,"byte_end":198164,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198169,"byte_end":198204,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198209,"byte_end":198229,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198234,"byte_end":198260,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198265,"byte_end":198271,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198276,"byte_end":198283,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199298,"byte_end":199302,"line_start":276,"line_end":276,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198912,"byte_end":198954,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198959,"byte_end":198962,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198967,"byte_end":198978,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":198983,"byte_end":199032,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199037,"byte_end":199104,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199109,"byte_end":199124,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199129,"byte_end":199167,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199172,"byte_end":199207,"line_start":271,"line_end":271,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199212,"byte_end":199232,"line_start":272,"line_end":272,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199237,"byte_end":199257,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199262,"byte_end":199268,"line_start":274,"line_end":274,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199273,"byte_end":199280,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200343,"byte_end":200347,"line_start":306,"line_end":306,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199903,"byte_end":199953,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199958,"byte_end":199961,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199966,"byte_end":199977,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":199982,"byte_end":200025,"line_start":296,"line_end":296,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200030,"byte_end":200090,"line_start":297,"line_end":297,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200095,"byte_end":200110,"line_start":298,"line_end":298,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200115,"byte_end":200154,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200159,"byte_end":200194,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200199,"byte_end":200219,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200224,"byte_end":200237,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200242,"byte_end":200248,"line_start":303,"line_end":303,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200253,"byte_end":200313,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200318,"byte_end":200325,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201332,"byte_end":201337,"line_start":333,"line_end":333,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200907,"byte_end":200958,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200963,"byte_end":200966,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200971,"byte_end":200982,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":200987,"byte_end":201009,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201014,"byte_end":201057,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201062,"byte_end":201133,"line_start":325,"line_end":325,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201138,"byte_end":201153,"line_start":326,"line_end":326,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201158,"byte_end":201197,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201202,"byte_end":201237,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201242,"byte_end":201263,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201268,"byte_end":201291,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201296,"byte_end":201302,"line_start":331,"line_end":331,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201307,"byte_end":201314,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201833,"byte_end":201836,"line_start":351,"line_end":351,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201394,"byte_end":201443,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201448,"byte_end":201451,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201456,"byte_end":201516,"line_start":339,"line_end":339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201521,"byte_end":201524,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201529,"byte_end":201540,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201545,"byte_end":201588,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201593,"byte_end":201649,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201654,"byte_end":201669,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201674,"byte_end":201713,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201718,"byte_end":201753,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201758,"byte_end":201777,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201782,"byte_end":201792,"line_start":348,"line_end":348,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201797,"byte_end":201803,"line_start":349,"line_end":349,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201808,"byte_end":201815,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202348,"byte_end":202355,"line_start":369,"line_end":369,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201888,"byte_end":201949,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201954,"byte_end":201957,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":201962,"byte_end":202023,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202028,"byte_end":202031,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202036,"byte_end":202047,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202052,"byte_end":202095,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202100,"byte_end":202160,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202165,"byte_end":202180,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202185,"byte_end":202224,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202229,"byte_end":202264,"line_start":364,"line_end":364,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202269,"byte_end":202292,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202297,"byte_end":202307,"line_start":366,"line_end":366,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202312,"byte_end":202318,"line_start":367,"line_end":367,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202323,"byte_end":202330,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203410,"byte_end":203418,"line_start":394,"line_end":394,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202918,"byte_end":202979,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202984,"byte_end":202987,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":202992,"byte_end":203052,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203057,"byte_end":203060,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203065,"byte_end":203076,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203081,"byte_end":203114,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203119,"byte_end":203180,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203185,"byte_end":203246,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203251,"byte_end":203313,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203318,"byte_end":203380,"line_start":392,"line_end":392,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203385,"byte_end":203392,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204005,"byte_end":204022,"line_start":409,"line_end":409,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203475,"byte_end":203539,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203544,"byte_end":203547,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203552,"byte_end":203612,"line_start":400,"line_end":400,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203617,"byte_end":203620,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203625,"byte_end":203636,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203641,"byte_end":203674,"line_start":403,"line_end":403,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203679,"byte_end":203749,"line_start":404,"line_end":404,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203754,"byte_end":203824,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203829,"byte_end":203900,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203905,"byte_end":203975,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":203980,"byte_end":203987,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204618,"byte_end":204635,"line_start":424,"line_end":424,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204088,"byte_end":204152,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204157,"byte_end":204160,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204165,"byte_end":204225,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204230,"byte_end":204233,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204238,"byte_end":204249,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204254,"byte_end":204287,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204292,"byte_end":204362,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204367,"byte_end":204437,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204442,"byte_end":204513,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204518,"byte_end":204588,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204593,"byte_end":204600,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204967,"byte_end":204983,"line_start":437,"line_end":437,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204701,"byte_end":204734,"line_start":428,"line_end":428,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204739,"byte_end":204742,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204747,"byte_end":204758,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204763,"byte_end":204805,"line_start":431,"line_end":431,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204810,"byte_end":204825,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204830,"byte_end":204888,"line_start":433,"line_end":433,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204893,"byte_end":204926,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204931,"byte_end":204937,"line_start":435,"line_end":435,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":204942,"byte_end":204949,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205309,"byte_end":205324,"line_start":450,"line_end":450,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205062,"byte_end":205102,"line_start":441,"line_end":441,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205107,"byte_end":205110,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205115,"byte_end":205126,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205131,"byte_end":205164,"line_start":444,"line_end":444,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205169,"byte_end":205184,"line_start":445,"line_end":445,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205189,"byte_end":205246,"line_start":446,"line_end":446,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205251,"byte_end":205268,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205273,"byte_end":205279,"line_start":448,"line_end":448,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205284,"byte_end":205291,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206183,"byte_end":206199,"line_start":479,"line_end":479,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205396,"byte_end":205448,"line_start":454,"line_end":454,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205453,"byte_end":205456,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205461,"byte_end":205472,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205477,"byte_end":205524,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205529,"byte_end":205544,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205549,"byte_end":205607,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205612,"byte_end":205638,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205643,"byte_end":205649,"line_start":461,"line_end":461,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205654,"byte_end":205669,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205674,"byte_end":205732,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205737,"byte_end":205763,"line_start":464,"line_end":464,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205768,"byte_end":205774,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205779,"byte_end":205794,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205799,"byte_end":205857,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205862,"byte_end":205890,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205895,"byte_end":205901,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205906,"byte_end":205921,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205926,"byte_end":205984,"line_start":471,"line_end":471,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":205989,"byte_end":206017,"line_start":472,"line_end":472,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206022,"byte_end":206028,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206033,"byte_end":206048,"line_start":474,"line_end":474,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206053,"byte_end":206111,"line_start":475,"line_end":475,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206116,"byte_end":206142,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206147,"byte_end":206153,"line_start":477,"line_end":477,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206158,"byte_end":206165,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206650,"byte_end":206657,"line_start":491,"line_end":491,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206280,"byte_end":206333,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206338,"byte_end":206341,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206346,"byte_end":206357,"line_start":485,"line_end":485,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206362,"byte_end":206409,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206414,"byte_end":206480,"line_start":487,"line_end":487,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206485,"byte_end":206550,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206555,"byte_end":206620,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206625,"byte_end":206632,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207420,"byte_end":207433,"line_start":507,"line_end":507,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206718,"byte_end":206811,"line_start":495,"line_end":495,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206816,"byte_end":206819,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206824,"byte_end":206918,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":206923,"byte_end":207019,"line_start":498,"line_end":498,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207024,"byte_end":207027,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207032,"byte_end":207043,"line_start":500,"line_end":500,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207048,"byte_end":207081,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207086,"byte_end":207153,"line_start":502,"line_end":502,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207158,"byte_end":207232,"line_start":503,"line_end":503,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207237,"byte_end":207311,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207316,"byte_end":207390,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207395,"byte_end":207402,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207843,"byte_end":207849,"line_start":520,"line_end":520,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"pub const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207554,"byte_end":207597,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207602,"byte_end":207605,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207610,"byte_end":207621,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207626,"byte_end":207659,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207664,"byte_end":207734,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207739,"byte_end":207813,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207818,"byte_end":207825,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208308,"byte_end":208320,"line_start":537,"line_end":537,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"pub const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207914,"byte_end":207970,"line_start":524,"line_end":524,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207975,"byte_end":207978,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207983,"byte_end":207994,"line_start":526,"line_end":526,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":207999,"byte_end":208032,"line_start":527,"line_end":527,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208037,"byte_end":208052,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208057,"byte_end":208114,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208119,"byte_end":208139,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208144,"byte_end":208150,"line_start":531,"line_end":531,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208155,"byte_end":208170,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208175,"byte_end":208237,"line_start":533,"line_end":533,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208242,"byte_end":208267,"line_start":534,"line_end":534,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208272,"byte_end":208278,"line_start":535,"line_end":535,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208283,"byte_end":208290,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208798,"byte_end":208810,"line_start":554,"line_end":554,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"pub const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208396,"byte_end":208452,"line_start":541,"line_end":541,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208457,"byte_end":208460,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208465,"byte_end":208476,"line_start":543,"line_end":543,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208481,"byte_end":208514,"line_start":544,"line_end":544,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208519,"byte_end":208534,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208539,"byte_end":208596,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208601,"byte_end":208621,"line_start":547,"line_end":547,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208626,"byte_end":208632,"line_start":548,"line_end":548,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208637,"byte_end":208652,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208657,"byte_end":208723,"line_start":550,"line_end":550,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208728,"byte_end":208757,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208762,"byte_end":208768,"line_start":552,"line_end":552,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208773,"byte_end":208780,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209293,"byte_end":209304,"line_start":571,"line_end":571,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"pub const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208886,"byte_end":208941,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208946,"byte_end":208949,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208954,"byte_end":208965,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":208970,"byte_end":209003,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209008,"byte_end":209023,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209028,"byte_end":209084,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209089,"byte_end":209109,"line_start":564,"line_end":564,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209114,"byte_end":209120,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209125,"byte_end":209140,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209145,"byte_end":209214,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209219,"byte_end":209252,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209257,"byte_end":209263,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209268,"byte_end":209275,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209818,"byte_end":209822,"line_start":589,"line_end":589,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209379,"byte_end":209423,"line_start":575,"line_end":575,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209428,"byte_end":209431,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209436,"byte_end":209495,"line_start":577,"line_end":577,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209500,"byte_end":209503,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209508,"byte_end":209519,"line_start":579,"line_end":579,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209524,"byte_end":209567,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209572,"byte_end":209629,"line_start":581,"line_end":581,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209634,"byte_end":209649,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209654,"byte_end":209696,"line_start":583,"line_end":583,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209701,"byte_end":209736,"line_start":584,"line_end":584,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209741,"byte_end":209761,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209766,"byte_end":209777,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209782,"byte_end":209788,"line_start":587,"line_end":587,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":209793,"byte_end":209800,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210699,"byte_end":210705,"line_start":613,"line_end":613,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210241,"byte_end":210297,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210302,"byte_end":210305,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210310,"byte_end":210369,"line_start":601,"line_end":601,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210374,"byte_end":210377,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210382,"byte_end":210393,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210398,"byte_end":210441,"line_start":604,"line_end":604,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210446,"byte_end":210505,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210510,"byte_end":210525,"line_start":606,"line_end":606,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210530,"byte_end":210572,"line_start":607,"line_end":607,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210577,"byte_end":210615,"line_start":608,"line_end":608,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210620,"byte_end":210642,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210647,"byte_end":210658,"line_start":610,"line_end":610,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210663,"byte_end":210669,"line_start":611,"line_end":611,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":210674,"byte_end":210681,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211463,"byte_end":211469,"line_start":635,"line_end":635,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211000,"byte_end":211058,"line_start":621,"line_end":621,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211063,"byte_end":211066,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211071,"byte_end":211130,"line_start":623,"line_end":623,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211135,"byte_end":211138,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211143,"byte_end":211154,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211159,"byte_end":211202,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211207,"byte_end":211266,"line_start":627,"line_end":627,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211271,"byte_end":211286,"line_start":628,"line_end":628,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211291,"byte_end":211333,"line_start":629,"line_end":629,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211338,"byte_end":211379,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211384,"byte_end":211406,"line_start":631,"line_end":631,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211411,"byte_end":211422,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211427,"byte_end":211433,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211438,"byte_end":211445,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212144,"byte_end":212155,"line_start":652,"line_end":652,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211765,"byte_end":211829,"line_start":643,"line_end":643,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211834,"byte_end":211837,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211842,"byte_end":211904,"line_start":645,"line_end":645,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211909,"byte_end":211912,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211917,"byte_end":211928,"line_start":647,"line_end":647,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211933,"byte_end":211966,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":211971,"byte_end":212035,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212040,"byte_end":212114,"line_start":650,"line_end":650,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212119,"byte_end":212126,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212648,"byte_end":212659,"line_start":668,"line_end":668,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212222,"byte_end":212286,"line_start":656,"line_end":656,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212291,"byte_end":212294,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212299,"byte_end":212365,"line_start":658,"line_end":658,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212370,"byte_end":212373,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212378,"byte_end":212389,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212394,"byte_end":212427,"line_start":661,"line_end":661,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212432,"byte_end":212496,"line_start":662,"line_end":662,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212501,"byte_end":212516,"line_start":663,"line_end":663,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212521,"byte_end":212586,"line_start":664,"line_end":664,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212591,"byte_end":212607,"line_start":665,"line_end":665,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212612,"byte_end":212618,"line_start":666,"line_end":666,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212623,"byte_end":212630,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213161,"byte_end":213171,"line_start":684,"line_end":684,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212726,"byte_end":212789,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212794,"byte_end":212797,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212802,"byte_end":212872,"line_start":674,"line_end":674,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212877,"byte_end":212880,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212885,"byte_end":212896,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212901,"byte_end":212934,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":212939,"byte_end":213002,"line_start":678,"line_end":678,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213007,"byte_end":213022,"line_start":679,"line_end":679,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213027,"byte_end":213095,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213100,"byte_end":213120,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213125,"byte_end":213131,"line_start":682,"line_end":682,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213136,"byte_end":213143,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213988,"byte_end":213999,"line_start":707,"line_end":707,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213326,"byte_end":213399,"line_start":691,"line_end":691,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213404,"byte_end":213407,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213412,"byte_end":213419,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213424,"byte_end":213471,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213476,"byte_end":213519,"line_start":695,"line_end":695,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213524,"byte_end":213592,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213597,"byte_end":213653,"line_start":697,"line_end":697,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213658,"byte_end":213661,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213666,"byte_end":213734,"line_start":699,"line_end":699,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213739,"byte_end":213792,"line_start":700,"line_end":700,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213797,"byte_end":213800,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213805,"byte_end":213820,"line_start":702,"line_end":702,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213825,"byte_end":213893,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213898,"byte_end":213947,"line_start":704,"line_end":704,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213952,"byte_end":213958,"line_start":705,"line_end":705,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":213963,"byte_end":213970,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214888,"byte_end":214899,"line_start":728,"line_end":728,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214226,"byte_end":214299,"line_start":712,"line_end":712,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214304,"byte_end":214307,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214312,"byte_end":214319,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214324,"byte_end":214371,"line_start":715,"line_end":715,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214376,"byte_end":214419,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214424,"byte_end":214492,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214497,"byte_end":214550,"line_start":718,"line_end":718,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214555,"byte_end":214558,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214563,"byte_end":214631,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214636,"byte_end":214692,"line_start":721,"line_end":721,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214697,"byte_end":214700,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214705,"byte_end":214720,"line_start":723,"line_end":723,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214725,"byte_end":214793,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214798,"byte_end":214847,"line_start":725,"line_end":725,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214852,"byte_end":214858,"line_start":726,"line_end":726,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":214863,"byte_end":214870,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215913,"byte_end":215927,"line_start":755,"line_end":755,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215200,"byte_end":215261,"line_start":735,"line_end":735,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215266,"byte_end":215269,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215274,"byte_end":215281,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215286,"byte_end":215325,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215330,"byte_end":215363,"line_start":739,"line_end":739,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215368,"byte_end":215383,"line_start":740,"line_end":740,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215388,"byte_end":215462,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215467,"byte_end":215512,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215517,"byte_end":215523,"line_start":743,"line_end":743,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215528,"byte_end":215531,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215536,"byte_end":215551,"line_start":745,"line_end":745,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215556,"byte_end":215643,"line_start":746,"line_end":746,"column_start":5,"column_end":92}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215648,"byte_end":215709,"line_start":747,"line_end":747,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215714,"byte_end":215720,"line_start":748,"line_end":748,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215725,"byte_end":215728,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215733,"byte_end":215748,"line_start":750,"line_end":750,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215753,"byte_end":215824,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215829,"byte_end":215872,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215877,"byte_end":215883,"line_start":753,"line_end":753,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":215888,"byte_end":215895,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217060,"byte_end":217074,"line_start":789,"line_end":789,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216347,"byte_end":216408,"line_start":769,"line_end":769,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216413,"byte_end":216416,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216421,"byte_end":216428,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216433,"byte_end":216472,"line_start":772,"line_end":772,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216477,"byte_end":216510,"line_start":773,"line_end":773,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216515,"byte_end":216530,"line_start":774,"line_end":774,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216535,"byte_end":216606,"line_start":775,"line_end":775,"column_start":5,"column_end":76}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216611,"byte_end":216656,"line_start":776,"line_end":776,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216661,"byte_end":216667,"line_start":777,"line_end":777,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216672,"byte_end":216675,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216680,"byte_end":216695,"line_start":779,"line_end":779,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216700,"byte_end":216790,"line_start":780,"line_end":780,"column_start":5,"column_end":95}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216795,"byte_end":216856,"line_start":781,"line_end":781,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216861,"byte_end":216867,"line_start":782,"line_end":782,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216872,"byte_end":216875,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216880,"byte_end":216895,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216900,"byte_end":216971,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":216976,"byte_end":217019,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217024,"byte_end":217030,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217035,"byte_end":217042,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218368,"byte_end":218380,"line_start":827,"line_end":827,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217636,"byte_end":217722,"line_start":808,"line_end":808,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217727,"byte_end":217756,"line_start":809,"line_end":809,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217761,"byte_end":217764,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217769,"byte_end":217780,"line_start":811,"line_end":811,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217785,"byte_end":217826,"line_start":812,"line_end":812,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217831,"byte_end":217846,"line_start":813,"line_end":813,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217851,"byte_end":217917,"line_start":814,"line_end":814,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217922,"byte_end":217961,"line_start":815,"line_end":815,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217966,"byte_end":217972,"line_start":816,"line_end":816,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217977,"byte_end":217992,"line_start":817,"line_end":817,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217997,"byte_end":218062,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218067,"byte_end":218104,"line_start":819,"line_end":819,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218109,"byte_end":218115,"line_start":820,"line_end":820,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218120,"byte_end":218135,"line_start":821,"line_end":821,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218140,"byte_end":218205,"line_start":822,"line_end":822,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218210,"byte_end":218248,"line_start":823,"line_end":823,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218253,"byte_end":218259,"line_start":824,"line_end":824,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218264,"byte_end":218271,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218276,"byte_end":218350,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219157,"byte_end":219169,"line_start":849,"line_end":849,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218558,"byte_end":218644,"line_start":834,"line_end":834,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218649,"byte_end":218678,"line_start":835,"line_end":835,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218683,"byte_end":218686,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218691,"byte_end":218702,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218707,"byte_end":218748,"line_start":838,"line_end":838,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218753,"byte_end":218768,"line_start":839,"line_end":839,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218773,"byte_end":218845,"line_start":840,"line_end":840,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218850,"byte_end":218889,"line_start":841,"line_end":841,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218894,"byte_end":218900,"line_start":842,"line_end":842,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218905,"byte_end":218920,"line_start":843,"line_end":843,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":218925,"byte_end":218995,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219000,"byte_end":219037,"line_start":845,"line_end":845,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219042,"byte_end":219048,"line_start":846,"line_end":846,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219053,"byte_end":219060,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219065,"byte_end":219139,"line_start":848,"line_end":848,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219972,"byte_end":219989,"line_start":871,"line_end":871,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"pub const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219347,"byte_end":219434,"line_start":856,"line_end":856,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219439,"byte_end":219471,"line_start":857,"line_end":857,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219476,"byte_end":219479,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219484,"byte_end":219495,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219500,"byte_end":219533,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219538,"byte_end":219553,"line_start":861,"line_end":861,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219558,"byte_end":219645,"line_start":862,"line_end":862,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219650,"byte_end":219689,"line_start":863,"line_end":863,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219694,"byte_end":219700,"line_start":864,"line_end":864,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219705,"byte_end":219720,"line_start":865,"line_end":865,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219725,"byte_end":219810,"line_start":866,"line_end":866,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219815,"byte_end":219852,"line_start":867,"line_end":867,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219857,"byte_end":219863,"line_start":868,"line_end":868,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219868,"byte_end":219875,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":219880,"byte_end":219954,"line_start":870,"line_end":870,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220488,"byte_end":220502,"line_start":885,"line_end":885,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"pub const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220092,"byte_end":220162,"line_start":875,"line_end":875,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220167,"byte_end":220170,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220175,"byte_end":220186,"line_start":877,"line_end":877,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220191,"byte_end":220234,"line_start":878,"line_end":878,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220239,"byte_end":220254,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220259,"byte_end":220326,"line_start":880,"line_end":880,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220331,"byte_end":220368,"line_start":881,"line_end":881,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220373,"byte_end":220379,"line_start":882,"line_end":882,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220384,"byte_end":220391,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220396,"byte_end":220470,"line_start":884,"line_end":884,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221154,"byte_end":221166,"line_start":900,"line_end":900,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220597,"byte_end":220655,"line_start":889,"line_end":889,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220660,"byte_end":220663,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220668,"byte_end":220679,"line_start":891,"line_end":891,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220684,"byte_end":220717,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220722,"byte_end":220737,"line_start":893,"line_end":893,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220742,"byte_end":220805,"line_start":894,"line_end":894,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220810,"byte_end":220857,"line_start":895,"line_end":895,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220862,"byte_end":220868,"line_start":896,"line_end":896,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":220873,"byte_end":220997,"line_start":897,"line_end":897,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221002,"byte_end":221124,"line_start":898,"line_end":898,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221129,"byte_end":221136,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221861,"byte_end":221874,"line_start":920,"line_end":920,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221416,"byte_end":221450,"line_start":909,"line_end":909,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221455,"byte_end":221458,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221463,"byte_end":221474,"line_start":911,"line_end":911,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221479,"byte_end":221512,"line_start":912,"line_end":912,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221517,"byte_end":221539,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221544,"byte_end":221559,"line_start":914,"line_end":914,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221564,"byte_end":221638,"line_start":915,"line_end":915,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221643,"byte_end":221690,"line_start":916,"line_end":916,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221695,"byte_end":221701,"line_start":917,"line_end":917,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221706,"byte_end":221831,"line_start":918,"line_end":918,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":221836,"byte_end":221843,"line_start":919,"line_end":919,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222618,"byte_end":222629,"line_start":940,"line_end":940,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222129,"byte_end":222162,"line_start":929,"line_end":929,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222167,"byte_end":222170,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222175,"byte_end":222186,"line_start":931,"line_end":931,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222191,"byte_end":222224,"line_start":932,"line_end":932,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222229,"byte_end":222244,"line_start":933,"line_end":933,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222249,"byte_end":222308,"line_start":934,"line_end":934,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222313,"byte_end":222360,"line_start":935,"line_end":935,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222365,"byte_end":222371,"line_start":936,"line_end":936,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222376,"byte_end":222473,"line_start":937,"line_end":937,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222478,"byte_end":222588,"line_start":938,"line_end":938,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222593,"byte_end":222600,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223292,"byte_end":223304,"line_start":959,"line_end":959,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222875,"byte_end":222902,"line_start":949,"line_end":949,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222907,"byte_end":222910,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222915,"byte_end":222926,"line_start":951,"line_end":951,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222931,"byte_end":222964,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222969,"byte_end":222984,"line_start":953,"line_end":953,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":222989,"byte_end":223064,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223069,"byte_end":223131,"line_start":955,"line_end":955,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223136,"byte_end":223142,"line_start":956,"line_end":956,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223147,"byte_end":223262,"line_start":957,"line_end":957,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223267,"byte_end":223274,"line_start":958,"line_end":958,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223989,"byte_end":224003,"line_start":978,"line_end":978,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223553,"byte_end":223593,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223598,"byte_end":223601,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223606,"byte_end":223617,"line_start":970,"line_end":970,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223622,"byte_end":223655,"line_start":971,"line_end":971,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223660,"byte_end":223675,"line_start":972,"line_end":972,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223680,"byte_end":223757,"line_start":973,"line_end":973,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223762,"byte_end":223824,"line_start":974,"line_end":974,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223829,"byte_end":223835,"line_start":975,"line_end":975,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223840,"byte_end":223959,"line_start":976,"line_end":976,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":223964,"byte_end":223971,"line_start":977,"line_end":977,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224696,"byte_end":224710,"line_start":997,"line_end":997,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224258,"byte_end":224300,"line_start":987,"line_end":987,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224305,"byte_end":224308,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224313,"byte_end":224324,"line_start":989,"line_end":989,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224329,"byte_end":224362,"line_start":990,"line_end":990,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224367,"byte_end":224382,"line_start":991,"line_end":991,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224387,"byte_end":224464,"line_start":992,"line_end":992,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224469,"byte_end":224531,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224536,"byte_end":224542,"line_start":994,"line_end":994,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224547,"byte_end":224666,"line_start":995,"line_end":995,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224671,"byte_end":224678,"line_start":996,"line_end":996,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225421,"byte_end":225440,"line_start":1016,"line_end":1016,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":224965,"byte_end":225012,"line_start":1006,"line_end":1006,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225017,"byte_end":225020,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225025,"byte_end":225036,"line_start":1008,"line_end":1008,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225041,"byte_end":225074,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225079,"byte_end":225094,"line_start":1010,"line_end":1010,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225099,"byte_end":225181,"line_start":1011,"line_end":1011,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225186,"byte_end":225240,"line_start":1012,"line_end":1012,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225245,"byte_end":225251,"line_start":1013,"line_end":1013,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225256,"byte_end":225391,"line_start":1014,"line_end":1014,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225396,"byte_end":225403,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226206,"byte_end":226225,"line_start":1038,"line_end":1038,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225734,"byte_end":225781,"line_start":1028,"line_end":1028,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225786,"byte_end":225789,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225794,"byte_end":225805,"line_start":1030,"line_end":1030,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225810,"byte_end":225843,"line_start":1031,"line_end":1031,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225848,"byte_end":225863,"line_start":1032,"line_end":1032,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225868,"byte_end":225954,"line_start":1033,"line_end":1033,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":225959,"byte_end":226017,"line_start":1034,"line_end":1034,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226022,"byte_end":226028,"line_start":1035,"line_end":1035,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226033,"byte_end":226176,"line_start":1036,"line_end":1036,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226181,"byte_end":226188,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227003,"byte_end":227021,"line_start":1060,"line_end":1060,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226519,"byte_end":226565,"line_start":1050,"line_end":1050,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226570,"byte_end":226573,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226578,"byte_end":226589,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226594,"byte_end":226627,"line_start":1053,"line_end":1053,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226632,"byte_end":226647,"line_start":1054,"line_end":1054,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226652,"byte_end":226741,"line_start":1055,"line_end":1055,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226746,"byte_end":226808,"line_start":1056,"line_end":1056,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226813,"byte_end":226819,"line_start":1057,"line_end":1057,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226824,"byte_end":226973,"line_start":1058,"line_end":1058,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":226978,"byte_end":226985,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227520,"byte_end":227531,"line_start":1076,"line_end":1076,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227401,"byte_end":227459,"line_start":1074,"line_end":1074,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227464,"byte_end":227508,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228493,"byte_end":228499,"line_start":1105,"line_end":1105,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227896,"byte_end":227954,"line_start":1090,"line_end":1090,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227959,"byte_end":228003,"line_start":1091,"line_end":1091,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228008,"byte_end":228011,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228016,"byte_end":228027,"line_start":1093,"line_end":1093,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228032,"byte_end":228087,"line_start":1094,"line_end":1094,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228092,"byte_end":228135,"line_start":1095,"line_end":1095,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228140,"byte_end":228209,"line_start":1096,"line_end":1096,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228214,"byte_end":228276,"line_start":1097,"line_end":1097,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228281,"byte_end":228288,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228293,"byte_end":228308,"line_start":1099,"line_end":1099,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228313,"byte_end":228379,"line_start":1100,"line_end":1100,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228384,"byte_end":228423,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228428,"byte_end":228434,"line_start":1102,"line_end":1102,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228439,"byte_end":228469,"line_start":1103,"line_end":1103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228474,"byte_end":228481,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229427,"byte_end":229432,"line_start":1128,"line_end":1128,"column_start":12,"column_end":17},"name":"parse","qualname":"<OffsetDateTime>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse an `OffsetDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse an `OffsetDateTime` from the input using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228785,"byte_end":228856,"line_start":1113,"line_end":1113,"column_start":5,"column_end":76}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228861,"byte_end":228905,"line_start":1114,"line_end":1114,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228910,"byte_end":228913,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228918,"byte_end":228929,"line_start":1116,"line_end":1116,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228934,"byte_end":229005,"line_start":1117,"line_end":1117,"column_start":5,"column_end":76}},{"value":"/ let format = format_description::parse(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229010,"byte_end":229053,"line_start":1118,"line_end":1118,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229058,"byte_end":229127,"line_start":1119,"line_end":1119,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229132,"byte_end":229194,"line_start":1120,"line_end":1120,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229199,"byte_end":229206,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229211,"byte_end":229226,"line_start":1122,"line_end":1122,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"2020-01-02 03:04:05 +06:07:08\", &format)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229231,"byte_end":229304,"line_start":1123,"line_end":1123,"column_start":5,"column_end":78}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229309,"byte_end":229357,"line_start":1124,"line_end":1124,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229362,"byte_end":229368,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229373,"byte_end":229403,"line_start":1126,"line_end":1126,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":229408,"byte_end":229415,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsing","qualname":"::parsing","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1417},{"krate":0,"index":1507},{"krate":0,"index":1762},{"krate":0,"index":1943},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":3417},{"krate":0,"index":3423},{"krate":0,"index":1960},{"krate":0,"index":1971},{"krate":0,"index":1974}],"decl_id":null,"docs":" Parsing for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9945,"byte_end":9972,"line_start":296,"line_end":296,"column_start":1,"column_end":28}},{"value":"/ Parsing for various types.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":234662,"byte_end":234692,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258248,"byte_end":258256,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"Parsable","qualname":"::parsing::parsable::Parsable","value":"Parsable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be parsed.\n","sig":null,"attributes":[{"value":"/ A type that can be parsed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258159,"byte_end":258189,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258806,"byte_end":258812,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parsing::parsable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"decl_id":null,"docs":" Parse the item using a format description and an input.\n","sig":null,"attributes":[{"value":"/ Parse the item using a format description and an input.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258669,"byte_end":258728,"line_start":28,"line_end":28,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258998,"byte_end":259008,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"parse_into","qualname":"::parsing::parsable::sealed::Sealed::parse_into","value":"pub fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Parse the item into the provided [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into the provided [`Parsed`] struct.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258823,"byte_end":258878,"line_start":31,"line_end":31,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258887,"byte_end":258890,"line_start":32,"line_end":32,"column_start":9,"column_end":12}},{"value":"/ This method can be used to parse a single component without parsing the full value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258899,"byte_end":258986,"line_start":33,"line_end":33,"column_start":9,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259378,"byte_end":259383,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"parse","qualname":"::parsing::parsable::sealed::Sealed::parse","value":"pub fn parse(&Self, &[u8]) -> Result<Parsed, error::Parse>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Parse the item into a new [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into a new [`Parsed`] struct.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259149,"byte_end":259197,"line_start":40,"line_end":40,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259206,"byte_end":259209,"line_start":41,"line_end":41,"column_start":9,"column_end":12}},{"value":"/ This method can only be used to parse a complete value of a type. If any characters","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259218,"byte_end":259305,"line_start":42,"line_end":42,"column_start":9,"column_end":96}},{"value":"/ remain after parsing, an error will be returned.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259314,"byte_end":259366,"line_start":43,"line_end":43,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259754,"byte_end":259764,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"parse_date","qualname":"::parsing::parsable::sealed::Sealed::parse_date","value":"pub fn parse_date(&Self, &[u8]) -> Result<Date, error::Parse>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Parse a [`Date`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Date`] from the format description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259693,"byte_end":259742,"line_start":53,"line_end":53,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259945,"byte_end":259955,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"parse_time","qualname":"::parsing::parsable::sealed::Sealed::parse_time","value":"pub fn parse_time(&Self, &[u8]) -> Result<Time, error::Parse>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Parse a [`Time`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Time`] from the format description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":259884,"byte_end":259933,"line_start":58,"line_end":58,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260141,"byte_end":260153,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"parse_offset","qualname":"::parsing::parsable::sealed::Sealed::parse_offset","value":"pub fn parse_offset(&Self, &[u8]) -> Result<UtcOffset, error::Parse>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Parse a [`UtcOffset`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`UtcOffset`] from the format description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260075,"byte_end":260129,"line_start":63,"line_end":63,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260352,"byte_end":260367,"line_start":69,"line_end":69,"column_start":12,"column_end":27},"name":"parse_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_date_time","value":"pub fn parse_date_time(&Self, &[u8])\n-> Result<PrimitiveDateTime, error::Parse>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Parse a [`PrimitiveDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`PrimitiveDateTime`] from the format description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260278,"byte_end":260340,"line_start":68,"line_end":68,"column_start":9,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260571,"byte_end":260593,"line_start":74,"line_end":74,"column_start":12,"column_end":34},"name":"parse_offset_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_offset_date_time","value":"pub fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":" Parse a [`OffsetDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`OffsetDateTime`] from the format description.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260500,"byte_end":260559,"line_start":73,"line_end":73,"column_start":9,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":278573,"byte_end":278579,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::parsing::parsed::Parsed","value":"Parsed {  }","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344}],"decl_id":null,"docs":" All information parsed.","sig":null,"attributes":[{"value":"/ All information parsed.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":278247,"byte_end":278274,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":278275,"byte_end":278278,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This information is directly used to construct the final values.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":278279,"byte_end":278347,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":278348,"byte_end":278351,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Most users will not need think about this struct in any way. It is public to allow for manual","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":278352,"byte_end":278449,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ control over values, in the instance that the default parser is insufficient.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":278450,"byte_end":278531,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":280540,"byte_end":280543,"line_start":73,"line_end":73,"column_start":18,"column_end":21},"name":"new","qualname":"<Parsed>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Parsed` with no information known.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Parsed` with no information known.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":280458,"byte_end":280522,"line_start":72,"line_end":72,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281518,"byte_end":281528,"line_start":104,"line_end":104,"column_start":12,"column_end":22},"name":"parse_item","qualname":"<Parsed>::parse_item","value":"pub fn parse_item<'a>(&mut Self, &'a [u8], &FormatItem)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the\n `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281232,"byte_end":281326,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ `Ok` value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281331,"byte_end":281346,"line_start":100,"line_end":100,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281351,"byte_end":281354,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If a [`FormatItem::Optional`] is passed, parsing will not fail; the input will be returned","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281359,"byte_end":281453,"line_start":102,"line_end":102,"column_start":5,"column_end":99}},{"value":"/ as-is if the expected format is not present.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":281458,"byte_end":281506,"line_start":103,"line_end":103,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":283091,"byte_end":283102,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"parse_items","qualname":"<Parsed>::parse_items","value":"pub fn parse_items<'a>(&mut Self, &'a [u8], &[FormatItem])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as\n the `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282813,"byte_end":282909,"line_start":135,"line_end":135,"column_start":5,"column_end":101}},{"value":"/ the `Ok` value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282914,"byte_end":282933,"line_start":136,"line_end":136,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282938,"byte_end":282941,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This method will fail if any of the contained [`FormatItem`]s fail to parse. `self` will not","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":282946,"byte_end":283042,"line_start":138,"line_end":138,"column_start":5,"column_end":101}},{"value":"/ be mutated in this instance.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":283047,"byte_end":283079,"line_start":139,"line_end":139,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":283631,"byte_end":283644,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"parse_literal","qualname":"<Parsed>::parse_literal","value":"pub fn parse_literal<'a>(&'a [u8], &[u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a literal byte sequence. The remaining input is returned as the `Ok` value.\n","sig":null,"attributes":[{"value":"/ Parse a literal byte sequence. The remaining input is returned as the `Ok` value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":283534,"byte_end":283619,"line_start":155,"line_end":155,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":284001,"byte_end":284016,"line_start":167,"line_end":167,"column_start":12,"column_end":27},"name":"parse_component","qualname":"<Parsed>::parse_component","value":"pub fn parse_component<'a>(&mut Self, &'a [u8], Component)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single component, mutating the struct. The remaining input is returned as the `Ok`\n value.\n","sig":null,"attributes":[{"value":"/ Parse a single component, mutating the struct. The remaining input is returned as the `Ok`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":283880,"byte_end":283974,"line_start":165,"line_end":165,"column_start":5,"column_end":99}},{"value":"/ value.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":283979,"byte_end":283989,"line_start":166,"line_end":166,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289019,"byte_end":289023,"line_start":267,"line_end":267,"column_start":9,"column_end":13},"name":"year","qualname":"<Parsed>::year","value":"pub const fn year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289038,"byte_end":289051,"line_start":268,"line_end":268,"column_start":9,"column_end":22},"name":"year_last_two","qualname":"<Parsed>::year_last_two","value":"pub const fn year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289065,"byte_end":289073,"line_start":269,"line_end":269,"column_start":9,"column_end":17},"name":"iso_year","qualname":"<Parsed>::iso_year","value":"pub const fn iso_year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289088,"byte_end":289105,"line_start":270,"line_end":270,"column_start":9,"column_end":26},"name":"iso_year_last_two","qualname":"<Parsed>::iso_year_last_two","value":"pub const fn iso_year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289119,"byte_end":289124,"line_start":271,"line_end":271,"column_start":9,"column_end":14},"name":"month","qualname":"<Parsed>::month","value":"pub const fn month(&Self) -> Option<Month>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289141,"byte_end":289159,"line_start":272,"line_end":272,"column_start":9,"column_end":27},"name":"sunday_week_number","qualname":"<Parsed>::sunday_week_number","value":"pub const fn sunday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289173,"byte_end":289191,"line_start":273,"line_end":273,"column_start":9,"column_end":27},"name":"monday_week_number","qualname":"<Parsed>::monday_week_number","value":"pub const fn monday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289205,"byte_end":289220,"line_start":274,"line_end":274,"column_start":9,"column_end":24},"name":"iso_week_number","qualname":"<Parsed>::iso_week_number","value":"pub const fn iso_week_number(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289241,"byte_end":289248,"line_start":275,"line_end":275,"column_start":9,"column_end":16},"name":"weekday","qualname":"<Parsed>::weekday","value":"pub const fn weekday(&Self) -> Option<Weekday>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289267,"byte_end":289274,"line_start":276,"line_end":276,"column_start":9,"column_end":16},"name":"ordinal","qualname":"<Parsed>::ordinal","value":"pub const fn ordinal(&Self) -> Option<NonZeroU16>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289296,"byte_end":289299,"line_start":277,"line_end":277,"column_start":9,"column_end":12},"name":"day","qualname":"<Parsed>::day","value":"pub const fn day(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289320,"byte_end":289327,"line_start":278,"line_end":278,"column_start":9,"column_end":16},"name":"hour_24","qualname":"<Parsed>::hour_24","value":"pub const fn hour_24(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289341,"byte_end":289348,"line_start":279,"line_end":279,"column_start":9,"column_end":16},"name":"hour_12","qualname":"<Parsed>::hour_12","value":"pub const fn hour_12(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289369,"byte_end":289382,"line_start":280,"line_end":280,"column_start":9,"column_end":22},"name":"hour_12_is_pm","qualname":"<Parsed>::hour_12_is_pm","value":"pub const fn hour_12_is_pm(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289398,"byte_end":289404,"line_start":281,"line_end":281,"column_start":9,"column_end":15},"name":"minute","qualname":"<Parsed>::minute","value":"pub const fn minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289418,"byte_end":289424,"line_start":282,"line_end":282,"column_start":9,"column_end":15},"name":"second","qualname":"<Parsed>::second","value":"pub const fn second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289438,"byte_end":289447,"line_start":283,"line_end":283,"column_start":9,"column_end":18},"name":"subsecond","qualname":"<Parsed>::subsecond","value":"pub const fn subsecond(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289462,"byte_end":289473,"line_start":284,"line_end":284,"column_start":9,"column_end":20},"name":"offset_hour","qualname":"<Parsed>::offset_hour","value":"pub const fn offset_hour(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288836,"byte_end":288867,"line_start":257,"line_end":257,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289648,"byte_end":289661,"line_start":289,"line_end":289,"column_start":18,"column_end":31},"name":"offset_minute","qualname":"<Parsed>::offset_minute","value":"pub const fn offset_minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset minute.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289490,"byte_end":289541,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_minute_signed()` instead\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289546,"byte_end":289630,"line_start":288,"line_end":288,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289827,"byte_end":289847,"line_start":294,"line_end":294,"column_start":18,"column_end":38},"name":"offset_minute_signed","qualname":"<Parsed>::offset_minute_signed","value":"pub const fn offset_minute_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset minute as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset minute as an `i8`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289769,"byte_end":289809,"line_start":293,"line_end":293,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290067,"byte_end":290080,"line_start":300,"line_end":300,"column_start":18,"column_end":31},"name":"offset_second","qualname":"<Parsed>::offset_second","value":"pub const fn offset_second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset second.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289909,"byte_end":289960,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_second_signed()` instead\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":289965,"byte_end":290049,"line_start":299,"line_end":299,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290246,"byte_end":290266,"line_start":305,"line_end":305,"column_start":18,"column_end":38},"name":"offset_second_signed","qualname":"<Parsed>::offset_second_signed","value":"pub const fn offset_second_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset second as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset second as an `i8`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290188,"byte_end":290228,"line_start":304,"line_end":304,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291156,"byte_end":291164,"line_start":334,"line_end":334,"column_start":9,"column_end":17},"name":"set_year","qualname":"<Parsed>::set_year","value":"pub fn set_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291184,"byte_end":291201,"line_start":335,"line_end":335,"column_start":9,"column_end":26},"name":"set_year_last_two","qualname":"<Parsed>::set_year_last_two","value":"pub fn set_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291229,"byte_end":291241,"line_start":336,"line_end":336,"column_start":9,"column_end":21},"name":"set_iso_year","qualname":"<Parsed>::set_iso_year","value":"pub fn set_iso_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291265,"byte_end":291286,"line_start":337,"line_end":337,"column_start":9,"column_end":30},"name":"set_iso_year_last_two","qualname":"<Parsed>::set_iso_year_last_two","value":"pub fn set_iso_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291318,"byte_end":291327,"line_start":338,"line_end":338,"column_start":9,"column_end":18},"name":"set_month","qualname":"<Parsed>::set_month","value":"pub fn set_month(&mut Self, Month) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291350,"byte_end":291372,"line_start":339,"line_end":339,"column_start":9,"column_end":31},"name":"set_sunday_week_number","qualname":"<Parsed>::set_sunday_week_number","value":"pub fn set_sunday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291405,"byte_end":291427,"line_start":340,"line_end":340,"column_start":9,"column_end":31},"name":"set_monday_week_number","qualname":"<Parsed>::set_monday_week_number","value":"pub fn set_monday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291460,"byte_end":291479,"line_start":341,"line_end":341,"column_start":9,"column_end":28},"name":"set_iso_week_number","qualname":"<Parsed>::set_iso_week_number","value":"pub fn set_iso_week_number(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291516,"byte_end":291527,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"pub fn set_weekday(&mut Self, Weekday) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291554,"byte_end":291565,"line_start":343,"line_end":343,"column_start":9,"column_end":20},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"pub fn set_ordinal(&mut Self, NonZeroU16) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291595,"byte_end":291602,"line_start":344,"line_end":344,"column_start":9,"column_end":16},"name":"set_day","qualname":"<Parsed>::set_day","value":"pub fn set_day(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291627,"byte_end":291638,"line_start":345,"line_end":345,"column_start":9,"column_end":20},"name":"set_hour_24","qualname":"<Parsed>::set_hour_24","value":"pub fn set_hour_24(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291660,"byte_end":291671,"line_start":346,"line_end":346,"column_start":9,"column_end":20},"name":"set_hour_12","qualname":"<Parsed>::set_hour_12","value":"pub fn set_hour_12(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291700,"byte_end":291717,"line_start":347,"line_end":347,"column_start":9,"column_end":26},"name":"set_hour_12_is_pm","qualname":"<Parsed>::set_hour_12_is_pm","value":"pub fn set_hour_12_is_pm(&mut Self, bool) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291747,"byte_end":291757,"line_start":348,"line_end":348,"column_start":9,"column_end":19},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"pub fn set_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291778,"byte_end":291788,"line_start":349,"line_end":349,"column_start":9,"column_end":19},"name":"set_second","qualname":"<Parsed>::set_second","value":"pub fn set_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291809,"byte_end":291822,"line_start":350,"line_end":350,"column_start":9,"column_end":22},"name":"set_subsecond","qualname":"<Parsed>::set_subsecond","value":"pub fn set_subsecond(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291847,"byte_end":291862,"line_start":351,"line_end":351,"column_start":9,"column_end":24},"name":"set_offset_hour","qualname":"<Parsed>::set_offset_hour","value":"pub fn set_offset_hour(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":290739,"byte_end":290767,"line_start":320,"line_end":320,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292046,"byte_end":292063,"line_start":359,"line_end":359,"column_start":12,"column_end":29},"name":"set_offset_minute","qualname":"<Parsed>::set_offset_minute","value":"pub fn set_offset_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291891,"byte_end":291919,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_minute_signed()` instead\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291924,"byte_end":292034,"line_start":355,"line_end":358,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292296,"byte_end":292320,"line_start":368,"line_end":368,"column_start":12,"column_end":36},"name":"set_offset_minute_signed","qualname":"<Parsed>::set_offset_minute_signed","value":"pub fn set_offset_minute_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292246,"byte_end":292284,"line_start":367,"line_end":367,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292584,"byte_end":292601,"line_start":378,"line_end":378,"column_start":12,"column_end":29},"name":"set_offset_second","qualname":"<Parsed>::set_offset_second","value":"pub fn set_offset_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292429,"byte_end":292457,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_second_signed()` instead\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292462,"byte_end":292572,"line_start":374,"line_end":377,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292834,"byte_end":292858,"line_start":387,"line_end":387,"column_start":12,"column_end":36},"name":"set_offset_second_signed","qualname":"<Parsed>::set_offset_second_signed","value":"pub fn set_offset_second_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":292784,"byte_end":292822,"line_start":386,"line_end":386,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293836,"byte_end":293845,"line_start":417,"line_end":417,"column_start":9,"column_end":18},"name":"with_year","qualname":"<Parsed>::with_year","value":"pub const fn with_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293865,"byte_end":293883,"line_start":418,"line_end":418,"column_start":9,"column_end":27},"name":"with_year_last_two","qualname":"<Parsed>::with_year_last_two","value":"pub const fn with_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293911,"byte_end":293924,"line_start":419,"line_end":419,"column_start":9,"column_end":22},"name":"with_iso_year","qualname":"<Parsed>::with_iso_year","value":"pub const fn with_iso_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293948,"byte_end":293970,"line_start":420,"line_end":420,"column_start":9,"column_end":31},"name":"with_iso_year_last_two","qualname":"<Parsed>::with_iso_year_last_two","value":"pub const fn with_iso_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294002,"byte_end":294012,"line_start":421,"line_end":421,"column_start":9,"column_end":19},"name":"with_month","qualname":"<Parsed>::with_month","value":"pub const fn with_month(Self, Month) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294035,"byte_end":294058,"line_start":422,"line_end":422,"column_start":9,"column_end":32},"name":"with_sunday_week_number","qualname":"<Parsed>::with_sunday_week_number","value":"pub const fn with_sunday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294091,"byte_end":294114,"line_start":423,"line_end":423,"column_start":9,"column_end":32},"name":"with_monday_week_number","qualname":"<Parsed>::with_monday_week_number","value":"pub const fn with_monday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294147,"byte_end":294167,"line_start":424,"line_end":424,"column_start":9,"column_end":29},"name":"with_iso_week_number","qualname":"<Parsed>::with_iso_week_number","value":"pub const fn with_iso_week_number(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294204,"byte_end":294216,"line_start":425,"line_end":425,"column_start":9,"column_end":21},"name":"with_weekday","qualname":"<Parsed>::with_weekday","value":"pub const fn with_weekday(Self, Weekday) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294243,"byte_end":294255,"line_start":426,"line_end":426,"column_start":9,"column_end":21},"name":"with_ordinal","qualname":"<Parsed>::with_ordinal","value":"pub const fn with_ordinal(Self, NonZeroU16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294285,"byte_end":294293,"line_start":427,"line_end":427,"column_start":9,"column_end":17},"name":"with_day","qualname":"<Parsed>::with_day","value":"pub const fn with_day(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294318,"byte_end":294330,"line_start":428,"line_end":428,"column_start":9,"column_end":21},"name":"with_hour_24","qualname":"<Parsed>::with_hour_24","value":"pub const fn with_hour_24(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294352,"byte_end":294364,"line_start":429,"line_end":429,"column_start":9,"column_end":21},"name":"with_hour_12","qualname":"<Parsed>::with_hour_12","value":"pub const fn with_hour_12(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294393,"byte_end":294411,"line_start":430,"line_end":430,"column_start":9,"column_end":27},"name":"with_hour_12_is_pm","qualname":"<Parsed>::with_hour_12_is_pm","value":"pub const fn with_hour_12_is_pm(Self, bool) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294441,"byte_end":294452,"line_start":431,"line_end":431,"column_start":9,"column_end":20},"name":"with_minute","qualname":"<Parsed>::with_minute","value":"pub const fn with_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294473,"byte_end":294484,"line_start":432,"line_end":432,"column_start":9,"column_end":20},"name":"with_second","qualname":"<Parsed>::with_second","value":"pub const fn with_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294505,"byte_end":294519,"line_start":433,"line_end":433,"column_start":9,"column_end":23},"name":"with_subsecond","qualname":"<Parsed>::with_subsecond","value":"pub const fn with_subsecond(Self, u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294544,"byte_end":294560,"line_start":434,"line_end":434,"column_start":9,"column_end":25},"name":"with_offset_hour","qualname":"<Parsed>::with_offset_hour","value":"pub const fn with_offset_hour(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293371,"byte_end":293417,"line_start":403,"line_end":403,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294769,"byte_end":294787,"line_start":442,"line_end":442,"column_start":18,"column_end":36},"name":"with_offset_minute","qualname":"<Parsed>::with_offset_minute","value":"pub const fn with_offset_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294589,"byte_end":294635,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_minute_signed()` instead\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294640,"byte_end":294751,"line_start":438,"line_end":441,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295042,"byte_end":295067,"line_start":451,"line_end":451,"column_start":18,"column_end":43},"name":"with_offset_minute_signed","qualname":"<Parsed>::with_offset_minute_signed","value":"pub const fn with_offset_minute_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":294968,"byte_end":295024,"line_start":450,"line_end":450,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295359,"byte_end":295377,"line_start":461,"line_end":461,"column_start":18,"column_end":36},"name":"with_offset_second","qualname":"<Parsed>::with_offset_second","value":"pub const fn with_offset_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295179,"byte_end":295225,"line_start":456,"line_end":456,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_second_signed()` instead\")","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295230,"byte_end":295341,"line_start":457,"line_end":460,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295632,"byte_end":295657,"line_start":470,"line_end":470,"column_start":18,"column_end":43},"name":"with_offset_second_signed","qualname":"<Parsed>::with_offset_second_signed","value":"pub const fn with_offset_second_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component and return `self`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295558,"byte_end":295614,"line_start":469,"line_end":469,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303495,"byte_end":303512,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":3428},{"krate":0,"index":3429}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303388,"byte_end":303415,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304283,"byte_end":304286,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":2028},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303705,"byte_end":303775,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303780,"byte_end":303783,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303788,"byte_end":303865,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303870,"byte_end":303873,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303878,"byte_end":303956,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303961,"byte_end":304040,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304045,"byte_end":304048,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304053,"byte_end":304064,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304069,"byte_end":304123,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304128,"byte_end":304177,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MIN, datetime!(-999999 - 01 - 01 0:00));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304182,"byte_end":304256,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304261,"byte_end":304268,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304944,"byte_end":304947,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":2028},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304333,"byte_end":304402,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304407,"byte_end":304410,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304415,"byte_end":304492,"line_start":41,"line_end":41,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304497,"byte_end":304500,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304505,"byte_end":304592,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304597,"byte_end":304685,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304690,"byte_end":304693,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304698,"byte_end":304709,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304714,"byte_end":304768,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304773,"byte_end":304822,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MAX, datetime!(+999999 - 12 - 31 23:59:59.999_999_999));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304827,"byte_end":304917,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304922,"byte_end":304929,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305337,"byte_end":305340,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"pub const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":304994,"byte_end":305071,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305076,"byte_end":305079,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305084,"byte_end":305095,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305100,"byte_end":305168,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305173,"byte_end":305188,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305193,"byte_end":305256,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305261,"byte_end":305296,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305301,"byte_end":305307,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305312,"byte_end":305319,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305679,"byte_end":305683,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305447,"byte_end":305505,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305510,"byte_end":305513,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305518,"byte_end":305529,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305534,"byte_end":305575,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305580,"byte_end":305649,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305654,"byte_end":305661,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305943,"byte_end":305947,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305729,"byte_end":305787,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305792,"byte_end":305795,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305800,"byte_end":305811,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305816,"byte_end":305857,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":305862,"byte_end":305925,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306360,"byte_end":306364,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306056,"byte_end":306085,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306090,"byte_end":306093,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306098,"byte_end":306109,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306114,"byte_end":306147,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306152,"byte_end":306208,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306213,"byte_end":306269,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306274,"byte_end":306330,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306335,"byte_end":306342,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306692,"byte_end":306697,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306416,"byte_end":306446,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306451,"byte_end":306454,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306459,"byte_end":306470,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306475,"byte_end":306517,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306522,"byte_end":306589,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306594,"byte_end":306662,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306667,"byte_end":306674,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307060,"byte_end":307063,"line_start":120,"line_end":120,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306752,"byte_end":306780,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306785,"byte_end":306788,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306793,"byte_end":306853,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306858,"byte_end":306861,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306866,"byte_end":306877,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306882,"byte_end":306915,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306920,"byte_end":306972,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":306977,"byte_end":307030,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307035,"byte_end":307042,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307460,"byte_end":307467,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307113,"byte_end":307141,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307146,"byte_end":307149,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307154,"byte_end":307244,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307249,"byte_end":307252,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307257,"byte_end":307268,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307273,"byte_end":307306,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307311,"byte_end":307367,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307372,"byte_end":307430,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307435,"byte_end":307442,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308028,"byte_end":308036,"line_start":149,"line_end":149,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307522,"byte_end":307550,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307555,"byte_end":307558,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307563,"byte_end":307623,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307628,"byte_end":307631,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307636,"byte_end":307647,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307652,"byte_end":307685,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307690,"byte_end":307747,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307752,"byte_end":307810,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307815,"byte_end":307872,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307877,"byte_end":307935,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":307940,"byte_end":307998,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308003,"byte_end":308010,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308605,"byte_end":308622,"line_start":164,"line_end":164,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308091,"byte_end":308155,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308160,"byte_end":308163,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308168,"byte_end":308228,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308233,"byte_end":308236,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308241,"byte_end":308252,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308257,"byte_end":308290,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308295,"byte_end":308361,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308366,"byte_end":308432,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308437,"byte_end":308504,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308509,"byte_end":308575,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308580,"byte_end":308587,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309200,"byte_end":309217,"line_start":179,"line_end":179,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308686,"byte_end":308750,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308755,"byte_end":308758,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308763,"byte_end":308823,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308828,"byte_end":308831,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308836,"byte_end":308847,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308852,"byte_end":308885,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308890,"byte_end":308956,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":308961,"byte_end":309027,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309032,"byte_end":309099,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309104,"byte_end":309170,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309175,"byte_end":309182,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309543,"byte_end":309559,"line_start":192,"line_end":192,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309281,"byte_end":309314,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309319,"byte_end":309322,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309327,"byte_end":309338,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309343,"byte_end":309385,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309390,"byte_end":309405,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309410,"byte_end":309464,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309469,"byte_end":309502,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309507,"byte_end":309513,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309518,"byte_end":309525,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309845,"byte_end":309860,"line_start":202,"line_end":202,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309636,"byte_end":309676,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309681,"byte_end":309684,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309689,"byte_end":309700,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309705,"byte_end":309738,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309743,"byte_end":309815,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309820,"byte_end":309827,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310697,"byte_end":310713,"line_start":231,"line_end":231,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309930,"byte_end":309982,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309987,"byte_end":309990,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":309995,"byte_end":310006,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310011,"byte_end":310058,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310063,"byte_end":310078,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310083,"byte_end":310137,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310142,"byte_end":310168,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310173,"byte_end":310179,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310184,"byte_end":310199,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310204,"byte_end":310258,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310263,"byte_end":310289,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310294,"byte_end":310300,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310305,"byte_end":310320,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310325,"byte_end":310379,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310384,"byte_end":310412,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310417,"byte_end":310423,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310428,"byte_end":310443,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310448,"byte_end":310502,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310507,"byte_end":310535,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310540,"byte_end":310546,"line_start":225,"line_end":225,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310551,"byte_end":310566,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310571,"byte_end":310625,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310630,"byte_end":310656,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310661,"byte_end":310667,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310672,"byte_end":310679,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311719,"byte_end":311726,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310792,"byte_end":310812,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310817,"byte_end":310820,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310825,"byte_end":310836,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310841,"byte_end":310888,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310893,"byte_end":310955,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":310960,"byte_end":311021,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311026,"byte_end":311087,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311092,"byte_end":311153,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311158,"byte_end":311222,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311227,"byte_end":311290,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311295,"byte_end":311356,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311361,"byte_end":311424,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311429,"byte_end":311490,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311495,"byte_end":311557,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311562,"byte_end":311623,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311628,"byte_end":311689,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311694,"byte_end":311701,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312471,"byte_end":312484,"line_start":268,"line_end":268,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311785,"byte_end":311878,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311883,"byte_end":311886,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311891,"byte_end":311985,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":311990,"byte_end":312086,"line_start":259,"line_end":259,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312091,"byte_end":312094,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312099,"byte_end":312110,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312115,"byte_end":312148,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312153,"byte_end":312216,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312221,"byte_end":312291,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312296,"byte_end":312366,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312371,"byte_end":312441,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312446,"byte_end":312453,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312884,"byte_end":312890,"line_start":281,"line_end":281,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312603,"byte_end":312646,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312651,"byte_end":312654,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312659,"byte_end":312670,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312675,"byte_end":312708,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312713,"byte_end":312779,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312784,"byte_end":312854,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312859,"byte_end":312866,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313305,"byte_end":313317,"line_start":295,"line_end":295,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":312953,"byte_end":313009,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313014,"byte_end":313017,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313022,"byte_end":313033,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313038,"byte_end":313071,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313076,"byte_end":313151,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313156,"byte_end":313171,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313176,"byte_end":313234,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313239,"byte_end":313264,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313269,"byte_end":313275,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313280,"byte_end":313287,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313751,"byte_end":313763,"line_start":309,"line_end":309,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313391,"byte_end":313447,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313452,"byte_end":313455,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313460,"byte_end":313471,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313476,"byte_end":313509,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313514,"byte_end":313589,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313594,"byte_end":313609,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313614,"byte_end":313676,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313681,"byte_end":313710,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313715,"byte_end":313721,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313726,"byte_end":313733,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314202,"byte_end":314213,"line_start":323,"line_end":323,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313837,"byte_end":313892,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313897,"byte_end":313900,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313905,"byte_end":313916,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313921,"byte_end":313954,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":313959,"byte_end":314033,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314038,"byte_end":314053,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314058,"byte_end":314123,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314128,"byte_end":314161,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314166,"byte_end":314172,"line_start":321,"line_end":321,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314177,"byte_end":314184,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314594,"byte_end":314598,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314286,"byte_end":314309,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314314,"byte_end":314317,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314322,"byte_end":314381,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314386,"byte_end":314389,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314394,"byte_end":314405,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314410,"byte_end":314443,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314448,"byte_end":314501,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314506,"byte_end":314564,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314569,"byte_end":314576,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314973,"byte_end":314979,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314649,"byte_end":314684,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314689,"byte_end":314692,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314697,"byte_end":314756,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314761,"byte_end":314764,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314769,"byte_end":314780,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314785,"byte_end":314818,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314823,"byte_end":314878,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314883,"byte_end":314943,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":314948,"byte_end":314955,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315358,"byte_end":315364,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315032,"byte_end":315069,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315074,"byte_end":315077,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315082,"byte_end":315141,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315146,"byte_end":315149,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315154,"byte_end":315165,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315170,"byte_end":315203,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315208,"byte_end":315263,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315268,"byte_end":315328,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315333,"byte_end":315340,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315767,"byte_end":315778,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315417,"byte_end":315460,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315465,"byte_end":315468,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315473,"byte_end":315535,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315540,"byte_end":315543,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315548,"byte_end":315559,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315564,"byte_end":315597,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315602,"byte_end":315662,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315667,"byte_end":315737,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315742,"byte_end":315749,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316233,"byte_end":316244,"line_start":391,"line_end":391,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315837,"byte_end":315880,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315885,"byte_end":315888,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315893,"byte_end":315959,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315964,"byte_end":315967,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315972,"byte_end":315983,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":315988,"byte_end":316021,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316026,"byte_end":316086,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316091,"byte_end":316106,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316111,"byte_end":316172,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316177,"byte_end":316192,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316197,"byte_end":316203,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316208,"byte_end":316215,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316709,"byte_end":316719,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316303,"byte_end":316345,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316350,"byte_end":316353,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316358,"byte_end":316428,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316433,"byte_end":316436,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316441,"byte_end":316452,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316457,"byte_end":316490,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316495,"byte_end":316554,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316559,"byte_end":316574,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316579,"byte_end":316643,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316648,"byte_end":316668,"line_start":404,"line_end":404,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316673,"byte_end":316679,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316684,"byte_end":316691,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317430,"byte_end":317443,"line_start":431,"line_end":431,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"pub const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316836,"byte_end":316922,"line_start":413,"line_end":413,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316927,"byte_end":316975,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316980,"byte_end":316983,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":316988,"byte_end":316999,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317004,"byte_end":317047,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317052,"byte_end":317067,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317072,"byte_end":317106,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317111,"byte_end":317151,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317156,"byte_end":317186,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317191,"byte_end":317213,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317218,"byte_end":317224,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317229,"byte_end":317244,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317249,"byte_end":317283,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317288,"byte_end":317327,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317332,"byte_end":317362,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317367,"byte_end":317389,"line_start":428,"line_end":428,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317394,"byte_end":317400,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317405,"byte_end":317412,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317945,"byte_end":317955,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"pub const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317609,"byte_end":317697,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317702,"byte_end":317725,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317730,"byte_end":317733,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317738,"byte_end":317749,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317754,"byte_end":317787,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317792,"byte_end":317807,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317812,"byte_end":317877,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317882,"byte_end":317904,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317909,"byte_end":317915,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":317920,"byte_end":317927,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318749,"byte_end":318760,"line_start":473,"line_end":473,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318161,"byte_end":318234,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318239,"byte_end":318242,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318247,"byte_end":318254,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318259,"byte_end":318306,"line_start":460,"line_end":460,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318311,"byte_end":318344,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318349,"byte_end":318389,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318394,"byte_end":318450,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318455,"byte_end":318458,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318463,"byte_end":318503,"line_start":465,"line_end":465,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318508,"byte_end":318561,"line_start":466,"line_end":466,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318566,"byte_end":318569,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318574,"byte_end":318589,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318594,"byte_end":318658,"line_start":469,"line_end":469,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318663,"byte_end":318708,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318713,"byte_end":318719,"line_start":471,"line_end":471,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":318724,"byte_end":318731,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319870,"byte_end":319881,"line_start":503,"line_end":503,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319282,"byte_end":319355,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319360,"byte_end":319363,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319368,"byte_end":319375,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319380,"byte_end":319427,"line_start":490,"line_end":490,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319432,"byte_end":319465,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319470,"byte_end":319510,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319515,"byte_end":319568,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319573,"byte_end":319576,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319581,"byte_end":319621,"line_start":495,"line_end":495,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319626,"byte_end":319682,"line_start":496,"line_end":496,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319687,"byte_end":319690,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319695,"byte_end":319710,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319715,"byte_end":319779,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319784,"byte_end":319829,"line_start":500,"line_end":500,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319834,"byte_end":319840,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":319845,"byte_end":319852,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321111,"byte_end":321125,"line_start":539,"line_end":539,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320477,"byte_end":320538,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320543,"byte_end":320546,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320551,"byte_end":320558,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320563,"byte_end":320623,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320628,"byte_end":320661,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320666,"byte_end":320681,"line_start":524,"line_end":524,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320686,"byte_end":320745,"line_start":525,"line_end":525,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320750,"byte_end":320780,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320785,"byte_end":320791,"line_start":527,"line_end":527,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320796,"byte_end":320799,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320804,"byte_end":320819,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320824,"byte_end":320880,"line_start":530,"line_end":530,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320885,"byte_end":320915,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320920,"byte_end":320926,"line_start":532,"line_end":532,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320931,"byte_end":320934,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320939,"byte_end":320954,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":320959,"byte_end":321026,"line_start":535,"line_end":535,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321031,"byte_end":321070,"line_start":536,"line_end":536,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321075,"byte_end":321081,"line_start":537,"line_end":537,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321086,"byte_end":321093,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322003,"byte_end":322017,"line_start":569,"line_end":569,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321369,"byte_end":321430,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321435,"byte_end":321438,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321443,"byte_end":321450,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321455,"byte_end":321515,"line_start":552,"line_end":552,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321520,"byte_end":321553,"line_start":553,"line_end":553,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321558,"byte_end":321573,"line_start":554,"line_end":554,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321578,"byte_end":321634,"line_start":555,"line_end":555,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321639,"byte_end":321669,"line_start":556,"line_end":556,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321674,"byte_end":321680,"line_start":557,"line_end":557,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321685,"byte_end":321688,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321693,"byte_end":321708,"line_start":559,"line_end":559,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321713,"byte_end":321772,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321777,"byte_end":321807,"line_start":561,"line_end":561,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321812,"byte_end":321818,"line_start":562,"line_end":562,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321823,"byte_end":321826,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321831,"byte_end":321846,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321851,"byte_end":321918,"line_start":565,"line_end":565,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321923,"byte_end":321962,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321967,"byte_end":321973,"line_start":567,"line_end":567,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":321978,"byte_end":321985,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322770,"byte_end":322782,"line_start":594,"line_end":594,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322409,"byte_end":322451,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322456,"byte_end":322459,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322464,"byte_end":322475,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322480,"byte_end":322521,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322526,"byte_end":322541,"line_start":588,"line_end":588,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322546,"byte_end":322608,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322613,"byte_end":322647,"line_start":590,"line_end":590,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322652,"byte_end":322658,"line_start":591,"line_end":591,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322663,"byte_end":322670,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322675,"byte_end":322752,"line_start":593,"line_end":593,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323224,"byte_end":323236,"line_start":608,"line_end":608,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322856,"byte_end":322898,"line_start":598,"line_end":598,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322903,"byte_end":322906,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322911,"byte_end":322922,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322927,"byte_end":322968,"line_start":601,"line_end":601,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322973,"byte_end":322988,"line_start":602,"line_end":602,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322993,"byte_end":323061,"line_start":603,"line_end":603,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323066,"byte_end":323101,"line_start":604,"line_end":604,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323106,"byte_end":323112,"line_start":605,"line_end":605,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323117,"byte_end":323124,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323129,"byte_end":323206,"line_start":607,"line_end":607,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323933,"byte_end":323945,"line_start":624,"line_end":624,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323310,"byte_end":323368,"line_start":612,"line_end":612,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323373,"byte_end":323376,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323381,"byte_end":323392,"line_start":614,"line_end":614,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323397,"byte_end":323430,"line_start":615,"line_end":615,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323435,"byte_end":323450,"line_start":616,"line_end":616,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323455,"byte_end":323514,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323519,"byte_end":323562,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323567,"byte_end":323573,"line_start":619,"line_end":619,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323578,"byte_end":323698,"line_start":620,"line_end":620,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323703,"byte_end":323821,"line_start":621,"line_end":621,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323826,"byte_end":323833,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":323838,"byte_end":323915,"line_start":623,"line_end":623,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324604,"byte_end":324617,"line_start":640,"line_end":640,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324089,"byte_end":324123,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324128,"byte_end":324131,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324136,"byte_end":324147,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324152,"byte_end":324185,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324190,"byte_end":324212,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324217,"byte_end":324232,"line_start":633,"line_end":633,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324237,"byte_end":324307,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324312,"byte_end":324355,"line_start":635,"line_end":635,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324360,"byte_end":324366,"line_start":636,"line_end":636,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324371,"byte_end":324492,"line_start":637,"line_end":637,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324497,"byte_end":324504,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324509,"byte_end":324586,"line_start":639,"line_end":639,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325321,"byte_end":325332,"line_start":656,"line_end":656,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324766,"byte_end":324799,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324804,"byte_end":324807,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324812,"byte_end":324823,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324828,"byte_end":324861,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324866,"byte_end":324881,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324886,"byte_end":324941,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324946,"byte_end":324989,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":324994,"byte_end":325000,"line_start":651,"line_end":651,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325005,"byte_end":325098,"line_start":652,"line_end":652,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325103,"byte_end":325209,"line_start":653,"line_end":653,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325214,"byte_end":325221,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325226,"byte_end":325303,"line_start":655,"line_end":655,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325959,"byte_end":325971,"line_start":671,"line_end":671,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325472,"byte_end":325499,"line_start":660,"line_end":660,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325504,"byte_end":325507,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325512,"byte_end":325523,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325528,"byte_end":325561,"line_start":663,"line_end":663,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325566,"byte_end":325581,"line_start":664,"line_end":664,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325586,"byte_end":325657,"line_start":665,"line_end":665,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325662,"byte_end":325720,"line_start":666,"line_end":666,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325725,"byte_end":325731,"line_start":667,"line_end":667,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325736,"byte_end":325847,"line_start":668,"line_end":668,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325852,"byte_end":325859,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":325864,"byte_end":325941,"line_start":670,"line_end":670,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326648,"byte_end":326662,"line_start":688,"line_end":688,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326142,"byte_end":326182,"line_start":677,"line_end":677,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326187,"byte_end":326190,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326195,"byte_end":326206,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326211,"byte_end":326244,"line_start":680,"line_end":680,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326249,"byte_end":326264,"line_start":681,"line_end":681,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326269,"byte_end":326342,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326347,"byte_end":326405,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326410,"byte_end":326416,"line_start":684,"line_end":684,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326421,"byte_end":326536,"line_start":685,"line_end":685,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326541,"byte_end":326548,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326553,"byte_end":326630,"line_start":687,"line_end":687,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327347,"byte_end":327361,"line_start":705,"line_end":705,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326839,"byte_end":326881,"line_start":694,"line_end":694,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326886,"byte_end":326889,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326894,"byte_end":326905,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326910,"byte_end":326943,"line_start":697,"line_end":697,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326948,"byte_end":326963,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":326968,"byte_end":327041,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327046,"byte_end":327104,"line_start":700,"line_end":700,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327109,"byte_end":327115,"line_start":701,"line_end":701,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327120,"byte_end":327235,"line_start":702,"line_end":702,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327240,"byte_end":327247,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327252,"byte_end":327329,"line_start":704,"line_end":704,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328064,"byte_end":328083,"line_start":722,"line_end":722,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327538,"byte_end":327585,"line_start":711,"line_end":711,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327590,"byte_end":327593,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327598,"byte_end":327609,"line_start":713,"line_end":713,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327614,"byte_end":327647,"line_start":714,"line_end":714,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327652,"byte_end":327667,"line_start":715,"line_end":715,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327672,"byte_end":327750,"line_start":716,"line_end":716,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327755,"byte_end":327805,"line_start":717,"line_end":717,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327810,"byte_end":327816,"line_start":718,"line_end":718,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327821,"byte_end":327952,"line_start":719,"line_end":719,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327957,"byte_end":327964,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":327969,"byte_end":328046,"line_start":721,"line_end":721,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328841,"byte_end":328860,"line_start":742,"line_end":742,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328299,"byte_end":328346,"line_start":731,"line_end":731,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328351,"byte_end":328354,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328359,"byte_end":328370,"line_start":733,"line_end":733,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328375,"byte_end":328408,"line_start":734,"line_end":734,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328413,"byte_end":328428,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328433,"byte_end":328515,"line_start":736,"line_end":736,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328520,"byte_end":328574,"line_start":737,"line_end":737,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328579,"byte_end":328585,"line_start":738,"line_end":738,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328590,"byte_end":328729,"line_start":739,"line_end":739,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328734,"byte_end":328741,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":328746,"byte_end":328823,"line_start":741,"line_end":741,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329630,"byte_end":329648,"line_start":762,"line_end":762,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329076,"byte_end":329122,"line_start":751,"line_end":751,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329127,"byte_end":329130,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329135,"byte_end":329146,"line_start":753,"line_end":753,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329151,"byte_end":329184,"line_start":754,"line_end":754,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329189,"byte_end":329204,"line_start":755,"line_end":755,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329209,"byte_end":329294,"line_start":756,"line_end":756,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329299,"byte_end":329357,"line_start":757,"line_end":757,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329362,"byte_end":329368,"line_start":758,"line_end":758,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329373,"byte_end":329518,"line_start":759,"line_end":759,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329523,"byte_end":329530,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329535,"byte_end":329612,"line_start":761,"line_end":761,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331630,"byte_end":331641,"line_start":814,"line_end":814,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331508,"byte_end":331569,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331574,"byte_end":331618,"line_start":813,"line_end":813,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332343,"byte_end":332349,"line_start":834,"line_end":834,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331866,"byte_end":331927,"line_start":822,"line_end":822,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331932,"byte_end":331976,"line_start":823,"line_end":823,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331981,"byte_end":331984,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331989,"byte_end":332000,"line_start":825,"line_end":825,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332005,"byte_end":332060,"line_start":826,"line_end":826,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332065,"byte_end":332158,"line_start":827,"line_end":827,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332163,"byte_end":332178,"line_start":828,"line_end":828,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332183,"byte_end":332239,"line_start":829,"line_end":829,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332244,"byte_end":332273,"line_start":830,"line_end":830,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332278,"byte_end":332284,"line_start":831,"line_end":831,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332289,"byte_end":332319,"line_start":832,"line_end":832,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332324,"byte_end":332331,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333084,"byte_end":333089,"line_start":853,"line_end":853,"column_start":12,"column_end":17},"name":"parse","qualname":"<PrimitiveDateTime>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `PrimitiveDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `PrimitiveDateTime` from the input using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332557,"byte_end":332630,"line_start":841,"line_end":841,"column_start":5,"column_end":78}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332635,"byte_end":332679,"line_start":842,"line_end":842,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332684,"byte_end":332687,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332692,"byte_end":332703,"line_start":844,"line_end":844,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, PrimitiveDateTime};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332708,"byte_end":332782,"line_start":845,"line_end":845,"column_start":5,"column_end":79}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332787,"byte_end":332880,"line_start":846,"line_end":846,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332885,"byte_end":332900,"line_start":847,"line_end":847,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::parse(\"2020-01-02 03:04:05\", &format)?,","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332905,"byte_end":332971,"line_start":848,"line_end":848,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-02 03:04:05)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332976,"byte_end":333014,"line_start":849,"line_end":849,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333019,"byte_end":333025,"line_start":850,"line_end":850,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333030,"byte_end":333060,"line_start":851,"line_end":851,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333065,"byte_end":333072,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336548,"byte_end":336552,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336191,"byte_end":336252,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336253,"byte_end":336256,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336257,"byte_end":336354,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336355,"byte_end":336389,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336390,"byte_end":336393,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336394,"byte_end":336475,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337438,"byte_end":337446,"line_start":63,"line_end":63,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":2139},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337251,"byte_end":337296,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337301,"byte_end":337304,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337309,"byte_end":337320,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337325,"byte_end":337362,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337367,"byte_end":337411,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337416,"byte_end":337423,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337975,"byte_end":338001,"line_start":78,"line_end":78,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"pub const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337898,"byte_end":337938,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338755,"byte_end":338763,"line_start":106,"line_end":106,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"pub const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338260,"byte_end":338325,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338330,"byte_end":338333,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338338,"byte_end":338349,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338354,"byte_end":338375,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338380,"byte_end":338425,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338430,"byte_end":338437,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338442,"byte_end":338445,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338450,"byte_end":338461,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338466,"byte_end":338487,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338492,"byte_end":338565,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338570,"byte_end":338645,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338650,"byte_end":338725,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":338730,"byte_end":338737,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339715,"byte_end":339729,"line_start":127,"line_end":127,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"pub const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339071,"byte_end":339149,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339154,"byte_end":339157,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339162,"byte_end":339173,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339178,"byte_end":339199,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339204,"byte_end":339258,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339263,"byte_end":339270,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339275,"byte_end":339278,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339283,"byte_end":339294,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339299,"byte_end":339320,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339325,"byte_end":339407,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339412,"byte_end":339496,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339501,"byte_end":339585,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339590,"byte_end":339685,"line_start":125,"line_end":125,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":339690,"byte_end":339697,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340891,"byte_end":340905,"line_start":159,"line_end":159,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"pub const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340239,"byte_end":340317,"line_start":145,"line_end":145,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340322,"byte_end":340325,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340330,"byte_end":340341,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340346,"byte_end":340367,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340372,"byte_end":340426,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340431,"byte_end":340438,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340443,"byte_end":340446,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340451,"byte_end":340462,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340467,"byte_end":340488,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340493,"byte_end":340575,"line_start":154,"line_end":154,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340580,"byte_end":340664,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340669,"byte_end":340753,"line_start":156,"line_end":156,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340758,"byte_end":340861,"line_start":157,"line_end":157,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":340866,"byte_end":340873,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342061,"byte_end":342074,"line_start":191,"line_end":191,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"pub const fn from_hms_nano(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341408,"byte_end":341485,"line_start":177,"line_end":177,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341490,"byte_end":341493,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341498,"byte_end":341509,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341514,"byte_end":341535,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341540,"byte_end":341593,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341598,"byte_end":341605,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341610,"byte_end":341613,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341618,"byte_end":341629,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341634,"byte_end":341655,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341660,"byte_end":341741,"line_start":186,"line_end":186,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341746,"byte_end":341829,"line_start":187,"line_end":187,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341834,"byte_end":341917,"line_start":188,"line_end":188,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":341922,"byte_end":342031,"line_start":189,"line_end":189,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342036,"byte_end":342043,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342834,"byte_end":342840,"line_start":215,"line_end":215,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342587,"byte_end":342630,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342635,"byte_end":342638,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342643,"byte_end":342654,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342659,"byte_end":342688,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342693,"byte_end":342744,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342749,"byte_end":342804,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342809,"byte_end":342816,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343206,"byte_end":343218,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342922,"byte_end":342978,"line_start":219,"line_end":219,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342983,"byte_end":342986,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":342991,"byte_end":343002,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343007,"byte_end":343036,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343041,"byte_end":343101,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343106,"byte_end":343176,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343181,"byte_end":343188,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343728,"byte_end":343740,"line_start":245,"line_end":245,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343402,"byte_end":343458,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343463,"byte_end":343466,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343471,"byte_end":343482,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343487,"byte_end":343516,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343521,"byte_end":343581,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343586,"byte_end":343601,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343606,"byte_end":343653,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343658,"byte_end":343687,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343692,"byte_end":343698,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343703,"byte_end":343710,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344183,"byte_end":344194,"line_start":259,"line_end":259,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343852,"byte_end":343907,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343912,"byte_end":343915,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343920,"byte_end":343931,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343936,"byte_end":343965,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":343970,"byte_end":344029,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344034,"byte_end":344049,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344054,"byte_end":344104,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344109,"byte_end":344142,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344147,"byte_end":344153,"line_start":257,"line_end":257,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344158,"byte_end":344165,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344575,"byte_end":344579,"line_start":272,"line_end":272,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344298,"byte_end":344321,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344326,"byte_end":344329,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344334,"byte_end":344393,"line_start":265,"line_end":265,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344398,"byte_end":344401,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344406,"byte_end":344417,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344422,"byte_end":344451,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344456,"byte_end":344497,"line_start":269,"line_end":269,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344502,"byte_end":344545,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344550,"byte_end":344557,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344916,"byte_end":344922,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344623,"byte_end":344658,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344663,"byte_end":344666,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344671,"byte_end":344730,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344735,"byte_end":344738,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344743,"byte_end":344754,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344759,"byte_end":344788,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344793,"byte_end":344836,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344841,"byte_end":344886,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344891,"byte_end":344898,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345263,"byte_end":345269,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":344968,"byte_end":345005,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345010,"byte_end":345013,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345018,"byte_end":345077,"line_start":291,"line_end":291,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345082,"byte_end":345085,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345090,"byte_end":345101,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345106,"byte_end":345135,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345140,"byte_end":345183,"line_start":295,"line_end":295,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345188,"byte_end":345233,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345238,"byte_end":345245,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345631,"byte_end":345642,"line_start":311,"line_end":311,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345315,"byte_end":345358,"line_start":302,"line_end":302,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345363,"byte_end":345366,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345371,"byte_end":345433,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345438,"byte_end":345441,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345446,"byte_end":345457,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345462,"byte_end":345491,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345496,"byte_end":345541,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345546,"byte_end":345601,"line_start":309,"line_end":309,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345606,"byte_end":345613,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346040,"byte_end":346051,"line_start":324,"line_end":324,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345712,"byte_end":345755,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345760,"byte_end":345763,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345768,"byte_end":345834,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345839,"byte_end":345842,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345847,"byte_end":345858,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345863,"byte_end":345892,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345897,"byte_end":345942,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":345947,"byte_end":346010,"line_start":322,"line_end":322,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346015,"byte_end":346022,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346447,"byte_end":346457,"line_start":337,"line_end":337,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346110,"byte_end":346152,"line_start":328,"line_end":328,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346157,"byte_end":346160,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346165,"byte_end":346235,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346240,"byte_end":346243,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346248,"byte_end":346259,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346264,"byte_end":346293,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346298,"byte_end":346342,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346347,"byte_end":346417,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":346422,"byte_end":346429,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351549,"byte_end":351561,"line_start":464,"line_end":464,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351136,"byte_end":351163,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351168,"byte_end":351171,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351176,"byte_end":351187,"line_start":455,"line_end":455,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351192,"byte_end":351221,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351226,"byte_end":351241,"line_start":457,"line_end":457,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351246,"byte_end":351298,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351303,"byte_end":351342,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351347,"byte_end":351353,"line_start":460,"line_end":460,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351358,"byte_end":351450,"line_start":461,"line_end":461,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351455,"byte_end":351462,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351467,"byte_end":351531,"line_start":463,"line_end":463,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352264,"byte_end":352278,"line_start":485,"line_end":485,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351832,"byte_end":351872,"line_start":474,"line_end":474,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351877,"byte_end":351880,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351885,"byte_end":351896,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351901,"byte_end":351930,"line_start":477,"line_end":477,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351935,"byte_end":351950,"line_start":478,"line_end":478,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":351955,"byte_end":352009,"line_start":479,"line_end":479,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352014,"byte_end":352053,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352058,"byte_end":352064,"line_start":481,"line_end":481,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352069,"byte_end":352165,"line_start":482,"line_end":482,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352170,"byte_end":352177,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352182,"byte_end":352246,"line_start":484,"line_end":484,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352987,"byte_end":353001,"line_start":506,"line_end":506,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352553,"byte_end":352595,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352600,"byte_end":352603,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352608,"byte_end":352619,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352624,"byte_end":352653,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352658,"byte_end":352673,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352678,"byte_end":352732,"line_start":500,"line_end":500,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352737,"byte_end":352776,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352781,"byte_end":352787,"line_start":502,"line_end":502,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352792,"byte_end":352888,"line_start":503,"line_end":503,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352893,"byte_end":352900,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":352905,"byte_end":352969,"line_start":505,"line_end":505,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353728,"byte_end":353747,"line_start":527,"line_end":527,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353276,"byte_end":353323,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353328,"byte_end":353331,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353336,"byte_end":353347,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353352,"byte_end":353381,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353386,"byte_end":353401,"line_start":520,"line_end":520,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353406,"byte_end":353465,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353470,"byte_end":353501,"line_start":522,"line_end":522,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353506,"byte_end":353512,"line_start":523,"line_end":523,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353517,"byte_end":353629,"line_start":524,"line_end":524,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353634,"byte_end":353641,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":353646,"byte_end":353710,"line_start":526,"line_end":526,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354545,"byte_end":354564,"line_start":551,"line_end":551,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354077,"byte_end":354124,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354129,"byte_end":354132,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354137,"byte_end":354148,"line_start":542,"line_end":542,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354153,"byte_end":354182,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354187,"byte_end":354202,"line_start":544,"line_end":544,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354207,"byte_end":354270,"line_start":545,"line_end":545,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354275,"byte_end":354310,"line_start":546,"line_end":546,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354315,"byte_end":354321,"line_start":547,"line_end":547,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354326,"byte_end":354446,"line_start":548,"line_end":548,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354451,"byte_end":354458,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354463,"byte_end":354527,"line_start":550,"line_end":550,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355366,"byte_end":355384,"line_start":575,"line_end":575,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354886,"byte_end":354932,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354937,"byte_end":354940,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354945,"byte_end":354956,"line_start":566,"line_end":566,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354961,"byte_end":354990,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":354995,"byte_end":355010,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355015,"byte_end":355081,"line_start":569,"line_end":569,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355086,"byte_end":355125,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355130,"byte_end":355136,"line_start":571,"line_end":571,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355141,"byte_end":355267,"line_start":572,"line_end":572,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355272,"byte_end":355279,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355284,"byte_end":355348,"line_start":574,"line_end":574,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355884,"byte_end":355895,"line_start":591,"line_end":591,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355783,"byte_end":355872,"line_start":590,"line_end":590,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356479,"byte_end":356485,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356111,"byte_end":356200,"line_start":599,"line_end":599,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356205,"byte_end":356208,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356213,"byte_end":356224,"line_start":601,"line_end":601,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356229,"byte_end":356280,"line_start":602,"line_end":602,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356285,"byte_end":356357,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356362,"byte_end":356420,"line_start":604,"line_end":604,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356425,"byte_end":356455,"line_start":605,"line_end":605,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356460,"byte_end":356467,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357094,"byte_end":357099,"line_start":626,"line_end":626,"column_start":12,"column_end":17},"name":"parse","qualname":"<Time>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Time` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Time` from the input using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356694,"byte_end":356754,"line_start":617,"line_end":617,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356759,"byte_end":356803,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356808,"byte_end":356811,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356816,"byte_end":356827,"line_start":620,"line_end":620,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time, Time};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356832,"byte_end":356889,"line_start":621,"line_end":621,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356894,"byte_end":356966,"line_start":622,"line_end":622,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Time::parse(\"12:00:00\", &format)?, time!(12:00));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356971,"byte_end":357035,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357040,"byte_end":357070,"line_start":624,"line_end":624,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357075,"byte_end":357082,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362145,"byte_end":362154,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":361851,"byte_end":361874,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":361875,"byte_end":361878,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":361879,"byte_end":361976,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":361977,"byte_end":362014,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362566,"byte_end":362569,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362386,"byte_end":362416,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362421,"byte_end":362424,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362429,"byte_end":362440,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362445,"byte_end":362489,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362494,"byte_end":362539,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362544,"byte_end":362551,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362895,"byte_end":362915,"line_start":47,"line_end":47,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"pub const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362648,"byte_end":362744,"line_start":43,"line_end":43,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362749,"byte_end":362844,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362849,"byte_end":362858,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363575,"byte_end":363583,"line_start":67,"line_end":67,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"pub const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363060,"byte_end":363152,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363157,"byte_end":363170,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363175,"byte_end":363178,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363183,"byte_end":363277,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363282,"byte_end":363311,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363316,"byte_end":363319,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363324,"byte_end":363335,"line_start":61,"line_end":61,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363340,"byte_end":363366,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363371,"byte_end":363437,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363442,"byte_end":363510,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363515,"byte_end":363545,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":363550,"byte_end":363557,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364541,"byte_end":364559,"line_start":97,"line_end":97,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"pub const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364260,"byte_end":364342,"line_start":90,"line_end":90,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364347,"byte_end":364350,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364355,"byte_end":364366,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364371,"byte_end":364397,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364402,"byte_end":364476,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364481,"byte_end":364511,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364516,"byte_end":364523,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365307,"byte_end":365313,"line_start":117,"line_end":117,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"pub const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":364901,"byte_end":364995,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365000,"byte_end":365096,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365101,"byte_end":365104,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365109,"byte_end":365120,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365125,"byte_end":365156,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365161,"byte_end":365215,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365220,"byte_end":365277,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365282,"byte_end":365289,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365743,"byte_end":365754,"line_start":129,"line_end":129,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"pub const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365398,"byte_end":365488,"line_start":121,"line_end":121,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365493,"byte_end":365540,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365545,"byte_end":365548,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365553,"byte_end":365564,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365569,"byte_end":365600,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365605,"byte_end":365656,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365661,"byte_end":365713,"line_start":127,"line_end":127,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365718,"byte_end":365725,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366152,"byte_end":366165,"line_start":141,"line_end":141,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365799,"byte_end":365891,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365896,"byte_end":365943,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365948,"byte_end":365951,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365956,"byte_end":365967,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":365972,"byte_end":366003,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366008,"byte_end":366062,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366067,"byte_end":366122,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366127,"byte_end":366134,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366612,"byte_end":366629,"line_start":153,"line_end":153,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"pub const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366245,"byte_end":366332,"line_start":145,"line_end":145,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366337,"byte_end":366397,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366402,"byte_end":366405,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366410,"byte_end":366421,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366426,"byte_end":366457,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366462,"byte_end":366519,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366524,"byte_end":366582,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366587,"byte_end":366594,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367165,"byte_end":367178,"line_start":167,"line_end":167,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366676,"byte_end":366768,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366773,"byte_end":366820,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366825,"byte_end":366828,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366833,"byte_end":366844,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366849,"byte_end":366880,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366885,"byte_end":366941,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":366946,"byte_end":367003,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367008,"byte_end":367015,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367661,"byte_end":367680,"line_start":179,"line_end":179,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"pub const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367288,"byte_end":367377,"line_start":171,"line_end":171,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367382,"byte_end":367442,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367447,"byte_end":367450,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367455,"byte_end":367466,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367471,"byte_end":367502,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367507,"byte_end":367566,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367571,"byte_end":367631,"line_start":177,"line_end":177,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367636,"byte_end":367643,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368046,"byte_end":368052,"line_start":194,"line_end":194,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"pub const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367777,"byte_end":367816,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367821,"byte_end":367824,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367829,"byte_end":367832,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367837,"byte_end":367848,"line_start":188,"line_end":188,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367853,"byte_end":367884,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367889,"byte_end":367930,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367935,"byte_end":367976,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":367981,"byte_end":368016,"line_start":192,"line_end":192,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368021,"byte_end":368028,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368435,"byte_end":368446,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368146,"byte_end":368198,"line_start":198,"line_end":198,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368203,"byte_end":368206,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368211,"byte_end":368222,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368227,"byte_end":368258,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368263,"byte_end":368308,"line_start":202,"line_end":202,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368313,"byte_end":368359,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368364,"byte_end":368405,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368410,"byte_end":368417,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368826,"byte_end":368837,"line_start":218,"line_end":218,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368537,"byte_end":368589,"line_start":210,"line_end":210,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368594,"byte_end":368597,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368602,"byte_end":368613,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368618,"byte_end":368649,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368654,"byte_end":368700,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368705,"byte_end":368750,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368755,"byte_end":368796,"line_start":216,"line_end":216,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":368801,"byte_end":368808,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370354,"byte_end":370365,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\nimpl Formattable + ?Sized: Formattable +\n?Sized>(Self, &mut impl io::Write, &impl Formattable + ?Sized)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370248,"byte_end":370342,"line_start":260,"line_end":260,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370966,"byte_end":370972,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"pub fn format<impl Formattable + ?Sized: Formattable +\n?Sized>(Self, &impl Formattable + ?Sized) -> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370574,"byte_end":370668,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370673,"byte_end":370676,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370681,"byte_end":370692,"line_start":271,"line_end":271,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370697,"byte_end":370750,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370755,"byte_end":370847,"line_start":273,"line_end":273,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370852,"byte_end":370907,"line_start":274,"line_end":274,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370912,"byte_end":370942,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370947,"byte_end":370954,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371578,"byte_end":371583,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"parse","qualname":"<UtcOffset>::parse","value":"pub fn parse<impl Parsable + ?Sized: Parsable +\n?Sized>(&str, &impl Parsable + ?Sized) -> Result<Self, error::Parse>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `UtcOffset` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `UtcOffset` from the input using the provided [format","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371156,"byte_end":371221,"line_start":284,"line_end":284,"column_start":5,"column_end":70}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371226,"byte_end":371270,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371275,"byte_end":371278,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371283,"byte_end":371294,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset, UtcOffset};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371299,"byte_end":371363,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ let format = format_description::parse(\"[offset_hour]:[offset_minute]\")?;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371368,"byte_end":371445,"line_start":289,"line_end":289,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(UtcOffset::parse(\"-03:42\", &format)?, offset!(-3:42));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371450,"byte_end":371519,"line_start":290,"line_end":290,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371524,"byte_end":371554,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371559,"byte_end":371566,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372289,"byte_end":372311,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372806,"byte_end":372824,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"pub const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372612,"byte_end":372668,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372669,"byte_end":372672,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372673,"byte_end":372684,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372685,"byte_end":372715,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372716,"byte_end":372784,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":372785,"byte_end":372792,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373523,"byte_end":373535,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"pub const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373098,"byte_end":373187,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373188,"byte_end":373281,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373282,"byte_end":373285,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373286,"byte_end":373297,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373298,"byte_end":373333,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373334,"byte_end":373367,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373368,"byte_end":373400,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373401,"byte_end":373433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373434,"byte_end":373467,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373468,"byte_end":373501,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373502,"byte_end":373509,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374008,"byte_end":374020,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"pub const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373616,"byte_end":373668,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373669,"byte_end":373672,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373673,"byte_end":373729,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373730,"byte_end":373733,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373734,"byte_end":373745,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373746,"byte_end":373781,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373782,"byte_end":373822,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373823,"byte_end":373863,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373864,"byte_end":373904,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373905,"byte_end":373945,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373946,"byte_end":373986,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":373987,"byte_end":373994,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374351,"byte_end":374364,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"pub const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374091,"byte_end":374135,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374136,"byte_end":374139,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374140,"byte_end":374194,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374195,"byte_end":374198,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374199,"byte_end":374210,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374211,"byte_end":374247,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374248,"byte_end":374288,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374289,"byte_end":374329,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":374330,"byte_end":374337,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375323,"byte_end":375329,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375271,"byte_end":375318,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375387,"byte_end":375394,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375335,"byte_end":375382,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375452,"byte_end":375461,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375400,"byte_end":375447,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375519,"byte_end":375527,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375467,"byte_end":375514,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375585,"byte_end":375591,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375533,"byte_end":375580,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375649,"byte_end":375657,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375597,"byte_end":375644,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375715,"byte_end":375721,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375663,"byte_end":375710,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375257,"byte_end":375264,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"pub enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3533},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3543}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375010,"byte_end":375031,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375032,"byte_end":375035,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375036,"byte_end":375131,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375132,"byte_end":375196,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375923,"byte_end":375931,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375745,"byte_end":375774,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375779,"byte_end":375782,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375787,"byte_end":375798,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375803,"byte_end":375827,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375832,"byte_end":375893,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375898,"byte_end":375905,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376386,"byte_end":376390,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376216,"byte_end":376241,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376246,"byte_end":376249,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376254,"byte_end":376265,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376270,"byte_end":376294,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376299,"byte_end":376356,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376361,"byte_end":376368,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376911,"byte_end":376929,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"pub const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376675,"byte_end":376726,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376731,"byte_end":376734,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376739,"byte_end":376750,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376755,"byte_end":376779,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376784,"byte_end":376840,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376845,"byte_end":376852,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377193,"byte_end":377211,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"pub const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":376998,"byte_end":377049,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377054,"byte_end":377057,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377062,"byte_end":377073,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377078,"byte_end":377102,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377107,"byte_end":377163,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377168,"byte_end":377175,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377481,"byte_end":377504,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"pub const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377280,"byte_end":377332,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377337,"byte_end":377340,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377345,"byte_end":377356,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377361,"byte_end":377385,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377390,"byte_end":377451,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377456,"byte_end":377463,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377749,"byte_end":377772,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"pub const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377548,"byte_end":377600,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377605,"byte_end":377608,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377613,"byte_end":377624,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377629,"byte_end":377653,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377658,"byte_end":377719,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":377724,"byte_end":377731,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10942,"byte_end":10948,"line_start":330,"line_end":330,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10850,"byte_end":10932,"line_start":329,"line_end":329,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43646,"byte_end":43650,"line_start":918,"line_end":918,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44527,"byte_end":44531,"line_start":942,"line_end":942,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91464,"byte_end":91470,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92048,"byte_end":92054,"line_start":43,"line_end":43,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92158,"byte_end":92163,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92449,"byte_end":92455,"line_start":61,"line_end":61,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92789,"byte_end":92794,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92970,"byte_end":92976,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94986,"byte_end":94991,"line_start":51,"line_end":51,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95263,"byte_end":95287,"line_start":61,"line_end":61,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95575,"byte_end":95599,"line_start":72,"line_end":72,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96409,"byte_end":96433,"line_start":95,"line_end":95,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96731,"byte_end":96745,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96922,"byte_end":96936,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96978,"byte_end":96983,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":97103,"byte_end":97117,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98113,"byte_end":98118,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98483,"byte_end":98488,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98853,"byte_end":98858,"line_start":45,"line_end":45,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99028,"byte_end":99041,"line_start":52,"line_end":52,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99377,"byte_end":99382,"line_start":64,"line_end":64,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99566,"byte_end":99586,"line_start":71,"line_end":71,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99921,"byte_end":99926,"line_start":83,"line_end":83,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100327,"byte_end":100332,"line_start":94,"line_end":94,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101391,"byte_end":101411,"line_start":20,"line_end":20,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101788,"byte_end":101808,"line_start":32,"line_end":32,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101915,"byte_end":101920,"line_start":35,"line_end":35,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102121,"byte_end":102141,"line_start":42,"line_end":42,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103066,"byte_end":103079,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103444,"byte_end":103457,"line_start":31,"line_end":31,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103588,"byte_end":103602,"line_start":37,"line_end":37,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103911,"byte_end":103924,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104234,"byte_end":104239,"line_start":59,"line_end":59,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104426,"byte_end":104439,"line_start":66,"line_end":66,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121600,"byte_end":121614,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":139068,"byte_end":139077,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117468,"byte_end":117478,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118010,"byte_end":118020,"line_start":130,"line_end":130,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118148,"byte_end":118157,"line_start":136,"line_end":136,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118464,"byte_end":118474,"line_start":147,"line_end":147,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118929,"byte_end":118939,"line_start":164,"line_end":164,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119111,"byte_end":119120,"line_start":170,"line_end":170,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119239,"byte_end":119249,"line_start":176,"line_end":176,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164299,"byte_end":164309,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164379,"byte_end":164386,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164411,"byte_end":164418,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164453,"byte_end":164454,"line_start":20,"line_end":20,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165611,"byte_end":165621,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":166822,"byte_end":166823,"line_start":91,"line_end":91,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":167218,"byte_end":167225,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":169182,"byte_end":169189,"line_start":157,"line_end":157,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174003,"byte_end":174010,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176927,"byte_end":176934,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177034,"byte_end":177044,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177127,"byte_end":177134,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177670,"byte_end":177677,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177821,"byte_end":177831,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177976,"byte_end":177983,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178313,"byte_end":178323,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178478,"byte_end":178485,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178726,"byte_end":178733,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179063,"byte_end":179073,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179228,"byte_end":179235,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179484,"byte_end":179491,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179599,"byte_end":179609,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179719,"byte_end":179726,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179865,"byte_end":179875,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180010,"byte_end":180017,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180111,"byte_end":180118,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185570,"byte_end":185575,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187554,"byte_end":187559,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188083,"byte_end":188088,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188813,"byte_end":188818,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190633,"byte_end":190647,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217615,"byte_end":217629,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227380,"byte_end":227394,"line_start":1073,"line_end":1073,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228764,"byte_end":228778,"line_start":1112,"line_end":1112,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230226,"byte_end":230240,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230460,"byte_end":230474,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230593,"byte_end":230607,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230720,"byte_end":230734,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230853,"byte_end":230867,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231126,"byte_end":231140,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231458,"byte_end":231472,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231784,"byte_end":231798,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231977,"byte_end":231987,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232437,"byte_end":232447,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232708,"byte_end":232722,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232899,"byte_end":232909,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233102,"byte_end":233116,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233266,"byte_end":233276,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233437,"byte_end":233451,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233637,"byte_end":233647,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233836,"byte_end":233850,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234222,"byte_end":234232,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258294,"byte_end":258304,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258368,"byte_end":258375,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258397,"byte_end":258404,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258436,"byte_end":258437,"line_start":19,"line_end":19,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260773,"byte_end":260783,"line_start":81,"line_end":81,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261242,"byte_end":261243,"line_start":101,"line_end":101,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261555,"byte_end":261562,"line_start":116,"line_end":116,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":268262,"byte_end":268269,"line_start":278,"line_end":278,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":280445,"byte_end":280451,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288987,"byte_end":288993,"line_start":265,"line_end":265,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291124,"byte_end":291130,"line_start":332,"line_end":332,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293803,"byte_end":293809,"line_start":415,"line_end":415,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295792,"byte_end":295796,"line_start":476,"line_end":476,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":298078,"byte_end":298082,"line_start":536,"line_end":536,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":299243,"byte_end":299252,"line_start":564,"line_end":564,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":300023,"byte_end":300040,"line_start":586,"line_end":586,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":300242,"byte_end":300256,"line_start":594,"line_end":594,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":235051,"byte_end":235061,"line_start":16,"line_end":16,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":235794,"byte_end":235804,"line_start":35,"line_end":35,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":236019,"byte_end":236029,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303681,"byte_end":303698,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322385,"byte_end":322402,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329982,"byte_end":329999,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331484,"byte_end":331501,"line_start":811,"line_end":811,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332533,"byte_end":332550,"line_start":840,"line_end":840,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333283,"byte_end":333300,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333504,"byte_end":333521,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333729,"byte_end":333746,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334284,"byte_end":334301,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334509,"byte_end":334526,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":335066,"byte_end":335083,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336927,"byte_end":336931,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337240,"byte_end":337244,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355772,"byte_end":355776,"line_start":589,"line_end":589,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2169},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356683,"byte_end":356687,"line_start":616,"line_end":616,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357288,"byte_end":357292,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358316,"byte_end":358320,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2180},{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358786,"byte_end":358790,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359327,"byte_end":359331,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359804,"byte_end":359808,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360342,"byte_end":360346,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362370,"byte_end":362379,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370232,"byte_end":370241,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371140,"byte_end":371149,"line_start":283,"line_end":283,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371774,"byte_end":371783,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372130,"byte_end":372139,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375731,"byte_end":375738,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":378027,"byte_end":378034,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":378410,"byte_end":378417,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9676,"byte_end":9681,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":332}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9691,"byte_end":9694,"line_start":285,"line_end":285,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":563}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9761,"byte_end":9779,"line_start":287,"line_end":287,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":629}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":113692,"byte_end":113700,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":676}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9820,"byte_end":9830,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":771}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9904,"byte_end":9910,"line_start":293,"line_end":293,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1070}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9981,"byte_end":9988,"line_start":297,"line_end":297,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1294}},{"kind":"Mod","span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10450,"byte_end":10454,"line_start":314,"line_end":314,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2241}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43646,"byte_end":43650,"line_start":918,"line_end":918,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":44527,"byte_end":44531,"line_start":942,"line_end":942,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2343},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3152}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3160}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":7749}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":7749}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2481},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2481},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2481},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2502},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2502},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2502},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2515},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2515},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2515},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":91464,"byte_end":91470,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92048,"byte_end":92054,"line_start":43,"line_end":43,"column_start":26,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92158,"byte_end":92163,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92449,"byte_end":92455,"line_start":61,"line_end":61,"column_start":28,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2528},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92789,"byte_end":92794,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\format.rs","byte_start":92970,"byte_end":92976,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":94986,"byte_end":94991,"line_start":51,"line_end":51,"column_start":48,"column_end":53},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95263,"byte_end":95287,"line_start":61,"line_end":61,"column_start":32,"column_end":56},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2539},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":95575,"byte_end":95599,"line_start":72,"line_end":72,"column_start":23,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2539},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_format_description.rs","byte_start":96409,"byte_end":96433,"line_start":95,"line_end":95,"column_start":28,"column_end":52},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2539},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96731,"byte_end":96745,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2561},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96922,"byte_end":96936,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2561},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":96978,"byte_end":96983,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":97103,"byte_end":97117,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2561},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98113,"byte_end":98118,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2574},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98483,"byte_end":98488,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2574},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":98853,"byte_end":98858,"line_start":45,"line_end":45,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2574},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99028,"byte_end":99041,"line_start":52,"line_end":52,"column_start":25,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2613},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99377,"byte_end":99382,"line_start":64,"line_end":64,"column_start":37,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2574},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99566,"byte_end":99586,"line_start":71,"line_end":71,"column_start":25,"column_end":45},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2595},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":99921,"byte_end":99926,"line_start":83,"line_end":83,"column_start":29,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse.rs","byte_start":100327,"byte_end":100332,"line_start":94,"line_end":94,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2574},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101391,"byte_end":101411,"line_start":20,"line_end":20,"column_start":23,"column_end":43},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2595},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101788,"byte_end":101808,"line_start":32,"line_end":32,"column_start":28,"column_end":48},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2595},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":101915,"byte_end":101920,"line_start":35,"line_end":35,"column_start":44,"column_end":49},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\parse_from_description.rs","byte_start":102121,"byte_end":102141,"line_start":42,"line_end":42,"column_start":32,"column_end":52},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2595},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103066,"byte_end":103079,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2613},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103444,"byte_end":103457,"line_start":31,"line_end":31,"column_start":38,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2613},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103588,"byte_end":103602,"line_start":37,"line_end":37,"column_start":40,"column_end":54},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2481},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":103911,"byte_end":103924,"line_start":49,"line_end":49,"column_start":28,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2613},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104234,"byte_end":104239,"line_start":59,"line_end":59,"column_start":37,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\try_from_parsed.rs","byte_start":104426,"byte_end":104439,"line_start":66,"line_end":66,"column_start":32,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2613},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2631},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":106760,"byte_end":106766,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":571},"to":{"krate":0,"index":575}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":110418,"byte_end":110424,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":571},"to":{"krate":0,"index":602}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\component.rs","byte_start":121600,"byte_end":121614,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\modifier.rs","byte_start":139068,"byte_end":139077,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":117468,"byte_end":117478,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3168},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118010,"byte_end":118020,"line_start":130,"line_end":130,"column_start":26,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3168},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118148,"byte_end":118157,"line_start":136,"line_end":136,"column_start":34,"column_end":43},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118464,"byte_end":118474,"line_start":147,"line_end":147,"column_start":41,"column_end":51},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3168},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":118929,"byte_end":118939,"line_start":164,"line_end":164,"column_start":31,"column_end":41},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3168},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119111,"byte_end":119120,"line_start":170,"line_end":170,"column_start":36,"column_end":45},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2660},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\format_description\\mod.rs","byte_start":119239,"byte_end":119249,"line_start":176,"line_end":176,"column_start":39,"column_end":49},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3168},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164268,"byte_end":164274,"line_start":15,"line_end":15,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":827},"to":{"krate":0,"index":818}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164299,"byte_end":164309,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3168},"to":{"krate":0,"index":818}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164379,"byte_end":164386,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3142},"to":{"krate":0,"index":818}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164411,"byte_end":164418,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3155},"to":{"krate":0,"index":818}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":164453,"byte_end":164454,"line_start":20,"line_end":20,"column_start":32,"column_end":33},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":824},"to":{"krate":0,"index":818}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":165611,"byte_end":165621,"line_start":54,"line_end":54,"column_start":29,"column_end":39},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3168},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":166822,"byte_end":166823,"line_start":91,"line_end":91,"column_start":35,"column_end":36},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":840},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":167218,"byte_end":167225,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3155},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\formatting\\formattable.rs","byte_start":169182,"byte_end":169189,"line_start":157,"line_end":157,"column_start":25,"column_end":32},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3142},"to":{"krate":0,"index":827}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":174003,"byte_end":174010,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":176927,"byte_end":176934,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177034,"byte_end":177044,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"kind":{"Impl":{"id":187}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177127,"byte_end":177134,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177670,"byte_end":177677,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177821,"byte_end":177831,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"kind":{"Impl":{"id":190}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":177976,"byte_end":177983,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178313,"byte_end":178323,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178478,"byte_end":178485,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":178726,"byte_end":178733,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179063,"byte_end":179073,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"kind":{"Impl":{"id":198}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179228,"byte_end":179235,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179484,"byte_end":179491,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179599,"byte_end":179609,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"kind":{"Impl":{"id":204}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179719,"byte_end":179726,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":179865,"byte_end":179875,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"kind":{"Impl":{"id":206}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180010,"byte_end":180017,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":180111,"byte_end":180118,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":185570,"byte_end":185575,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":187554,"byte_end":187559,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3233},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188083,"byte_end":188088,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3233},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":188813,"byte_end":188818,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3233},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":190633,"byte_end":190647,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":217615,"byte_end":217629,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":227380,"byte_end":227394,"line_start":1073,"line_end":1073,"column_start":6,"column_end":20},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":228764,"byte_end":228778,"line_start":1112,"line_end":1112,"column_start":6,"column_end":20},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230226,"byte_end":230240,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230460,"byte_end":230474,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230593,"byte_end":230607,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230720,"byte_end":230734,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2745}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":230853,"byte_end":230867,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":9892}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231126,"byte_end":231140,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231458,"byte_end":231472,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231784,"byte_end":231798,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":231977,"byte_end":231987,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232437,"byte_end":232447,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"kind":{"Impl":{"id":232}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232708,"byte_end":232722,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":232899,"byte_end":232909,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"kind":{"Impl":{"id":235}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233102,"byte_end":233116,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233266,"byte_end":233276,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"kind":{"Impl":{"id":237}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233437,"byte_end":233451,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233637,"byte_end":233647,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"kind":{"Impl":{"id":239}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":233836,"byte_end":233850,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":234222,"byte_end":234232,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"kind":{"Impl":{"id":241}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258266,"byte_end":258272,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1568},"to":{"krate":0,"index":1559}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258294,"byte_end":258304,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3168},"to":{"krate":0,"index":1559}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258368,"byte_end":258375,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3155},"to":{"krate":0,"index":1559}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258397,"byte_end":258404,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3142},"to":{"krate":0,"index":1559}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":258436,"byte_end":258437,"line_start":19,"line_end":19,"column_start":29,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1565},"to":{"krate":0,"index":1559}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":260773,"byte_end":260783,"line_start":81,"line_end":81,"column_start":25,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3168},"to":{"krate":0,"index":1568}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261242,"byte_end":261243,"line_start":101,"line_end":101,"column_start":35,"column_end":36},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1584},"to":{"krate":0,"index":1568}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":261555,"byte_end":261562,"line_start":116,"line_end":116,"column_start":25,"column_end":32},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3155},"to":{"krate":0,"index":1568}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsable.rs","byte_start":268262,"byte_end":268269,"line_start":278,"line_end":278,"column_start":25,"column_end":32},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3142},"to":{"krate":0,"index":1568}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":280445,"byte_end":280451,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":288987,"byte_end":288993,"line_start":265,"line_end":265,"column_start":6,"column_end":12},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":291124,"byte_end":291130,"line_start":332,"line_end":332,"column_start":6,"column_end":12},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":293803,"byte_end":293809,"line_start":415,"line_end":415,"column_start":6,"column_end":12},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":295792,"byte_end":295796,"line_start":476,"line_end":476,"column_start":26,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":298078,"byte_end":298082,"line_start":536,"line_end":536,"column_start":26,"column_end":30},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":299243,"byte_end":299252,"line_start":564,"line_end":564,"column_start":26,"column_end":35},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":300023,"byte_end":300040,"line_start":586,"line_end":586,"column_start":26,"column_end":43},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\parsed.rs","byte_start":300242,"byte_end":300256,"line_start":594,"line_end":594,"column_start":26,"column_end":40},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\shim.rs","byte_start":302061,"byte_end":302066,"line_start":16,"line_end":16,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1950}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":235051,"byte_end":235061,"line_start":16,"line_end":16,"column_start":13,"column_end":23},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":235794,"byte_end":235804,"line_start":35,"line_end":35,"column_start":10,"column_end":20},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\parsing\\mod.rs","byte_start":236019,"byte_end":236029,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":303681,"byte_end":303698,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":322385,"byte_end":322402,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":329982,"byte_end":329999,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":331484,"byte_end":331501,"line_start":811,"line_end":811,"column_start":6,"column_end":23},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":332533,"byte_end":332550,"line_start":840,"line_end":840,"column_start":6,"column_end":23},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333283,"byte_end":333300,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333504,"byte_end":333521,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":333729,"byte_end":333746,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334284,"byte_end":334301,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":334509,"byte_end":334526,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":335066,"byte_end":335083,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":336927,"byte_end":336931,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":337240,"byte_end":337244,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":355772,"byte_end":355776,"line_start":589,"line_end":589,"column_start":6,"column_end":10},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":356683,"byte_end":356687,"line_start":616,"line_end":616,"column_start":6,"column_end":10},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":357288,"byte_end":357292,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358316,"byte_end":358320,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":358786,"byte_end":358790,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359327,"byte_end":359331,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":359804,"byte_end":359808,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":360342,"byte_end":360346,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":362370,"byte_end":362379,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":370232,"byte_end":370241,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371140,"byte_end":371149,"line_start":283,"line_end":283,"column_start":6,"column_end":15},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":371774,"byte_end":371783,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":372130,"byte_end":372139,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3507},"to":{"krate":2,"index":3152}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":375731,"byte_end":375738,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":378027,"byte_end":378034,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3530},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\trexx\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":378410,"byte_end":378417,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3530},"to":{"krate":2,"index":12324}}]}